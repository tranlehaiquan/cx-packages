{
    "servers" : [
        {
            "url" : "https://api.skedulo.com/auth"
        }
    ],
    "openapi" : "3.0.0",
    "info" : {
        "title" : "Authentication API",
        "description" : "Skedulo Authentication API",
        "version" : "1.0.0"
    },
    "paths" : {
        "/config/regions" : {
            "get" : {
                "summary" : "Return configuration for all available authentication regions.",
                "operationId" : "configRegions",
                "responses" : {
                    "200" : {
                        "description" : "Successful result",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "type" : "object",
                                    "properties" : {
                                        "result" : {
                                            "type" : "array",
                                            "items" : {
                                                "$ref" : "#/components/schemas/RegionConfig"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/config/team/web" : {
            "get" : {
                "summary" : "Return region-specific configuration for a team.",
                "description" : "Return server base URLs and web authentication configuration. These server URLs depend on the deployment region of the team and must be used for API requests.",
                "operationId" : "configTeamWeb",
                "parameters" : [
                    {
                        "name" : "name",
                        "in" : "query",
                        "description" : "The name of the team",
                        "required" : true,
                        "schema" : {
                            "type" : "string"
                        }
                    }
                ],
                "responses" : {
                    "200" : {
                        "description" : "Successful result",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/ResultOKTeamConfig"
                                }
                            }
                        }
                    },
                    "400" : {
                        "description" : "If no team with the given name exists"
                    }
                }
            }
        },
        "/config/team/mobile" : {
            "get" : {
                "summary" : "Return mobile authentication configuration for a team.",
                "operationId" : "configTeamMobile",
                "parameters" : [
                    {
                        "name" : "name",
                        "in" : "query",
                        "description" : "Lookup a specific mobile config for a team given its name",
                        "required" : true,
                        "schema" : {
                            "type" : "string"
                        }
                    }
                ],
                "responses" : {
                    "200" : {
                        "description" : "Successful result",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/ResultOKTeamConfig"
                                }
                            }
                        }
                    },
                    "400" : {
                        "description" : "If no team with the given name exists"
                    }
                }
            }
        },
        "/config/team/mobile/v3" : {
            "get" : {
                "summary" : "Return mobile v3 authentication configuration for a team.",
                "operationId" : "configTeamMobileV3",
                "parameters" : [
                    {
                        "name" : "name",
                        "in" : "query",
                        "description" : "Lookup a specific mobile v3 config for a team given its name",
                        "required" : true,
                        "schema" : {
                            "type" : "string"
                        }
                    }
                ],
                "responses" : {
                    "200" : {
                        "description" : "Successful result",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/ResultOKTeamConfig"
                                }
                            }
                        }
                    },
                    "400" : {
                        "description" : "If no team with the given name exists"
                    }
                }
            }
        },
        "/config/team/web/user" : {
            "get" : {
                "summary" : "Return web authentication configuration for the team the current user belongs to.",
                "operationId" : "configTeamWebUser",
                "responses" : {
                    "200" : {
                        "description" : "Successful result",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/ResultOKTeamConfig"
                                }
                            }
                        }
                    },
                    "401" : {
                        "description" : "If the current user's token is not valid"
                    },
                    "412" : {
                        "description" : "If the current user does not belong to a team"
                    }
                }
            }
        },
        "/config/team/mobile/user" : {
            "get" : {
                "summary" : "Return mobile authentication configuration for the team the current user belongs to.",
                "operationId" : "configTeamMobileUser",
                "responses" : {
                    "200" : {
                        "description" : "Successful result",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/ResultOKTeamConfig"
                                }
                            }
                        }
                    },
                    "401" : {
                        "description" : "If the current user's token is not valid"
                    },
                    "412" : {
                        "description" : "If the current user does not belong to a team"
                    }
                }
            }
        },
        "/config/team/mobile/v3/user" : {
            "get" : {
                "summary" : "Return mobile v3 authentication configuration for the team the current user belongs to.",
                "operationId" : "configTeamMobileV3User",
                "responses" : {
                    "200" : {
                        "description" : "Successful result",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/ResultOKTeamConfig"
                                }
                            }
                        }
                    },
                    "401" : {
                        "description" : "If the current user's token is not valid"
                    },
                    "412" : {
                        "description" : "If the current user does not belong to a team"
                    }
                }
            }
        },
        "/config" : {
            "get" : {
                "deprecated" : true,
                "summary" : "Return authentication config for a team name",
                "description" : "Uses the current url domain or the domain query string if provided. This endpoint is deprecated, use /config/team/web instead.",
                "operationId" : "config",
                "parameters" : [
                    {
                        "name" : "domain",
                        "in" : "query",
                        "description" : "Lookup a specific domain",
                        "required" : false,
                        "schema" : {
                            "type" : "string"
                        }
                    }
                ],
                "responses" : {
                    "200" : {
                        "description" : "Successful result",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/ResultOKConfig"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth_config" : {
            "get" : {
                "deprecated" : true,
                "summary" : "Return authentication config for a given team",
                "description" : "Return config for a given domain, as well as all the necessary configurations to establish an Auth0 authentication session. This endpoint is deprecated, use /config/team/mobile or /config/team/web instead.",
                "operationId" : "authConfig",
                "parameters" : [
                    {
                        "name" : "client_type",
                        "in" : "query",
                        "description" : "The type of the client e.g. Xamarin mobile app or Phoenix webapp",
                        "required" : true,
                        "schema" : {
                            "type" : "string",
                            "enum" : [
                                "xamarin",
                                "phoenix"
                            ]
                        }
                    },
                    {
                        "name" : "domain",
                        "in" : "query",
                        "description" : "Lookup a specific domain. If not provided, the domain is parsed from Host HTTP header",
                        "required" : false,
                        "schema" : {
                            "type" : "string"
                        }
                    }
                ],
                "responses" : {
                    "200" : {
                        "description" : "Successful result",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/AuthConfigResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/delegate" : {
            "post" : {
                "security" : [
                    {
                        "Authorization" : [
                        ]
                    }
                ],
                "summary" : "Delgation request",
                "description" : "Return the access information for a storage provider.",
                "operationId" : "delegate",
                "responses" : {
                    "200" : {
                        "description" : "The access information was returned",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/ResultOKSFDCOAuthSession"
                                }
                            }
                        }
                    }
                },
                "requestBody" : {
                    "content" : {
                        "application/json" : {
                            "schema" : {
                                "$ref" : "#/components/schemas/DelegationParams"
                            }
                        }
                    },
                    "description" : "Parameters containing information about the delegation request.",
                    "required" : true
                }
            }
        },
        "/whoami" : {
            "get" : {
                "security" : [
                    {
                        "Authorization" : [
                        ]
                    }
                ],
                "summary" : "Whoami",
                "description" : "Return the current user's authentication information",
                "operationId" : "whoami",
                "parameters" : [
                    {
                        "name" : "access_token",
                        "in" : "query",
                        "description" : "Access token. This is an alternative to passing the Authorization: `Bearer` header",
                        "required" : false,
                        "schema" : {
                            "type" : "string"
                        }
                    }
                ],
                "responses" : {
                    "200" : {
                        "description" : "The current users authentication information was returned",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/ResultOKUserInfo"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/rules/resolve" : {
            "post" : {
                "security" : [
                    {
                        "Authorization" : [
                        ]
                    }
                ],
                "summary" : "Resolves the supplied rule definitions into valid EQL filters",
                "description" : "Resolves the supplied rule definitions into valid EQL filters (combining rules by object type, and returning errors for any invalid filter definitions). Requires the useRecordAccessPolicies feature flag.",
                "operationId" : "rules_resolve",
                "requestBody" : {
                    "content" : {
                        "application/json" : {
                            "schema" : {
                                "type" : "object",
                                "required" : [
                                    "accessRules"
                                ],
                                "properties" : {
                                    "accessRules" : {
                                        "type" : "array",
                                        "items" : {
                                            "$ref" : "#/components/schemas/RecordAccessRule"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required" : true
                },
                "responses" : {
                    "200" : {
                        "description" : "Success",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/ResultOKResolvedAccessRules"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/rules/user" : {
            "get" : {
                "security" : [
                    {
                        "Authorization" : [
                        ]
                    }
                ],
                "summary" : "Data access rules for the current user",
                "description" : "Return the current user's data access rules. Requires the useRecordAccessPolicies feature flag.",
                "operationId" : "rules_user",
                "responses" : {
                    "200" : {
                        "description" : "Success",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/ResultOKAccessRules"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api_user" : {
            "post" : {
                "security" : [
                    {
                        "Authorization" : [
                        ]
                    }
                ],
                "summary" : "Set a user as the API User for this tenant",
                "description" : "The user assigning the API user must be an administrator.\n\n>NOTE:\n>If you make any modifications to the user assigned as the API User, you need to set the user as the API User again to ensure the data stored for the user is up to date. Otherwise, some claims in the access token will be outdated.",
                "operationId" : "setApiUser",
                "responses" : {
                    "200" : {
                        "description" : "The user was successfully setup as the API User.",
                        "content" : {
                            "*/*" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/ClientCredentialsInstructions"
                                }
                            }
                        }
                    },
                    "403" : {
                        "description" : "If the user is not an administrator"
                    }
                },
                "requestBody" : {
                    "content" : {
                        "application/json" : {
                            "schema" : {
                                "type" : "object",
                                "required" : [
                                    "userId"
                                ],
                                "properties" : {
                                    "userId" : {
                                        "type" : "string",
                                        "description" : "Skedulo User ID of the user to be setup as the API User"
                                    }
                                }
                            }
                        }
                    },
                    "required" : true
                }
            },
            "delete" : {
                "security" : [
                    {
                        "Authorization" : [
                        ]
                    }
                ],
                "summary" : "Remove the API User for this tenant",
                "description" : "Removes the API User for this tenant if they have one. If the tenant is on Standalone this will reset their API user to the system user. The caller must be an administrator.",
                "operationId" : "removeApiUser",
                "responses" : {
                    "200" : {
                        "description" : "successful result"
                    },
                    "403" : {
                        "description" : "If the user is not an administrator"
                    }
                }
            }
        },
        "/api_user/client_credentials" : {
            "get" : {
                "security" : [
                    {
                        "Authorization" : [
                        ]
                    }
                ],
                "summary" : "Get client credentials information for the API user",
                "description" : "The user requesting this information must be an administrator for their organization.",
                "operationId" : "getApiUserClientCredentials",
                "responses" : {
                    "200" : {
                        "description" : "Client credentials information of the API user",
                        "content" : {
                            "*/*" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/ClientCredentialsInstructions"
                                }
                            }
                        }
                    },
                    "403" : {
                        "description" : "User is not an administrator"
                    },
                    "404" : {
                        "description" : "API user is not setup"
                    }
                }
            }
        },
        "/api_user/candidates" : {
            "get" : {
                "security" : [
                    {
                        "Authorization" : [
                        ]
                    }
                ],
                "summary" : "List API user candidates",
                "description" : "List candidates that can be set as the API user and the current API user. Only users with role `administrator` are returned.",
                "operationId" : "listApiUserCandidates",
                "responses" : {
                    "200" : {
                        "description" : "List of candidates that can be assigned as the API User",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "type" : "object",
                                    "required" : [
                                        "result"
                                    ],
                                    "properties" : {
                                        "result" : {
                                            "type" : "object",
                                            "required" : [
                                                "candidates"
                                            ],
                                            "properties" : {
                                                "currentApiUserId" : {
                                                    "type" : "string",
                                                    "description" : "User ID of the current API User"
                                                },
                                                "moreCandidatesExist" : {
                                                    "type" : "boolean",
                                                    "description" : "True if only a subset of all available candidates is being returned"
                                                },
                                                "candidates" : {
                                                    "type" : "array",
                                                    "items" : {
                                                        "type" : "object",
                                                        "required" : [
                                                            "userId",
                                                            "vendorUserId",
                                                            "lastName",
                                                            "username",
                                                            "roles",
                                                            "email",
                                                            "emailVerified"
                                                        ],
                                                        "properties" : {
                                                            "userId" : {
                                                                "type" : "string"
                                                            },
                                                            "vendorUserId" : {
                                                                "type" : "string"
                                                            },
                                                            "firstName" : {
                                                                "type" : "string"
                                                            },
                                                            "lastName" : {
                                                                "type" : "string"
                                                            },
                                                            "username" : {
                                                                "type" : "string"
                                                            },
                                                            "resourceId" : {
                                                                "type" : "string"
                                                            },
                                                            "roles" : {
                                                                "$ref" : "#/components/schemas/Roles"
                                                            },
                                                            "email" : {
                                                                "type" : "string",
                                                                "format" : "email"
                                                            },
                                                            "emailVerified" : {
                                                                "type" : "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api_user/verify" : {
            "get" : {
                "security" : [
                    {
                        "Authorization" : [
                        ]
                    }
                ],
                "summary" : "Check if the API user is verified",
                "description" : "",
                "operationId" : "verifyApiUser",
                "responses" : {
                    "200" : {
                        "description" : "If the result contains success equal to true the API user is verified, otherwise it is not.",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "type" : "object",
                                    "required" : [
                                        "result"
                                    ],
                                    "properties" : {
                                        "result" : {
                                            "type" : "object",
                                            "required" : [
                                                "success"
                                            ],
                                            "properties" : {
                                                "success" : {
                                                    "type" : "boolean"
                                                },
                                                "code" : {
                                                    "type" : "string"
                                                },
                                                "message" : {
                                                    "type" : "boolean"
                                                },
                                                "extraFields" : {
                                                    "type" : "object",
                                                    "description" : "Additional information about the error",
                                                    "additionalProperties" : true
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/metadata/user" : {
            "get" : {
                "security" : [
                    {
                        "Authorization" : [
                        ]
                    }
                ],
                "summary" : "Current user metadata",
                "description" : "Fetch metadata about the current user.",
                "operationId" : "metadataUser",
                "responses" : {
                    "200" : {
                        "description" : "The current users metadata",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "type" : "object",
                                    "properties" : {
                                        "created" : {
                                            "$ref" : "#/components/schemas/UserMetadata"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "412" : {
                        "description" : "The user belongs to a tenant that is not associated with a team"
                    }
                }
            }
        },
        "/forgot_team_name" : {
            "post" : {
                "summary" : "Find team name",
                "description" : "Find all team names for all users with a provided email, and sends the team names to the email",
                "operationId" : "forgotTeamName",
                "responses" : {
                    "200" : {
                        "description" : "Some users have been found for the given email, and the team names have been sent to the email"
                    },
                    "409" : {
                        "description" : "No user found for the given email",
                        "content" : {
                            "*/*" : {
                                "schema" : {
                                    "type" : "object",
                                    "example" : {
                                        "errorType" : "user_not_found",
                                        "message" : "A user with the email address jacob.wang@gmail.com cannot be found"
                                    }
                                }
                            }
                        }
                    }
                },
                "requestBody" : {
                    "content" : {
                        "application/json" : {
                            "schema" : {
                                "type" : "object",
                                "required" : [
                                    "email"
                                ],
                                "properties" : {
                                    "email" : {
                                        "type" : "string",
                                        "format" : "email",
                                        "description" : "The email to search all users by"
                                    }
                                }
                            }
                        }
                    },
                    "required" : true
                }
            }
        },
        "/link_resource" : {
            "post" : {
                "security" : [
                    {
                        "Authorization" : [
                        ]
                    }
                ],
                "summary" : "Create link between resource and user",
                "description" : "Links (assigns) a resource to a user by their respective Ids.",
                "operationId" : "linkResource",
                "responses" : {
                    "200" : {
                        "description" : "User and resource were successfully linked."
                    },
                    "403" : {
                        "description" : "The user does not have permission to perform this action."
                    },
                    "404" : {
                        "description" : "No user found for the given id.",
                        "content" : {
                            "*/*" : {
                                "schema" : {
                                    "type" : "object",
                                    "example" : {
                                        "errorType" : "not_found",
                                        "message" : "Could not find user with vendor user id 1234"
                                    }
                                }
                            }
                        }
                    }
                },
                "requestBody" : {
                    "content" : {
                        "application/json" : {
                            "schema" : {
                                "type" : "object",
                                "required" : [
                                    "userId",
                                    "resourceId"
                                ],
                                "properties" : {
                                    "userId" : {
                                        "type" : "string",
                                        "description" : "The user id of the user to be linked to given resource"
                                    },
                                    "resourceId" : {
                                        "type" : "string",
                                        "description" : "The resource id of the resource to be linked to given user"
                                    }
                                }
                            }
                        }
                    },
                    "required" : true
                }
            },
            "delete" : {
                "security" : [
                    {
                        "Authorization" : [
                        ]
                    }
                ],
                "summary" : "Remove link between resource and user",
                "description" : "Unlinked a resource to a user by their respective Ids.",
                "operationId" : "unlinkResource",
                "responses" : {
                    "200" : {
                        "description" : "successful result"
                    },
                    "403" : {
                        "description" : "The user does not have permission to perform this action."
                    },
                    "404" : {
                        "description" : "No user found for the given id.",
                        "content" : {
                            "*/*" : {
                                "schema" : {
                                    "type" : "object",
                                    "example" : {
                                        "errorType" : "not_found",
                                        "message" : "Could not find user with vendor user id 1234"
                                    }
                                }
                            }
                        }
                    }
                },
                "requestBody" : {
                    "content" : {
                        "application/json" : {
                            "schema" : {
                                "type" : "object",
                                "required" : [
                                    "user_id",
                                    "resource_id"
                                ],
                                "properties" : {
                                    "user_id" : {
                                        "type" : "string",
                                        "description" : "The user id of the user to be linked to given resource"
                                    },
                                    "resource_id" : {
                                        "type" : "string",
                                        "description" : "The resource id of the resource to be linked to given user"
                                    }
                                }
                            }
                        }
                    },
                    "required" : true
                }
            }
        },
        "/tokens" : {
            "get" : {
                "summary" : "List all API tokens",
                "description" : "List all the available and revoked API tokens.",
                "operationId" : "fetchAll",
                "responses" : {
                    "200" : {
                        "description" : "Return information about all the available and revoked API tokens.",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "type" : "object",
                                    "properties" : {
                                        "result" : {
                                            "type" : "array",
                                            "items" : {
                                                "$ref" : "#/components/schemas/ApiTokenInfo"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/token/{jti}" : {
            "get" : {
                "summary" : "Get API token using JTI",
                "description" : "Get an API token by specifying its JTI.",
                "operationId" : "fetchAllApiTokens",
                "parameters" : [
                    {
                        "in" : "path",
                        "name" : "jti",
                        "description" : "The JWT Identifier for the API token",
                        "required" : true,
                        "schema" : {
                            "type" : "string"
                        }
                    }
                ],
                "responses" : {
                    "200" : {
                        "description" : "Return information about the requested API token",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "type" : "object",
                                    "properties" : {
                                        "result" : {
                                            "$ref" : "#/components/schemas/ApiTokenInfo"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/token" : {
            "post" : {
                "summary" : "Create API token",
                "description" : "Create an API token with an optional expiry. This token can be used to authenticate as the same user that created it (with the same claims) for as long as the token is valid. Tokens may be revoked.",
                "operationId" : "createApiToken",
                "requestBody" : {
                    "content" : {
                        "application/json" : {
                            "schema" : {
                                "type" : "object",
                                "properties" : {
                                    "expiry" : {
                                        "description" : "Optional expiry. If omitted the token is valid forever.",
                                        "type" : "string",
                                        "format" : "date-time"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses" : {
                    "200" : {
                        "description" : "Return the API token",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "type" : "object",
                                    "required" : [
                                        "result"
                                    ],
                                    "properties" : {
                                        "result" : {
                                            "type" : "object",
                                            "required" : [
                                                "token",
                                                "jti"
                                            ],
                                            "properties" : {
                                                "token" : {
                                                    "type" : "string",
                                                    "format" : "base64",
                                                    "example" : "5l8l/TyAG+282cBi0JoAp8Gj2WtnXjhxkHKu5J+ytWJcp5kHG9I7k...A=="
                                                },
                                                "jti" : {
                                                    "type" : "string",
                                                    "example" : "x62ThdBIqHVmILpLKdHbZctTaEzySGGc"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/token/revoke" : {
            "post" : {
                "summary" : "Revoke API token",
                "description" : "Revoke an API token so it can no longer be used. The token will be returned but marked as revoked. It cannot be used to authenticate once revoked.",
                "operationId" : "revokeToken",
                "requestBody" : {
                    "content" : {
                        "application/json" : {
                            "schema" : {
                                "type" : "object",
                                "properties" : {
                                    "jti" : {
                                        "description" : "JWT Identfier of token to revoke",
                                        "type" : "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses" : {
                    "200" : {
                        "description" : "The token was revoked",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "type" : "object",
                                    "required" : [
                                        "result"
                                    ],
                                    "properties" : {
                                        "result" : {
                                            "type" : "object"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components" : {
        "securitySchemes" : {
            "Authorization" : {
                "type" : "apiKey",
                "in" : "header",
                "name" : "Authorization"
            }
        },
        "schemas" : {
            "AuthConfigResponse" : {
                "type" : "object",
                "required" : [
                    "authConfig"
                ],
                "properties" : {
                    "authConfig" : {
                        "description" : "Configurations specific to this Skedulo API Server",
                        "type" : "object",
                        "required" : [
                            "clientId",
                            "audience",
                            "authDomain"
                        ],
                        "properties" : {
                            "clientId" : {
                                "type" : "string",
                                "description" : "The client ID of the client application the authentication will be performed on"
                            },
                            "audience" : {
                                "type" : "string",
                                "description" : "The audience field of the Skedulo API server"
                            },
                            "authDomain" : {
                                "type" : "string",
                                "description" : "The domain the client should initiate authentication with"
                            }
                        }
                    },
                    "tenantConfig" : {
                        "description" : "Configuration specific to the tenant (the tenant is determined through the provided domain). This field is null if no tenant is found for the given domain, otherwise it's an object containing all the tenant configurations that's set. (which can be empty object, if nothing is set)",
                        "type" : "object",
                        "properties" : {
                            "auth0LockConfig" : {
                                "$ref" : "#/components/schemas/Auth0LockConfig"
                            }
                        }
                    }
                }
            },
            "DelegationParams" : {
                "type" : "object",
                "required" : [
                    "clientId",
                    "target",
                    "idToken"
                ],
                "properties" : {
                    "clientId" : {
                        "type" : "string",
                        "description" : "The client ID requesting this delegation. This should match the 'azp' (Authorized Party) field in the JWT"
                    },
                    "target" : {
                        "type" : "string",
                        "description" : "The target to acquire delegation for",
                        "enum" : [
                            "salesforce",
                            "salesforce-sandbox"
                        ]
                    },
                    "idToken" : {
                        "type" : "string",
                        "description" : "The ID Token representing the identity of the user"
                    }
                }
            },
            "AccessToken" : {
                "type" : "object",
                "required" : [
                    "value"
                ],
                "properties" : {
                    "value" : {
                        "type" : "string"
                    }
                }
            },
            "UserInfo" : {
                "type" : "object",
                "required" : [
                    "username",
                    "userId",
                    "tenantId",
                    "roles",
                    "vendorInfo"
                ],
                "properties" : {
                    "username" : {
                        "type" : "string"
                    },
                    "userId" : {
                        "type" : "string"
                    },
                    "tenantId" : {
                        "type" : "string"
                    },
                    "roles" : {
                        "$ref" : "#/components/schemas/Roles"
                    },
                    "resourceId" : {
                        "type" : "string"
                    },
                    "vendorInfo" : {
                        "$ref" : "#/components/schemas/VendorInfo"
                    },
                    "permissions" : {
                        "$ref" : "#/components/schemas/Permissions"
                    }
                }
            },
            "Roles" : {
                "type" : "array",
                "items" : {
                    "type" : "string",
                    "enum" : [
                        "administrator",
                        "scheduler",
                        "resource"
                    ]
                }
            },
            "VendorInfo" : {
                "oneOf" : [
                    {
                        "type" : "object",
                        "required" : [
                            "vendor",
                            "env"
                        ],
                        "properties" : {
                            "vendor" : {
                                "type" : "string",
                                "example" : "salesforce"
                            },
                            "env" : {
                                "type" : "string",
                                "enum" : [
                                    "salesforce",
                                    "salesforce-sandbox"
                                ]
                            },
                            "communityId" : {
                                "type" : "string",
                                "description" : "community ID for this user if this user belongs to one"
                            },
                            "vendorUserId" : {
                                "type" : "string",
                                "description" : "Salesforce user ID of this user"
                            }
                        }
                    },
                    {
                        "type" : "object",
                        "required" : [
                            "vendor"
                        ],
                        "properties" : {
                            "vendor" : {
                                "type" : "string",
                                "example" : "skedulo"
                            },
                            "vendorUserId" : {
                                "type" : "string",
                                "description" : "Skedulo user ID of this user"
                            }
                        }
                    }
                ]
            },
            "Permissions" : {
                "description" : "The permissions for the user. Only present if the useNewPermissions feature flag is enabled.",
                "type" : "array",
                "items" : {
                    "description" : "Permission keys assigned to the user",
                    "type" : "string"
                }
            },
            "RecordAccessRule" : {
                "type" : "object",
                "required" : [
                    "objectType",
                    "filter",
                    "accessType"
                ],
                "properties" : {
                    "objectType" : {
                        "description" : "The type of object that the rule applies to",
                        "type" : "string"
                    },
                    "filter" : {
                        "description" : "EQL filter that is applied when accessing records of the object type",
                        "type" : "string"
                    },
                    "accessType" : {
                        "description" : "Whether the rule allows or denies access",
                        "type" : "string",
                        "enum" : [
                            "allow",
                            "deny"
                        ]
                    }
                }
            },
            "ResolvedAccessRule" : {
                "type" : "object",
                "required" : [
                    "objectType",
                    "filter"
                ],
                "properties" : {
                    "objectType" : {
                        "description" : "The type of object that the rule applies to",
                        "type" : "string"
                    },
                    "filter" : {
                        "description" : "EQL filter that is applied when accessing records of the object type",
                        "type" : "string"
                    }
                }
            },
            "ResolvedAccessRuleError" : {
                "description" : "Error details when resolving access rules for an object type",
                "type" : "object",
                "required" : [
                    "objectType",
                    "message"
                ],
                "properties" : {
                    "objectType" : {
                        "description" : "The object type of the rule in error",
                        "type" : "string"
                    },
                    "message" : {
                        "description" : "The error message",
                        "type" : "string"
                    }
                }
            },
            "ResultOKTeamConfig" : {
                "type" : "object",
                "properties" : {
                    "result" : {
                        "$ref" : "#/components/schemas/TeamConfig"
                    }
                }
            },
            "RegionConfig" : {
                "type" : "object",
                "required" : [
                    "region",
                    "name",
                    "auth0",
                    "server"
                ],
                "properties" : {
                    "region" : {
                        "type" : "string",
                        "enum" : [
                            "au",
                            "eu",
                            "us"
                        ]
                    },
                    "name" : {
                        "type" : "string"
                    },
                    "auth0" : {
                        "$ref" : "#/components/schemas/RegionConfigAuth0"
                    },
                    "server" : {
                        "type" : "object",
                        "required" : [
                            "api"
                        ],
                        "properties" : {
                            "api" : {
                                "type" : "string"
                            }
                        }
                    }
                }
            },
            "RegionConfigAuth0" : {
                "type" : "object",
                "required" : [
                    "clientId",
                    "audience",
                    "domain"
                ],
                "properties" : {
                    "clientId" : {
                        "type" : "string"
                    },
                    "audience" : {
                        "type" : "string"
                    },
                    "domain" : {
                        "type" : "string"
                    }
                }
            },
            "TeamConfig" : {
                "type" : "object",
                "required" : [
                    "region",
                    "team",
                    "auth0",
                    "server",
                    "newCustomerModel"
                ],
                "properties" : {
                    "region" : {
                        "type" : "string"
                    },
                    "team" : {
                        "type" : "object",
                        "required" : [
                            "name"
                        ],
                        "properties" : {
                            "name" : {
                                "type" : "string"
                            },
                            "tenantId" : {
                                "type" : "string",
                                "description" : "The tenant id that belongs to the team. Only returned for a Skedulo cloned team."
                            }
                        }
                    },
                    "auth0" : {
                        "$ref" : "#/components/schemas/TeamConfigAuth0"
                    },
                    "server" : {
                        "type" : "object",
                        "required" : [
                            "api",
                            "uiPlatform"
                        ],
                        "properties" : {
                            "api" : {
                                "type" : "string"
                            },
                            "uiPlatform" : {
                                "type" : "string"
                            }
                        }
                    },
                    "newCustomerModel" : {
                        "type" : "boolean"
                    }
                }
            },
            "TeamConfigAuth0" : {
                "type" : "object",
                "required" : [
                    "clientId",
                    "audience",
                    "domain",
                    "lock"
                ],
                "properties" : {
                    "clientId" : {
                        "type" : "string"
                    },
                    "audience" : {
                        "type" : "string"
                    },
                    "domain" : {
                        "type" : "string"
                    },
                    "lock" : {
                        "$ref" : "#/components/schemas/TeamConfigAuth0Lock"
                    }
                }
            },
            "TeamConfigAuth0Lock" : {
                "type" : "object",
                "required" : [
                    "allowedConnections",
                    "theme"
                ],
                "properties" : {
                    "allowedConnections" : {
                        "type" : "array",
                        "items" : {
                            "type" : "string"
                        }
                    },
                    "theme" : {
                        "type" : "object",
                        "required" : [
                            "authButtons"
                        ],
                        "properties" : {
                            "authButtons" : {
                                "type" : "object",
                                "additionalProperties" : {
                                    "type" : "object",
                                    "required" : [
                                        "authButtons"
                                    ],
                                    "properties" : {
                                        "displayName" : {
                                            "type" : "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "ResultOKConfig" : {
                "type" : "object",
                "properties" : {
                    "result" : {
                        "$ref" : "#/components/schemas/Config"
                    }
                }
            },
            "Config" : {
                "type" : "object",
                "required" : [
                    "auth0LockConfig",
                    "env"
                ],
                "properties" : {
                    "auth0LockConfig" : {
                        "$ref" : "#/components/schemas/Auth0LockConfig"
                    },
                    "env" : {
                        "$ref" : "#/components/schemas/EnvConfig"
                    }
                }
            },
            "Auth0LockConfig" : {
                "type" : "object",
                "properties" : {
                    "allowedConnections" : {
                        "type" : "array",
                        "items" : {
                            "type" : "string"
                        }
                    }
                }
            },
            "EnvConfig" : {
                "type" : "object",
                "required" : [
                    "apiServer",
                    "auth0ClientId",
                    "auth0ClientDomain",
                    "auth0Audience"
                ],
                "properties" : {
                    "apiServer" : {
                        "type" : "string"
                    },
                    "auth0ClientId" : {
                        "$ref" : "#/components/schemas/Auth0ClientIdEnv"
                    },
                    "auth0ClientDomain" : {
                        "type" : "string"
                    },
                    "auth0Audience" : {
                        "type" : "string"
                    }
                }
            },
            "Auth0ClientIdEnv" : {
                "type" : "object",
                "required" : [
                    "web",
                    "mobile"
                ],
                "properties" : {
                    "web" : {
                        "type" : "string"
                    },
                    "mobile" : {
                        "type" : "string"
                    }
                }
            },
            "ResultOKUserInfo" : {
                "type" : "object",
                "properties" : {
                    "result" : {
                        "$ref" : "#/components/schemas/UserInfo"
                    }
                }
            },
            "ResultOKAccessRules" : {
                "type" : "object",
                "properties" : {
                    "result" : {
                        "type" : "array",
                        "items" : {
                            "$ref" : "#/components/schemas/ResolvedAccessRule"
                        }
                    }
                }
            },
            "ResultOKResolvedAccessRules" : {
                "type" : "object",
                "properties" : {
                    "valid" : {
                        "description" : "Whether all of the supplied rules resolved successfully (i.e. are valid)",
                        "type" : "boolean"
                    },
                    "accessRules" : {
                        "description" : "The resolved access rules (one for each object type)",
                        "type" : "array",
                        "items" : {
                            "$ref" : "#/components/schemas/ResolvedAccessRule"
                        }
                    },
                    "errors" : {
                        "description" : "Any errors for rules that couldn't be resolved",
                        "type" : "array",
                        "items" : {
                            "$ref" : "#/components/schemas/ResolvedAccessRuleError"
                        }
                    }
                }
            },
            "ResultOKSFDCOAuthSession" : {
                "type" : "object",
                "properties" : {
                    "result" : {
                        "$ref" : "#/components/schemas/SFDCOAuthSession"
                    }
                }
            },
            "SFDCOAuthSession" : {
                "type" : "object",
                "required" : [
                    "access_token",
                    "instance_url"
                ],
                "properties" : {
                    "access_token" : {
                        "type" : "string"
                    },
                    "instance_url" : {
                        "type" : "string"
                    }
                }
            },
            "UserMetadata" : {
                "type" : "object",
                "required" : [
                    "id",
                    "email",
                    "username",
                    "fullName",
                    "lastName",
                    "team"
                ],
                "properties" : {
                    "id" : {
                        "type" : "string"
                    },
                    "email" : {
                        "type" : "string"
                    },
                    "username" : {
                        "type" : "string"
                    },
                    "fullName" : {
                        "type" : "string"
                    },
                    "firstName" : {
                        "type" : "string"
                    },
                    "lastName" : {
                        "type" : "string"
                    },
                    "team" : {
                        "$ref" : "#/components/schemas/TeamMetadata"
                    },
                    "resource" : {
                        "$ref" : "#/components/schemas/ResourceMetadata"
                    }
                }
            },
            "TeamMetadata" : {
                "type" : "object",
                "required" : [
                    "id",
                    "name",
                    "description",
                    "vendor",
                    "orgId"
                ],
                "properties" : {
                    "id" : {
                        "type" : "string"
                    },
                    "name" : {
                        "description" : "A valid DNS sub domain",
                        "type" : "string"
                    },
                    "description" : {
                        "description" : "A human friendly name",
                        "type" : "string"
                    },
                    "vendor" : {
                        "description" : "The vendor associated with this organization",
                        "type" : "string",
                        "enum" : [
                            "salesforce",
                            "servicenow",
                            "skedulo"
                        ]
                    },
                    "orgId" : {
                        "description" : "The vendor specific organization ID",
                        "type" : "string"
                    },
                    "customer" : {
                        "description" : "The customer name.",
                        "type" : "string"
                    }
                }
            },
            "ResourceMetadata" : {
                "type" : "object",
                "required" : [
                    "id",
                    "timezone"
                ],
                "properties" : {
                    "id" : {
                        "type" : "string"
                    },
                    "category" : {
                        "type" : "string"
                    },
                    "employmentType" : {
                        "type" : "string"
                    },
                    "address" : {
                        "type" : "string"
                    },
                    "latitude" : {
                        "type" : "number"
                    },
                    "longitude" : {
                        "type" : "number"
                    },
                    "mobilePhone" : {
                        "type" : "string"
                    },
                    "timezone" : {
                        "type" : "string"
                    }
                }
            },
            "ClientCredentialsInstructions" : {
                "type" : "object",
                "required" : [
                    "result"
                ],
                "properties" : {
                    "result" : {
                        "type" : "object",
                        "required" : [
                            "authEndpoint",
                            "authBody"
                        ],
                        "properties" : {
                            "authEndpoint" : {
                                "type" : "string",
                                "description" : "The endpoint to obtain the Skedulo API access token using the body given in authBody. The authorization flow is called client credentials flow."
                            },
                            "authBody" : {
                                "type" : "object",
                                "description" : "The content of this object should be sent verbatim to the authEndpoint (POST) to obtain a Skedulo API access token.",
                                "required" : [
                                    "grant_type",
                                    "client_id",
                                    "client_secret",
                                    "audience"
                                ],
                                "properties" : {
                                    "grant_type" : {
                                        "type" : "string",
                                        "example" : "client_credentials"
                                    },
                                    "client_id" : {
                                        "type" : "string"
                                    },
                                    "client_secret" : {
                                        "type" : "string"
                                    },
                                    "audience" : {
                                        "type" : "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "JwtClaims" : {
                "description" : "Selection of the user claims from the JWT",
                "type" : "object",
                "additionalProperties" : true
            },
            "ApiTokenInfo" : {
                "type" : "object",
                "required" : [
                    "tenantId",
                    "jti",
                    "claims",
                    "createdDate",
                    "createdBy"
                ],
                "properties" : {
                    "tenantId" : {
                        "type" : "string",
                        "example" : "sk_e0bb1f8aa1924a00b77a9c1f43b09e41"
                    },
                    "jti" : {
                        "type" : "string",
                        "example" : "BM10SHoI4Z4nmhtElInXuJWLkeeqqyzy"
                    },
                    "claims" : {
                        "$ref" : "#/components/schemas/JwtClaims"
                    },
                    "createdDate" : {
                        "type" : "string",
                        "format" : "date-time"
                    },
                    "createdBy" : {
                        "type" : "string"
                    },
                    "revokedDate" : {
                        "type" : "string",
                        "format" : "date-time"
                    },
                    "revokedBy" : {
                        "type" : "string"
                    },
                    "lastUpdated" : {
                        "type" : "string",
                        "format" : "date-time"
                    }
                }
            }
        }
    }
}
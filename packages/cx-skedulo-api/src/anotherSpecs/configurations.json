{
    "servers" : [
        {
            "url" : "https://api.skedulo.com/config"
        }
    ],
    "openapi" : "3.0.0",
    "info" : {
        "title" : "Configurations API",
        "version" : "1.0.0",
        "description" : "Skedulo Configurations API"
    },
    "paths" : {
        "/features" : {
            "get" : {
                "security" : [
                    {
                        "Authorization" : [
                        ]
                    }
                ],
                "summary" : "Feature flag status",
                "description" : "Retrieves the status of feature flags of the tenant associated with the token.",
                "responses" : {
                    "200" : {
                        "description" : "Successful operation",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/FeatureFlagsResult"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/features/subscribe" : {
            "get" : {
                "security" : [
                    {
                        "Authorization" : [
                        ]
                    }
                ],
                "summary" : "Feature flag subscription",
                "description" : "A websocket endpoint that streams feature flags when they change. Returns the current feature flags on connect.",
                "responses" : {
                    "101" : {
                        "description" : "Websocket connection succeeded",
                        "content" : {
                            "*/*" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/FeatureFlags"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/features/description" : {
            "get" : {
                "security" : [
                    {
                        "Authorization" : [
                        ]
                    }
                ],
                "summary" : "Feature flag status, description, and type",
                "description" : "Retrieves the status of feature flags along with their descriptions and type.",
                "responses" : {
                    "200" : {
                        "description" : "Successful operation",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "type" : "object",
                                    "properties" : {
                                        "result" : {
                                            "$ref" : "#/components/schemas/FeatureFlagsWithDescriptions"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/features/{tenant_id}" : {
            "get" : {
                "security" : [
                    {
                        "Authorization" : [
                        ]
                    }
                ],
                "summary" : "Tenant Feature flag statuses",
                "description" : "Retrieves the status of feature flags for the provided tenant",
                "parameters" : [
                    {
                        "name" : "tenant_id",
                        "in" : "path",
                        "description" : "ID of the tenant",
                        "required" : true,
                        "schema" : {
                            "type" : "string"
                        }
                    }
                ],
                "responses" : {
                    "200" : {
                        "description" : "Successful operation",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/FeatureFlagsResult"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/features/descriptions/{tenant_id}" : {
            "get" : {
                "security" : [
                    {
                        "Authorization" : [
                        ]
                    }
                ],
                "summary" : "Feature flag status",
                "description" : "Retrieves the status of feature flags along with their descriptions and type of the provided tenant.",
                "parameters" : [
                    {
                        "name" : "tenant_id",
                        "in" : "path",
                        "description" : "ID of the tenant",
                        "required" : true,
                        "schema" : {
                            "type" : "string"
                        }
                    }
                ],
                "responses" : {
                    "200" : {
                        "description" : "Successful operation",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "type" : "object",
                                    "properties" : {
                                        "result" : {
                                            "$ref" : "#/components/schemas/FeatureFlagsWithDescriptions"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/features/tenants/search" : {
            "post" : {
                "security" : [
                    {
                        "Authorization" : [
                        ]
                    }
                ],
                "summary" : "Feature flag status for multiple tenants",
                "description" : "Retrieves the status of feature flags for all the provided Tenant ID's.",
                "requestBody" : {
                    "content" : {
                        "application/json" : {
                            "schema" : {
                                "$ref" : "#/components/schemas/TenantIds"
                            }
                        }
                    },
                    "required" : true
                },
                "responses" : {
                    "200" : {
                        "description" : "Successful operation",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/TenantFeatureFlagsResultContainer"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/features/descriptions/tenants/search" : {
            "post" : {
                "security" : [
                    {
                        "Authorization" : [
                        ]
                    }
                ],
                "summary" : "Feature flag status and descriptions for multiple tenants",
                "description" : "Retrieves the status of feature flags along with their descriptions and type for all the provided Tenant ID's.",
                "requestBody" : {
                    "content" : {
                        "application/json" : {
                            "schema" : {
                                "$ref" : "#/components/schemas/TenantIds"
                            }
                        }
                    },
                    "required" : true
                },
                "responses" : {
                    "200" : {
                        "description" : "Successful operation",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/TenantFeatureFlagsAndDescriptionsResultContainer"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/org_preference" : {
            "get" : {
                "summary" : "Org preferences",
                "description" : "Retrieves all org preferences.",
                "responses" : {
                    "200" : {
                        "description" : "Successful operation",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/ResultOkOrgPreferences"
                                }
                            }
                        }
                    },
                    "401" : {
                        "description" : "Not authorized"
                    },
                    "412" : {
                        "description" : "Tenant not initialized on this service."
                    }
                },
                "security" : [
                    {
                        "Authorization" : [
                        ]
                    }
                ]
            },
            "post" : {
                "summary" : "Update org preferences",
                "description" : "Update a subset of org preferences.",
                "responses" : {
                    "200" : {
                        "description" : "Successful operation",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/ResultOkOrgPreferences"
                                }
                            }
                        }
                    },
                    "401" : {
                        "description" : "Not authorized"
                    },
                    "412" : {
                        "description" : "Tenant not initialized on this service."
                    }
                },
                "security" : [
                    {
                        "Authorization" : [
                        ]
                    }
                ],
                "requestBody" : {
                    "content" : {
                        "application/json" : {
                            "schema" : {
                                "$ref" : "#/components/schemas/OptOrgPreferences"
                            }
                        }
                    },
                    "description" : "The org preferences to update. If a value is null then it is either removed or reset to its default value. If a value is not present then it will be unchanged.",
                    "required" : true
                }
            }
        },
        "/internal/org_preference/{tenant_id}" : {
            "get" : {
                "summary" : "Tenant org preferences",
                "description" : "Retrieves all org preferences for a tenant.",
                "parameters" : [
                    {
                        "name" : "tenant_id",
                        "in" : "path",
                        "description" : "ID of the tenant",
                        "required" : true,
                        "schema" : {
                            "type" : "string"
                        }
                    }
                ],
                "responses" : {
                    "200" : {
                        "description" : "Successful operation",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/ResultOkOrgPreferences"
                                }
                            }
                        }
                    },
                    "401" : {
                        "description" : "Not authorized"
                    }
                },
                "security" : [
                    {
                        "internal_admin_auth_token" : [
                        ]
                    },
                    {
                        "skedulo-internal" : [
                        ]
                    }
                ]
            },
            "post" : {
                "summary" : "Update tenant org preferences",
                "description" : "Update a subset of org preferences for a tenant.",
                "parameters" : [
                    {
                        "name" : "tenant_id",
                        "in" : "path",
                        "description" : "ID of the tenant",
                        "required" : true,
                        "schema" : {
                            "type" : "string"
                        }
                    }
                ],
                "responses" : {
                    "200" : {
                        "description" : "Successful operation",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/ResultOkOrgPreferences"
                                }
                            }
                        }
                    },
                    "401" : {
                        "description" : "Not authorized"
                    }
                },
                "security" : [
                    {
                        "internal_admin_auth_token" : [
                        ]
                    },
                    {
                        "skedulo-internal" : [
                        ]
                    }
                ],
                "requestBody" : {
                    "content" : {
                        "application/json" : {
                            "schema" : {
                                "$ref" : "#/components/schemas/OptOrgPreferences"
                            }
                        }
                    },
                    "description" : "The org preferences to update. If a value is null then it is either removed or reset to its default value. If a value is not present then it will be unchanged.",
                    "required" : true
                }
            }
        },
        "/internal/org_preferences" : {
            "post" : {
                "summary" : "Fetch tenants with an org preference",
                "description" : "Fetch all tenants that have an org preference with the given key and value. Note that the tenant must have set the value so this endpoint is only useful for looking up non-default values.",
                "requestBody" : {
                    "content" : {
                        "application/json" : {
                            "schema" : {
                                "$ref" : "#/components/schemas/OrgPreference"
                            }
                        }
                    },
                    "required" : true
                },
                "responses" : {
                    "200" : {
                        "description" : "Successful operation",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "type" : "object",
                                    "required" : [
                                        "result"
                                    ],
                                    "properties" : {
                                        "result" : {
                                            "type" : "array",
                                            "items" : {
                                                "type" : "object",
                                                "required" : [
                                                    "tenantId"
                                                ],
                                                "properties" : {
                                                    "tenantId" : {
                                                        "type" : "string"
                                                    },
                                                    "orgId" : {
                                                        "type" : "string"
                                                    },
                                                    "name" : {
                                                        "type" : "string"
                                                    },
                                                    "description" : {
                                                        "type" : "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401" : {
                        "description" : "Not authorized"
                    }
                },
                "security" : [
                    {
                        "internal_admin_auth_token" : [
                        ]
                    },
                    {
                        "skedulo-internal" : [
                        ]
                    }
                ]
            }
        },
        "/calendar" : {
            "get" : {
                "summary" : "Calendar configurations",
                "description" : "Retrieves all calendar configurations.",
                "operationId" : "getCalendarConfigs",
                "responses" : {
                    "200" : {
                        "description" : "Successful operation",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/ResultOkListCalendarResponse"
                                }
                            }
                        }
                    },
                    "401" : {
                        "description" : "Not authorized"
                    },
                    "412" : {
                        "description" : "Tenant not initialized on this service."
                    }
                },
                "security" : [
                    {
                        "Authorization" : [
                        ]
                    }
                ]
            },
            "post" : {
                "summary" : "Register new and updates existing calendar configs",
                "description" : "Registers new calendar configs, and updates existing configs using the 'jobType' field as the key. Returns the created and updated calendar configs.",
                "operationId" : "createOrUpdateCalendarConfigs",
                "responses" : {
                    "201" : {
                        "description" : "Successful operation",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/ResultCreatedListCalendarResponse"
                                }
                            }
                        }
                    },
                    "401" : {
                        "description" : "Not authorized"
                    },
                    "412" : {
                        "description" : "Tenant not initialized on this service."
                    }
                },
                "security" : [
                    {
                        "Authorization" : [
                        ]
                    }
                ],
                "requestBody" : {
                    "content" : {
                        "application/json" : {
                            "schema" : {
                                "type" : "array",
                                "items" : {
                                    "$ref" : "#/components/schemas/CalendarResponse"
                                }
                            }
                        }
                    },
                    "required" : true
                }
            }
        },
        "/timeslot" : {
            "get" : {
                "summary" : "Retrieve tagged timeslots",
                "description" : "Retrieves all tagged timeslots.",
                "operationId" : "getTimeslots",
                "responses" : {
                    "200" : {
                        "description" : "Successful operation",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/ResultOkListCompleteTimeSlot"
                                }
                            }
                        }
                    },
                    "401" : {
                        "description" : "Not authorized"
                    },
                    "412" : {
                        "description" : "Tenant not initialized on this service."
                    }
                },
                "security" : [
                    {
                        "Authorization" : [
                        ]
                    }
                ]
            },
            "post" : {
                "summary" : "Registers the untagged timeslots contained within the list",
                "description" : "Returns the registered timeslots, now tagged with IDs\n\n\nThe possible 400 errors are as follows:\n\n- 'empty_input: list is empty'\n- 'end_before_start: input is invalid, endTime must be after startTime'\n- 'duplicate_input: input contains duplicates'\n\n\nThe possible 409 errors are as follows:\n\n- 'overlap_error: input will cause timeslot overlaps'\n- 'duplicate_timeslot_error: timeslots are in an inconsistent state'.",
                "operationId" : "createOrUpdateTimeSlots",
                "responses" : {
                    "200" : {
                        "description" : "Successful operation",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/ResultOkListCompleteTimeSlot"
                                }
                            }
                        }
                    },
                    "400" : {
                        "description" : "See above",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "401" : {
                        "description" : "Not authorized"
                    },
                    "409" : {
                        "description" : "See above",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "412" : {
                        "description" : "Tenant not initialized on this service."
                    }
                },
                "security" : [
                    {
                        "Authorization" : [
                        ]
                    }
                ],
                "requestBody" : {
                    "content" : {
                        "application/json" : {
                            "schema" : {
                                "type" : "array",
                                "items" : {
                                    "$ref" : "#/components/schemas/Timeslot"
                                }
                            }
                        }
                    },
                    "description" : "The list of untagged timeslots"
                }
            },
            "delete" : {
                "summary" : "Delete timeslot by ID",
                "description" : "Deletes all timeslots that have IDs contained within the provided list. Returns the number of timeslots deleted.",
                "operationId" : "deleteTimeslot",
                "parameters" : [
                    {
                        "in" : "query",
                        "name" : "ids",
                        "description" : "IDs of Timeslots to delete, separated by commas",
                        "required" : true,
                        "schema" : {
                            "type" : "string"
                        }
                    }
                ],
                "responses" : {
                    "200" : {
                        "description" : "Successful operation",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/ResultDeletedInteger"
                                }
                            }
                        }
                    },
                    "401" : {
                        "description" : "Not authorized"
                    },
                    "412" : {
                        "description" : "Tenant not initialized on this service."
                    }
                },
                "security" : [
                    {
                        "Authorization" : [
                        ]
                    }
                ]
            }
        },
        "/preference" : {
            "get" : {
                "summary" : "Retrieve preference-key -> JSON mappings",
                "description" : "The mappings are stored in a singular JSON object, with values of aribitrary JSON.",
                "operationId" : "getPreferences",
                "responses" : {
                    "200" : {
                        "description" : "Successful operation",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/ResultOkMapStringJSON"
                                }
                            }
                        }
                    },
                    "401" : {
                        "description" : "Not authorized"
                    },
                    "412" : {
                        "description" : "Tenant not initialized on this service."
                    }
                },
                "security" : [
                    {
                        "Authorization" : [
                        ]
                    }
                ]
            },
            "post" : {
                "summary" : "Creates and updates preference-key -> JSON mappings",
                "description" : "For each key-value pair in the provided object, creates or updates existing key-value mappings.\nThe values may be aribtrary JSON.",
                "operationId" : "createOrUpdatePreferences",
                "responses" : {
                    "201" : {
                        "description" : "Successful operation",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/ResultCreatedMapStringJSON"
                                }
                            }
                        }
                    },
                    "401" : {
                        "description" : "Not authorized"
                    },
                    "412" : {
                        "description" : "Tenant not initialized on this service."
                    }
                },
                "security" : [
                    {
                        "Authorization" : [
                        ]
                    }
                ],
                "requestBody" : {
                    "content" : {
                        "application/json" : {
                            "schema" : {
                                "type" : "object",
                                "additionalProperties" : {
                                    "$ref" : "#/components/schemas/JSON"
                                }
                            }
                        }
                    },
                    "description" : "An object of key-value mappings.",
                    "required" : true
                }
            }
        },
        "/templates/{schemaName}" : {
            "get" : {
                "security" : [
                    {
                        "Authorization" : [
                        ]
                    }
                ],
                "summary" : "Fetch schema templates",
                "description" : "Fetch all templates for a given schema.",
                "operationId" : "getTemplates",
                "parameters" : [
                    {
                        "name" : "schemaName",
                        "in" : "path",
                        "description" : "Schema to retrieve templates for.",
                        "required" : true,
                        "schema" : {
                            "type" : "string"
                        }
                    }
                ],
                "responses" : {
                    "200" : {
                        "description" : "Successful operation",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/ResultOKTemplates"
                                }
                            }
                        }
                    },
                    "default" : {
                        "description" : "Error",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/template" : {
            "post" : {
                "security" : [
                    {
                        "Authorization" : [
                        ]
                    }
                ],
                "summary" : "Create template",
                "description" : "Create a new template.",
                "operationId" : "createTemplate",
                "responses" : {
                    "200" : {
                        "description" : "The template was created.",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/ResultOKCreateTemplate"
                                }
                            }
                        }
                    },
                    "default" : {
                        "description" : "Error",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "requestBody" : {
                    "content" : {
                        "application/json" : {
                            "schema" : {
                                "$ref" : "#/components/schemas/NewTemplate"
                            }
                        }
                    },
                    "description" : "New template details.",
                    "required" : true
                }
            }
        },
        "/template/{template_id}" : {
            "put" : {
                "security" : [
                    {
                        "Authorization" : [
                        ]
                    }
                ],
                "summary" : "Update template",
                "description" : "Update an existing template.",
                "operationId" : "updateTemplate",
                "parameters" : [
                    {
                        "name" : "template_id",
                        "in" : "path",
                        "description" : "Identifier of the template to update.",
                        "required" : true,
                        "schema" : {
                            "type" : "string",
                            "format" : "uuid"
                        }
                    }
                ],
                "responses" : {
                    "200" : {
                        "description" : "The template was updated."
                    },
                    "default" : {
                        "description" : "Error",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "requestBody" : {
                    "content" : {
                        "application/json" : {
                            "schema" : {
                                "$ref" : "#/components/schemas/UpdateTemplate"
                            }
                        }
                    },
                    "description" : "Updated template details.",
                    "required" : true
                }
            },
            "delete" : {
                "security" : [
                    {
                        "Authorization" : [
                        ]
                    }
                ],
                "summary" : "Delete template",
                "description" : "Delete a template.",
                "operationId" : "deleteTemplate",
                "parameters" : [
                    {
                        "name" : "template_id",
                        "in" : "path",
                        "description" : "Identifier of the template to delete.",
                        "required" : true,
                        "schema" : {
                            "type" : "string",
                            "format" : "uuid"
                        }
                    }
                ],
                "responses" : {
                    "200" : {
                        "description" : "The template was deleted.",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/ResultOKDeleteTemplate"
                                }
                            }
                        }
                    },
                    "default" : {
                        "description" : "Error",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/template/{template_id}/values" : {
            "get" : {
                "security" : [
                    {
                        "Authorization" : [
                        ]
                    }
                ],
                "summary" : "Template values",
                "description" : "Return template values for a template.",
                "operationId" : "getValuePairs",
                "parameters" : [
                    {
                        "name" : "template_id",
                        "in" : "path",
                        "description" : "Identifier of the template to retrieve values for.",
                        "required" : true,
                        "schema" : {
                            "type" : "string",
                            "format" : "uuid"
                        }
                    }
                ],
                "responses" : {
                    "200" : {
                        "description" : "Successful operation",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/ResultOKTemplateValues"
                                }
                            }
                        }
                    },
                    "default" : {
                        "description" : "Error",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "put" : {
                "security" : [
                    {
                        "Authorization" : [
                        ]
                    }
                ],
                "summary" : "Update template values",
                "description" : "All existing values will removed and the values provided will be inserted.",
                "operationId" : "overrideTemplateValues",
                "parameters" : [
                    {
                        "name" : "template_id",
                        "in" : "path",
                        "description" : "Identifier of the template to add values for.",
                        "required" : true,
                        "schema" : {
                            "type" : "string",
                            "format" : "uuid"
                        }
                    }
                ],
                "responses" : {
                    "200" : {
                        "description" : "The values were updated.",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/ResultOKTemplateValues"
                                }
                            }
                        }
                    },
                    "default" : {
                        "description" : "Error",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "requestBody" : {
                    "content" : {
                        "application/json" : {
                            "schema" : {
                                "type" : "array",
                                "items" : {
                                    "$ref" : "#/components/schemas/NewTemplateValue"
                                }
                            }
                        }
                    },
                    "description" : "Values to use for the template.",
                    "required" : true
                }
            }
        },
        "/config/layout/{object}" : {
            "get" : {
                "security" : [
                    {
                        "Authorization" : [
                        ]
                    }
                ],
                "summary" : "Default layout for an object",
                "description" : "Returns the default layout for the given object.",
                "operationId" : "layoutObjectDefault",
                "parameters" : [
                    {
                        "name" : "object",
                        "in" : "path",
                        "description" : "the name of the object",
                        "required" : true,
                        "schema" : {
                            "type" : "string"
                        }
                    }
                ],
                "responses" : {
                    "200" : {
                        "description" : "Successful operation",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "type" : "object",
                                    "required" : [
                                        "result"
                                    ],
                                    "properties" : {
                                        "result" : {
                                            "type" : "object",
                                            "required" : [
                                                "object",
                                                "layout"
                                            ],
                                            "properties" : {
                                                "object" : {
                                                    "type" : "string"
                                                },
                                                "layout" : {
                                                    "$ref" : "#/components/schemas/Layout"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default" : {
                        "description" : "Error",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components" : {
        "securitySchemes" : {
            "Authorization" : {
                "type" : "apiKey",
                "name" : "Authorization",
                "in" : "header"
            }
        },
        "schemas" : {
            "ResultDeletedInteger" : {
                "type" : "object",
                "required" : [
                    "deleted"
                ],
                "properties" : {
                    "deleted" : {
                        "type" : "integer",
                        "format" : "int32"
                    }
                }
            },
            "CalendarResponse" : {
                "type" : "object",
                "required" : [
                    "duration",
                    "jobType"
                ],
                "properties" : {
                    "jobType" : {
                        "type" : "string"
                    },
                    "duration" : {
                        "type" : "integer",
                        "format" : "int32"
                    }
                }
            },
            "ResultOkListCalendarResponse" : {
                "type" : "object",
                "required" : [
                    "result"
                ],
                "properties" : {
                    "result" : {
                        "type" : "array",
                        "items" : {
                            "$ref" : "#/components/schemas/CalendarResponse"
                        }
                    }
                }
            },
            "ResultCreatedListCalendarResponse" : {
                "type" : "object",
                "required" : [
                    "created"
                ],
                "properties" : {
                    "created" : {
                        "type" : "array",
                        "items" : {
                            "$ref" : "#/components/schemas/CalendarResponse"
                        }
                    }
                }
            },
            "CompleteTimeSlot" : {
                "type" : "object",
                "required" : [
                    "dayOfWeek",
                    "endTime",
                    "id",
                    "jobtype",
                    "startTime"
                ],
                "properties" : {
                    "id" : {
                        "type" : "string"
                    },
                    "jobtype" : {
                        "type" : "string"
                    },
                    "dayOfWeek" : {
                        "type" : "string",
                        "enum" : [
                            "MON",
                            "TUE",
                            "WED",
                            "THU",
                            "FRI",
                            "SAT",
                            "SUN"
                        ]
                    },
                    "startTime" : {
                        "type" : "string"
                    },
                    "endTime" : {
                        "type" : "string"
                    }
                }
            },
            "ResultOkListCompleteTimeSlot" : {
                "type" : "object",
                "required" : [
                    "result"
                ],
                "properties" : {
                    "result" : {
                        "type" : "array",
                        "items" : {
                            "$ref" : "#/components/schemas/CompleteTimeSlot"
                        }
                    }
                }
            },
            "Timeslot" : {
                "type" : "object",
                "required" : [
                    "dayOfWeek",
                    "jobType"
                ],
                "properties" : {
                    "jobType" : {
                        "type" : "string"
                    },
                    "dayOfWeek" : {
                        "type" : "string",
                        "enum" : [
                            "MON",
                            "TUE",
                            "WED",
                            "THU",
                            "FRI",
                            "SAT",
                            "SUN"
                        ]
                    }
                }
            },
            "JSON" : {
                "type" : "object"
            },
            "ResultOkMapStringJSON" : {
                "type" : "object",
                "required" : [
                    "result"
                ],
                "properties" : {
                    "result" : {
                        "type" : "object",
                        "additionalProperties" : {
                            "$ref" : "#/components/schemas/JSON"
                        }
                    }
                }
            },
            "ResultCreatedMapStringJSON" : {
                "type" : "object",
                "required" : [
                    "created"
                ],
                "properties" : {
                    "created" : {
                        "type" : "object",
                        "additionalProperties" : {
                            "$ref" : "#/components/schemas/JSON"
                        }
                    }
                }
            },
            "FeatureFlagsResult" : {
                "description" : "Result wrapper for FeatureFlags.",
                "type" : "object",
                "required" : [
                    "result"
                ],
                "properties" : {
                    "result" : {
                        "$ref" : "#/components/schemas/FeatureFlags"
                    }
                }
            },
            "TenantFeatureFlagsResultContainer" : {
                "description" : "Result wrapper for Tenant FeatureFlags.",
                "type" : "object",
                "required" : [
                    "result"
                ],
                "properties" : {
                    "result" : {
                        "$ref" : "#/components/schemas/TenantFeatureFlagsResult"
                    }
                }
            },
            "TenantFeatureFlagsResult" : {
                "description" : "Result wrapper for Tenant FeatureFlags successes and failures.",
                "type" : "object",
                "required" : [
                    "successes",
                    "failures"
                ],
                "properties" : {
                    "successes" : {
                        "$ref" : "#/components/schemas/TenantsFeatureFlagsSuccesses"
                    },
                    "failures" : {
                        "$ref" : "#/components/schemas/TenantsFeatureFlagsFailures"
                    }
                }
            },
            "TenantFeatureFlagsAndDescriptionsResultContainer" : {
                "description" : "Result wrapper for Tenant FeatureFlags with descriptions.",
                "type" : "object",
                "required" : [
                    "result"
                ],
                "properties" : {
                    "result" : {
                        "$ref" : "#/components/schemas/TenantFeatureFlagsAndDescriptionResult"
                    }
                }
            },
            "TenantFeatureFlagsAndDescriptionResult" : {
                "description" : "Result wrapper for Tenant FeatureFlags successes and failures.",
                "type" : "object",
                "required" : [
                    "successes",
                    "failures"
                ],
                "properties" : {
                    "successes" : {
                        "$ref" : "#/components/schemas/TenantsFeatureFlagsAndDescriptionsSuccesses"
                    },
                    "failures" : {
                        "$ref" : "#/components/schemas/TenantsFeatureFlagsFailures"
                    }
                }
            },
            "TenantsFeatureFlagsSuccesses" : {
                "description" : "A map of the tenantId to the Features flags for all tenants that feature flags were able to be obtained",
                "type" : "object",
                "additionalProperties" : {
                    "$ref" : "#/components/schemas/FeatureFlags"
                }
            },
            "TenantsFeatureFlagsAndDescriptionsSuccesses" : {
                "description" : "A map of the tenantId to the Features flags for all tenants that feature flags were able to be obtained",
                "type" : "object",
                "additionalProperties" : {
                    "type" : "array",
                    "items" : {
                        "$ref" : "#/components/schemas/FeatureFlagsWithDescriptions"
                    }
                }
            },
            "TenantsFeatureFlagsFailures" : {
                "description" : "A map of the tenantId to an error message for all tenants that feature flags were not able to be obtained.",
                "type" : "object",
                "additionalProperties" : {
                    "type" : "string"
                },
                "example" : {
                    "sk_123oiusdf" : "Tenant sk_123oiusdf has not been initialized with this service. Please run the onboarding process for this tenant!",
                    "sk_3432423524" : "Tenant sk_3432423524 has not been initialized with this service. Please run the onboarding process for this tenant!"
                }
            },
            "FeatureFlags" : {
                "description" : "No assumptions should be made about specific keys appearing in the response. If a key is not returned its value should be assumed to be false.",
                "type" : "object",
                "properties" : {
                    "substituteJobAllocationTimes" : {
                        "type" : "boolean",
                        "default" : false,
                        "description" : "Internal use only. Do not use."
                    },
                    "usePhoenixBackend" : {
                        "type" : "boolean",
                        "default" : false,
                        "description" : "Whether SkedX should switch classic users to use phoenix backend."
                    },
                    "disableHtml5App" : {
                        "type" : "boolean",
                        "default" : false,
                        "description" : "Whether to prevent users from using Skedulo Html5 mobile app"
                    },
                    "disableClassicWebApp" : {
                        "type" : "boolean",
                        "default" : false,
                        "description" : "Whether to prevent users of this org from using the Classic web app."
                    },
                    "useResourceRequirements" : {
                        "type" : "boolean",
                        "default" : false,
                        "description" : "Whether resource requirements should be enabled in the frontend."
                    },
                    "useTemporaryRegions" : {
                        "type" : "boolean",
                        "default" : false,
                        "description" : "Whether temporary regions should be enabled in the frontend."
                    },
                    "useJobOffers" : {
                        "type" : "boolean",
                        "default" : true,
                        "description" : "Whether job offers should be enabled in the frontend."
                    },
                    "useShiftOffers" : {
                        "type" : "boolean",
                        "default" : true,
                        "description" : "Whether shift offers should be enabled in the frontend."
                    },
                    "useGlobalNavigation" : {
                        "type" : "boolean",
                        "default" : true,
                        "description" : "Whether the new global nagivation at the top of the web app should be turned on."
                    },
                    "captureLogRocketEvents" : {
                        "type" : "boolean",
                        "default" : false,
                        "description" : "Whether we forward web app events for this org to LogRocket."
                    },
                    "enableUIPermissionsCheck" : {
                        "type" : "boolean",
                        "default" : false,
                        "description" : "Enable permissions to determine what UI elements are displayed or accessible."
                    },
                    "useAvailabilityPatterns" : {
                        "type" : "boolean",
                        "default" : false,
                        "description" : "Whether availability patterns or the old availability templates should be enabled in the frontend."
                    },
                    "useTriggeredActions" : {
                        "type" : "boolean",
                        "default" : false,
                        "description" : "Whether triggered actions should be enabled in the frontend."
                    },
                    "useExceptionsConsole" : {
                        "type" : "boolean",
                        "default" : false,
                        "description" : "Whether the new exceptions console page appears in the menu."
                    },
                    "useRelatedObjects" : {
                        "type" : "boolean",
                        "default" : false,
                        "description" : "Whether the new related object tabs appear in a record page."
                    },
                    "checkStandaloneDriverPermissions" : {
                        "type" : "boolean",
                        "default" : true,
                        "description" : "Enable checking of permissions during Standalone Driver calls."
                    },
                    "useOptimization" : {
                        "type" : "boolean",
                        "default" : true,
                        "description" : "Whether optimization (premium service) is enabled in the product."
                    },
                    "useMessaging" : {
                        "type" : "boolean",
                        "default" : false,
                        "description" : "Whether messaging functionality is enabled"
                    },
                    "useScheduleTemplates" : {
                        "type" : "boolean",
                        "default" : false,
                        "description" : "Whether schedule templates are enabled"
                    },
                    "useJobDetailsNative" : {
                        "type" : "boolean",
                        "default" : false,
                        "description" : "Whether to use the native job details view"
                    },
                    "useAsyncOptimization" : {
                        "type" : "boolean",
                        "default" : false,
                        "description" : "Use asynchronous optimizations when scheduling"
                    },
                    "useChangeEventsV2" : {
                        "type" : "boolean",
                        "default" : false,
                        "description" : "Use V2 change events for webhooks and triggered actions so that any object type can be tracked."
                    },
                    "useGridView" : {
                        "type" : "boolean",
                        "default" : false,
                        "description" : "Whether the grid view is enabled"
                    },
                    "enablePlatformUI" : {
                        "type" : "boolean",
                        "default" : false,
                        "description" : "Enables new data driven UI capabilities"
                    },
                    "enableExceptionReporting" : {
                        "type" : "boolean",
                        "default" : false,
                        "description" : "Whether exception reporting is enabled in the backend."
                    },
                    "enableAvailabilityChangeEvents" : {
                        "type" : "boolean",
                        "default" : false,
                        "description" : "Whether Availability Change Events are generated in the backend."
                    },
                    "useDataLoading" : {
                        "type" : "boolean",
                        "default" : false,
                        "description" : "Enable data loading settings page"
                    },
                    "usePackaging" : {
                        "type" : "boolean",
                        "default" : false,
                        "description" : "Enable packaging settings page"
                    },
                    "useNewPermissions" : {
                        "type" : "boolean",
                        "default" : false,
                        "description" : "(Beta) Enable the new permission management features"
                    },
                    "useRecordAccessPolicies" : {
                        "type" : "boolean",
                        "default" : false,
                        "description" : "(Development) Use record access policies to control access to data records (Skedulo Platform only)"
                    },
                    "useNotificationV3" : {
                        "type" : "boolean",
                        "default" : false,
                        "description" : "Use the standalone notification services (in development). Only work for mobile app v3."
                    },
                    "recurringSchedulePattern" : {
                        "type" : "boolean",
                        "default" : false,
                        "description" : "Whether it is possible to store the recurring schedule pattern."
                    },
                    "accountContactChanges" : {
                        "type" : "boolean",
                        "default" : false,
                        "description" : "Whether account and contact changes are emitted."
                    },
                    "driverUpsertSupport" : {
                        "type" : "boolean",
                        "default" : false,
                        "description" : "Whether the driver supports performing upserts."
                    },
                    "copyScheduleCopiedFrom" : {
                        "type" : "boolean",
                        "default" : false,
                        "description" : "Whether the CopiedFromId field on Jobs, Shifts and Activities is available."
                    },
                    "virtualMeetings" : {
                        "type" : "boolean",
                        "default" : false,
                        "description" : "Whether virtual meeting fields are available on Jobs."
                    },
                    "scheduleTemplates" : {
                        "type" : "boolean",
                        "default" : false,
                        "description" : "Whether schedule template objects and fields are available."
                    },
                    "changeEventsV2" : {
                        "type" : "boolean",
                        "default" : false,
                        "description" : "Whether v2 change events are supported."
                    },
                    "jobDependencies" : {
                        "type" : "boolean",
                        "default" : false,
                        "description" : "Whether job dependencies are supported."
                    },
                    "userRegions" : {
                        "type" : "boolean",
                        "default" : false,
                        "description" : "Whether user region objects and fields are available."
                    }
                }
            },
            "FeatureFlagsWithDescriptions" : {
                "description" : "A list of Feature flags with descriptions type and value.",
                "type" : "array",
                "items" : {
                    "type" : "object",
                    "properties" : {
                        "name" : {
                            "type" : "string",
                            "description" : "The feature flag key."
                        },
                        "description" : {
                            "type" : "string",
                            "description" : "Description of the flag."
                        },
                        "type" : {
                            "type" : "string",
                            "enum" : [
                                "Feature",
                                "Package",
                                "Retired"
                            ],
                            "description" : "Type of flag."
                        },
                        "value" : {
                            "type" : "boolean",
                            "description" : "value of the flag."
                        }
                    }
                }
            },
            "ResultOkOrgPreferences" : {
                "type" : "object",
                "required" : [
                    "result"
                ],
                "properties" : {
                    "result" : {
                        "$ref" : "#/components/schemas/OrgPreferences"
                    }
                }
            },
            "OrgPreference" : {
                "type" : "object",
                "required" : [
                    "key",
                    "value"
                ],
                "properties" : {
                    "key" : {
                        "type" : "string"
                    },
                    "value" : {
                        "type" : "string"
                    }
                }
            },
            "TenantIds" : {
                "description" : "Tenant Ids",
                "type" : "array",
                "items" : {
                    "type" : "string"
                }
            },
            "OrgPreferences" : {
                "type" : "object",
                "required" : [
                    "allowAbortJob",
                    "attachmentsDownload",
                    "enableHIPAACompliance",
                    "futureJobBuffer",
                    "jobTasksAreOptional",
                    "popupCompletionNotes",
                    "turnOnChatter",
                    "saveAttachmentAsFile",
                    "enableSMSResponse",
                    "allowJobsToBeDeclined",
                    "dispatchJobsToConfirmedStatus",
                    "disableEnRoute",
                    "disableOnSite",
                    "restrictResourcesFromWebApp",
                    "excludePendingDispatchAllocationsInICal",
                    "preventSchedulersFromCreatingJobs",
                    "enableShifts",
                    "autoApproveAvailabilities",
                    "autoDeleteJobAllocations",
                    "autoAllocateJobOffers",
                    "autoAllocateShiftOffers",
                    "notifyExpiredOffers",
                    "enableJobSwap",
                    "teamLeader",
                    "enableFilterJobsByTimeConstraints",
                    "labels",
                    "mobile",
                    "mobileV3",
                    "web",
                    "services",
                    "exceptionReporting",
                    "visualforce"
                ],
                "properties" : {
                    "allowAbortJob" : {
                        "type" : "boolean",
                        "default" : false
                    },
                    "attachmentsDownload" : {
                        "type" : "boolean",
                        "default" : false
                    },
                    "enableHIPAACompliance" : {
                        "type" : "boolean",
                        "default" : false
                    },
                    "futureJobBuffer" : {
                        "type" : "integer",
                        "format" : "int32",
                        "default" : 0
                    },
                    "jobTasksAreOptional" : {
                        "type" : "boolean",
                        "default" : false
                    },
                    "enableCompletionNotes" : {
                        "type" : "boolean",
                        "default" : true
                    },
                    "popupCompletionNotes" : {
                        "type" : "boolean",
                        "default" : false
                    },
                    "turnOnChatter" : {
                        "type" : "boolean",
                        "default" : false
                    },
                    "saveAttachmentAsFile" : {
                        "type" : "boolean",
                        "default" : false
                    },
                    "enableSMSResponse" : {
                        "type" : "boolean",
                        "default" : true
                    },
                    "allowJobsToBeDeclined" : {
                        "type" : "boolean",
                        "default" : true
                    },
                    "dispatchJobsToConfirmedStatus" : {
                        "type" : "boolean",
                        "description" : "If true jobs are allocated to a resource in confirmed status, otherwise in dispatched status.",
                        "default" : false
                    },
                    "disableEnRoute" : {
                        "type" : "boolean",
                        "default" : false
                    },
                    "disableOnSite" : {
                        "type" : "boolean",
                        "default" : false
                    },
                    "restrictResourcesFromWebApp" : {
                        "type" : "boolean",
                        "default" : true
                    },
                    "excludePendingDispatchAllocationsInICal" : {
                        "type" : "boolean",
                        "default" : false
                    },
                    "preventSchedulersFromCreatingJobs" : {
                        "type" : "boolean",
                        "default" : false
                    },
                    "enableShifts" : {
                        "type" : "boolean",
                        "default" : false
                    },
                    "autoApproveAvailabilities" : {
                        "type" : "boolean",
                        "default" : false
                    },
                    "autoDeleteJobAllocations" : {
                        "type" : "boolean",
                        "default" : false
                    },
                    "autoAllocateJobOffers" : {
                        "type" : "boolean",
                        "default" : false
                    },
                    "autoAllocateShiftOffers" : {
                        "type" : "boolean",
                        "default" : false
                    },
                    "notifyExpiredOffers" : {
                        "type" : "boolean",
                        "default" : false
                    },
                    "enableJobSwap" : {
                        "type" : "boolean",
                        "default" : false
                    },
                    "teamLeader" : {
                        "type" : "boolean",
                        "default" : false
                    },
                    "enableFilterJobsByTimeConstraints" : {
                        "type" : "boolean",
                        "default" : false
                    },
                    "labels" : {
                        "$ref" : "#/components/schemas/OrgPreferenceLabels"
                    },
                    "mobile" : {
                        "$ref" : "#/components/schemas/MobileOrgPreferences"
                    },
                    "mobileV3" : {
                        "$ref" : "#/components/schemas/MobileV3OrgPreferences"
                    },
                    "web" : {
                        "$ref" : "#/components/schemas/WebOrgPreferences"
                    },
                    "services" : {
                        "$ref" : "#/components/schemas/ServiceOrgPreferences"
                    },
                    "notifications" : {
                        "$ref" : "#/components/schemas/NotificationOrgPreferences"
                    },
                    "messaging" : {
                        "$ref" : "#/components/schemas/MessagingOrgPreferences"
                    },
                    "exceptionReporting" : {
                        "$ref" : "#/components/schemas/ExceptionReportingOrgPreferences"
                    },
                    "visualforce" : {
                        "$ref" : "#/components/schemas/VisualforceOrgPreferences"
                    }
                }
            },
            "OrgPreferenceLabels" : {
                "type" : "object",
                "required" : [
                    "jobs",
                    "menu"
                ],
                "properties" : {
                    "jobs" : {
                        "$ref" : "#/components/schemas/JobActionLabels"
                    },
                    "menu" : {
                        "$ref" : "#/components/schemas/MenuLabels"
                    }
                }
            },
            "JobActionLabels" : {
                "type" : "object",
                "properties" : {
                    "confirm" : {
                        "type" : "string"
                    },
                    "decline" : {
                        "type" : "string"
                    },
                    "startTravel" : {
                        "type" : "string"
                    },
                    "checkIn" : {
                        "type" : "string"
                    },
                    "inProgress" : {
                        "type" : "string"
                    },
                    "complete" : {
                        "type" : "string"
                    },
                    "abortJob" : {
                        "type" : "string"
                    },
                    "createFollowUp" : {
                        "type" : "string"
                    },
                    "manageTimes" : {
                        "type" : "string"
                    },
                    "completionNotes" : {
                        "type" : "string"
                    }
                }
            },
            "MenuLabels" : {
                "type" : "object",
                "properties" : {
                    "customForms" : {
                        "type" : "string"
                    }
                }
            },
            "MobileOrgPreferences" : {
                "type" : "object",
                "description" : "Preference settings for Mobile. Also returns any custom values.",
                "required" : [
                    "allowManagementOfAvailabilities",
                    "allowManagementOfUnavailabilities",
                    "allowAutomaticRefreshOfJobs",
                    "allowManagementOfActivities",
                    "enableCreateActivity",
                    "enableDeleteActivity",
                    "completedJobsAreReadonlyOnMobile",
                    "enableCreateJob",
                    "enableManageTimes",
                    "enableProximityNotifications",
                    "supportEmail",
                    "enableFollowups",
                    "enableFollowupAssignToSelf",
                    "preloadAvailabilityRangeMinDays",
                    "preloadAvailabilityRangeMaxDays",
                    "preloadJobRangeMinDays",
                    "preloadJobRangeMaxDays",
                    "android",
                    "ios",
                    "jobOfferCardContent"
                ],
                "properties" : {
                    "allowManagementOfAvailabilities" : {
                        "type" : "boolean",
                        "default" : false
                    },
                    "allowManagementOfUnavailabilities" : {
                        "type" : "boolean",
                        "default" : true
                    },
                    "allowAutomaticRefreshOfJobs" : {
                        "type" : "boolean",
                        "default" : false
                    },
                    "allowManagementOfActivities" : {
                        "description" : "Deprecated, use enableCreateActivity and enableDeleteActivity instead.",
                        "type" : "boolean",
                        "default" : false
                    },
                    "enableCreateActivity" : {
                        "type" : "boolean",
                        "default" : true
                    },
                    "enableDeleteActivity" : {
                        "type" : "boolean",
                        "default" : true
                    },
                    "completedJobsAreReadonlyOnMobile" : {
                        "type" : "boolean",
                        "default" : false
                    },
                    "enableCreateJob" : {
                        "type" : "boolean",
                        "default" : false
                    },
                    "enableManageTimes" : {
                        "description" : "Prevent resources from changing job status timestamps.",
                        "type" : "boolean",
                        "default" : true
                    },
                    "enableProximityNotifications" : {
                        "type" : "boolean",
                        "default" : false
                    },
                    "supportEmail" : {
                        "type" : "string",
                        "default" : "support@skedulo.com"
                    },
                    "enableFollowups" : {
                        "type" : "boolean",
                        "default" : true
                    },
                    "enableFollowupAssignToSelf" : {
                        "type" : "boolean",
                        "default" : true
                    },
                    "preloadAvailabilityRangeMinDays" : {
                        "description" : "Number of days in the past for which availability should be loaded in the agenda view.",
                        "type" : "integer",
                        "default" : 90
                    },
                    "preloadAvailabilityRangeMaxDays" : {
                        "description" : "Number of days in the future for which availability should be loaded in the agenda view.",
                        "type" : "integer",
                        "default" : 180
                    },
                    "preloadJobRangeMinDays" : {
                        "description" : "Number of days in the past for which jobs should be loaded in the agenda view.",
                        "type" : "integer",
                        "default" : 90
                    },
                    "preloadJobRangeMaxDays" : {
                        "description" : "Number of days in the future for which jobs should be loaded in the agenda view.",
                        "type" : "integer",
                        "default" : 90
                    },
                    "android" : {
                        "$ref" : "#/components/schemas/MobileAndroidOrgPreferences"
                    },
                    "ios" : {
                        "$ref" : "#/components/schemas/MobileIOSOrgPreferences"
                    },
                    "jobOfferCardContent" : {
                        "$ref" : "#/components/schemas/JobOfferCardContentPreferences"
                    }
                },
                "additionalProperties" : {
                    "$ref" : "#/components/schemas/JSON"
                }
            },
            "MobileAndroidOrgPreferences" : {
                "type" : "object",
                "description" : "Also returns any custom values.",
                "properties" : {
                    "version" : {
                        "type" : "string"
                    }
                },
                "additionalProperties" : {
                    "$ref" : "#/components/schemas/JSON"
                }
            },
            "MobileIOSOrgPreferences" : {
                "type" : "object",
                "description" : "Also returns any custom values.",
                "properties" : {
                    "version" : {
                        "type" : "string"
                    }
                },
                "additionalProperties" : {
                    "$ref" : "#/components/schemas/JSON"
                }
            },
            "JobOfferCardContentPreferences" : {
                "type" : "object",
                "description" : "Provides overrides for fields for which values can be determined for a job offer",
                "properties" : {
                    "addressFieldOverride" : {
                        "type" : "string",
                        "example" : "AccountId"
                    },
                    "descriptionFieldOverride" : {
                        "type" : "string",
                        "example" : "DescCustomField"
                    },
                    "accountFieldOverride" : {
                        "type" : "string",
                        "example" : "AccountustomField"
                    }
                }
            },
            "MobileV3OrgPreferences" : {
                "type" : "object",
                "description" : "Preference settings for Mobile v3. Also returns any custom values.",
                "properties" : {
                    "appBundleId" : {
                        "type" : "string",
                        "example" : "com.skedulo.app.v3"
                    }
                },
                "additionalProperties" : {
                    "$ref" : "#/components/schemas/JSON"
                }
            },
            "WebOrgPreferences" : {
                "type" : "object",
                "description" : "Also returns any custom values.",
                "additionalProperties" : {
                    "$ref" : "#/components/schemas/JSON"
                }
            },
            "ServiceOrgPreferences" : {
                "type" : "object",
                "description" : "Also returns any custom values.",
                "properties" : {
                    "vendorApiKey" : {
                        "type" : "string"
                    },
                    "mapVendor" : {
                        "type" : "string",
                        "enum" : [
                            "GOOGLE",
                            "GRAPHHOPPER"
                        ]
                    }
                },
                "additionalProperties" : {
                    "$ref" : "#/components/schemas/JSON"
                }
            },
            "NotificationOrgPreferences" : {
                "type" : "object",
                "required" : [
                    "enabled",
                    "automatic"
                ],
                "properties" : {
                    "enabled" : {
                        "$ref" : "#/components/schemas/EnabledNotifications"
                    },
                    "automatic" : {
                        "$ref" : "#/components/schemas/AutomaticNotifications"
                    }
                }
            },
            "MessagingOrgPreferences" : {
                "type" : "object",
                "properties" : {
                    "enableAllUsers" : {
                        "type" : "boolean"
                    },
                    "enableDirectMessages" : {
                        "type" : "boolean"
                    },
                    "enableEditMessages" : {
                        "type" : "boolean"
                    },
                    "enableDeleteMessages" : {
                        "type" : "boolean"
                    },
                    "enableResourcesAddMembersToChannel" : {
                        "type" : "boolean"
                    },
                    "enableResourcesCreatePublicChannels" : {
                        "type" : "boolean"
                    },
                    "enableResourcesCreatePrivateChannels" : {
                        "type" : "boolean"
                    },
                    "enableResourcesCreateDirectChannels" : {
                        "type" : "boolean"
                    }
                }
            },
            "EnabledNotifications" : {
                "type" : "object",
                "description" : "Controls whether notifications are sent when a user calls an endpoint or via events if event notifications have also been enabled.",
                "required" : [
                    "job"
                ],
                "properties" : {
                    "job" : {
                        "$ref" : "#/components/schemas/EnabledJobNotifications"
                    }
                }
            },
            "EnabledJobNotifications" : {
                "type" : "object",
                "required" : [
                    "dispatch",
                    "reminder",
                    "cancelled",
                    "offer"
                ],
                "properties" : {
                    "dispatch" : {
                        "type" : "boolean",
                        "description" : "If true then a notification is sent to the resource when they are dispatched via the dispatch endpoint.",
                        "default" : true
                    },
                    "reminder" : {
                        "type" : "boolean",
                        "description" : "If true then a notification is sent to the resource if they are re-dispatched via the dispatch/notify endpoint.",
                        "default" : true
                    },
                    "cancelled" : {
                        "type" : "boolean",
                        "description" : "If true then a notification is sent to the resource if the notify_cancel endpoint is called or if automatic resource job events are enabled and a job they are allocated to is cancelled.",
                        "default" : true
                    },
                    "offer" : {
                        "type" : "boolean",
                        "description" : "If true then a notifications for job offers are sent to resources.",
                        "default" : true
                    }
                }
            },
            "AutomaticNotifications" : {
                "type" : "object",
                "description" : "Controls whether notifications are sent in response to object changes.",
                "required" : [
                    "resource"
                ],
                "properties" : {
                    "resource" : {
                        "$ref" : "#/components/schemas/ResourceAutomaticNotifications"
                    }
                }
            },
            "ResourceAutomaticNotifications" : {
                "type" : "object",
                "required" : [
                    "job",
                    "shift"
                ],
                "properties" : {
                    "job" : {
                        "description" : "If true then automatic notifications based on job changes can be sent to resources.",
                        "type" : "boolean",
                        "default" : false
                    },
                    "shift" : {
                        "description" : "If true then automatic notifications based on shift changes can be sent to resources.",
                        "type" : "boolean",
                        "default" : false
                    }
                }
            },
            "ExceptionReportingOrgPreferences" : {
                "type" : "object",
                "required" : [
                    "insufficientTravelTime"
                ],
                "properties" : {
                    "insufficientTravelTime" : {
                        "$ref" : "#/components/schemas/InsufficientTravelTimeOrgPreferences"
                    }
                }
            },
            "InsufficientTravelTimeOrgPreferences" : {
                "type" : "object",
                "required" : [
                    "enabled",
                    "maxTravelTimeInMinutes"
                ],
                "properties" : {
                    "enabled" : {
                        "description" : "Determines whether to generate insufficient travel time exceptions",
                        "type" : "boolean"
                    },
                    "maxTravelTimeInMinutes" : {
                        "description" : "Raise an exception if the travel time in minutes between two work items is greater than this value",
                        "type" : "integer",
                        "format" : "int32"
                    }
                }
            },
            "VisualforceOrgPreferences" : {
                "type" : "object",
                "required" : [
                    "jobItems",
                    "menuItems"
                ],
                "properties" : {
                    "jobItems" : {
                        "description" : "Visualforce items that are shown on the job details screen.",
                        "type" : "array",
                        "items" : {
                            "$ref" : "#/components/schemas/VisualforceLink"
                        }
                    },
                    "menuItems" : {
                        "description" : "Visualforce items that are shown on the hamburger menu.",
                        "type" : "array",
                        "items" : {
                            "$ref" : "#/components/schemas/VisualforceLink"
                        }
                    },
                    "nameFromJob" : {
                        "description" : "The name of a Visualforce page in Salesforce that is shown on the job details screen. This field is deprecated, use `jobItems` instead.",
                        "type" : "string"
                    },
                    "labelFromJob" : {
                        "description" : "The label used for the job details Visualforce page. This field is deprecated, use `jobItems` instead.",
                        "type" : "string"
                    },
                    "nameFromMenu" : {
                        "description" : "The name of a Visualforce page in Salesforce that is shown on the hamburger menu. This field is deprecated, use `menuItems` instead.",
                        "type" : "string"
                    },
                    "labelFromMenu" : {
                        "description" : "The label used for the hamburger menu Visualforce page. This field is deprecated, use `menuItems` instead.",
                        "type" : "string"
                    }
                }
            },
            "VisualforceLink" : {
                "type" : "object",
                "properties" : {
                    "name" : {
                        "description" : "The name of a Visualforce page in Salesforce.",
                        "type" : "string"
                    },
                    "label" : {
                        "description" : "The label used when displaying a link to the Visualforce page.",
                        "type" : "string"
                    }
                }
            },
            "OptOrgPreferences" : {
                "type" : "object",
                "properties" : {
                    "allowAbortJob" : {
                        "type" : "boolean"
                    },
                    "attachmentsDownload" : {
                        "type" : "boolean"
                    },
                    "enableHIPAACompliance" : {
                        "type" : "boolean"
                    },
                    "futureJobBuffer" : {
                        "type" : "integer",
                        "format" : "int32"
                    },
                    "jobTasksAreOptional" : {
                        "type" : "boolean"
                    },
                    "enableCompletionNotes" : {
                        "type" : "boolean"
                    },
                    "popupCompletionNotes" : {
                        "type" : "boolean"
                    },
                    "turnOnChatter" : {
                        "type" : "boolean"
                    },
                    "saveAttachmentAsFile" : {
                        "type" : "boolean"
                    },
                    "enableSMSResponse" : {
                        "type" : "boolean"
                    },
                    "allowJobsToBeDeclined" : {
                        "type" : "boolean"
                    },
                    "dispatchJobsToConfirmedStatus" : {
                        "type" : "boolean"
                    },
                    "disableEnRoute" : {
                        "type" : "boolean"
                    },
                    "disableOnSite" : {
                        "type" : "boolean"
                    },
                    "restrictResourcesFromWebApp" : {
                        "type" : "boolean"
                    },
                    "excludePendingDispatchAllocationsInICal" : {
                        "type" : "boolean"
                    },
                    "preventSchedulersFromCreatingJobs" : {
                        "type" : "boolean",
                        "default" : false
                    },
                    "enableShifts" : {
                        "type" : "boolean"
                    },
                    "autoApproveAvailabilities" : {
                        "type" : "boolean"
                    },
                    "autoDeleteJobAllocations" : {
                        "type" : "boolean"
                    },
                    "autoAllocateJobOffers" : {
                        "type" : "boolean"
                    },
                    "autoAllocateShiftOffers" : {
                        "type" : "boolean"
                    },
                    "notifyExpiredOffers" : {
                        "type" : "boolean"
                    },
                    "enableJobSwap" : {
                        "type" : "boolean"
                    },
                    "teamLeader" : {
                        "type" : "boolean"
                    },
                    "enableFilterJobsByTimeConstraints" : {
                        "type" : "boolean"
                    },
                    "labels" : {
                        "$ref" : "#/components/schemas/OptOrgPreferenceLabels"
                    },
                    "mobile" : {
                        "$ref" : "#/components/schemas/OptMobileOrgPreferences"
                    },
                    "mobileV3" : {
                        "$ref" : "#/components/schemas/OptMobileV3OrgPreferences"
                    },
                    "web" : {
                        "$ref" : "#/components/schemas/OptWebOrgPreferences"
                    },
                    "services" : {
                        "$ref" : "#/components/schemas/OptServiceOrgPreferences"
                    },
                    "notifications" : {
                        "$ref" : "#/components/schemas/OptNotificationOrgPreferences"
                    },
                    "exceptionReporting" : {
                        "$ref" : "#/components/schemas/OptExceptionReportingOrgPreferences"
                    },
                    "visualforce" : {
                        "$ref" : "#/components/schemas/OptVisualforceOrgPreferences"
                    }
                }
            },
            "OptOrgPreferenceLabels" : {
                "type" : "object",
                "properties" : {
                    "jobs" : {
                        "$ref" : "#/components/schemas/OptJobActionLabels"
                    },
                    "menu" : {
                        "$ref" : "#/components/schemas/OptMenuLabels"
                    }
                }
            },
            "OptJobActionLabels" : {
                "type" : "object",
                "properties" : {
                    "confirm" : {
                        "type" : "string"
                    },
                    "decline" : {
                        "type" : "string"
                    },
                    "startTravel" : {
                        "type" : "string"
                    },
                    "checkIn" : {
                        "type" : "string"
                    },
                    "inProgress" : {
                        "type" : "string"
                    },
                    "complete" : {
                        "type" : "string"
                    },
                    "abortJob" : {
                        "type" : "string"
                    },
                    "createFollowUp" : {
                        "type" : "string"
                    },
                    "manageTimes" : {
                        "type" : "string"
                    },
                    "completionNotes" : {
                        "type" : "string"
                    }
                }
            },
            "OptMenuLabels" : {
                "type" : "object",
                "properties" : {
                    "customForms" : {
                        "type" : "string"
                    }
                }
            },
            "OptMobileOrgPreferences" : {
                "type" : "object",
                "description" : "Also allows custom fields",
                "properties" : {
                    "allowManagementOfAvailabilities" : {
                        "type" : "boolean"
                    },
                    "allowManagementOfUnavailabilities" : {
                        "type" : "boolean"
                    },
                    "allowAutomaticRefreshOfJobs" : {
                        "type" : "boolean"
                    },
                    "allowManagementOfActivities" : {
                        "description" : "Deprecated, use enableCreateActivity and enableDeleteActivity instead.",
                        "type" : "boolean"
                    },
                    "enableCreateActivity" : {
                        "type" : "boolean"
                    },
                    "enableDeleteActivity" : {
                        "type" : "boolean"
                    },
                    "completedJobsAreReadonlyOnMobile" : {
                        "type" : "boolean"
                    },
                    "enableCreateJob" : {
                        "type" : "boolean"
                    },
                    "enableManageTimes" : {
                        "description" : "Prevent resources from changing job status timestamps.",
                        "type" : "boolean"
                    },
                    "enableProximityNotifications" : {
                        "type" : "boolean"
                    },
                    "supportEmail" : {
                        "type" : "string"
                    },
                    "enableFollowups" : {
                        "type" : "boolean"
                    },
                    "enableFollowupAssignToSelf" : {
                        "type" : "boolean"
                    },
                    "preloadAvailabilityRangeMinDays" : {
                        "description" : "Number of days in the past for which availability should be loaded in the agenda view.",
                        "type" : "integer"
                    },
                    "preloadAvailabilityRangeMaxDays" : {
                        "description" : "Number of days in the future for which availability should be loaded in the agenda view.",
                        "type" : "integer"
                    },
                    "preloadJobRangeMinDays" : {
                        "description" : "Number of days in the past for which jobs should be loaded in the agenda view.",
                        "type" : "integer"
                    },
                    "preloadJobRangeMaxDays" : {
                        "description" : "Number of days in the future for which jobs should be loaded in the agenda view.",
                        "type" : "integer"
                    },
                    "android" : {
                        "$ref" : "#/components/schemas/OptMobileAndroidOrgPreferences"
                    },
                    "mobile" : {
                        "$ref" : "#/components/schemas/OptMobileIOSOrgPreferences"
                    },
                    "jobOfferCardContent" : {
                        "$ref" : "#/components/schemas/OptJobOfferCardContentPreferences"
                    }
                },
                "additionalProperties" : {
                    "$ref" : "#/components/schemas/JSON"
                }
            },
            "OptMobileAndroidOrgPreferences" : {
                "type" : "object",
                "description" : "Also returns any custom values.",
                "properties" : {
                    "version" : {
                        "type" : "string"
                    }
                },
                "additionalProperties" : {
                    "$ref" : "#/components/schemas/JSON"
                }
            },
            "OptMobileIOSOrgPreferences" : {
                "type" : "object",
                "description" : "Also returns any custom values.",
                "properties" : {
                    "version" : {
                        "type" : "string"
                    }
                },
                "additionalProperties" : {
                    "$ref" : "#/components/schemas/JSON"
                }
            },
            "OptMobileV3OrgPreferences" : {
                "type" : "object",
                "description" : "Fields related to the Mobile V3 App",
                "properties" : {
                    "appBundleId" : {
                        "type" : "string",
                        "example" : "com.skedulo.app.v3"
                    }
                },
                "additionalProperties" : {
                    "$ref" : "#/components/schemas/JSON"
                }
            },
            "OptJobOfferCardContentPreferences" : {
                "type" : "object",
                "description" : "Provides overrides for fields for which values can be determined for a job offer",
                "properties" : {
                    "addressFieldOverride" : {
                        "type" : "string"
                    },
                    "descriptionFieldOverride" : {
                        "type" : "string"
                    },
                    "accountFieldOverride" : {
                        "type" : "string"
                    }
                }
            },
            "OptWebOrgPreferences" : {
                "type" : "object",
                "description" : "Also allows custom fields.",
                "additionalProperties" : {
                    "$ref" : "#/components/schemas/JSON"
                }
            },
            "OptServiceOrgPreferences" : {
                "type" : "object",
                "description" : "Also returns any custom values.",
                "properties" : {
                    "vendorApiKey" : {
                        "type" : "string"
                    },
                    "mapVendor" : {
                        "type" : "string",
                        "enum" : [
                            "GOOGLE",
                            "GRAPHHOPPER"
                        ]
                    }
                },
                "additionalProperties" : {
                    "$ref" : "#/components/schemas/JSON"
                }
            },
            "OptNotificationOrgPreferences" : {
                "type" : "object",
                "properties" : {
                    "enabled" : {
                        "$ref" : "#/components/schemas/OptEnabledNotifications"
                    },
                    "automatic" : {
                        "$ref" : "#/components/schemas/OptAutomaticNotifications"
                    }
                }
            },
            "OptEnabledNotifications" : {
                "type" : "object",
                "properties" : {
                    "job" : {
                        "$ref" : "#/components/schemas/OptJobEnabledNotifications"
                    }
                }
            },
            "OptJobEnabledNotifications" : {
                "type" : "object",
                "properties" : {
                    "dispatch" : {
                        "type" : "boolean",
                        "description" : "If true then a notification is sent to the resource when they are dispatched."
                    },
                    "reminder" : {
                        "type" : "boolean",
                        "description" : "If true then a notification is sent to the resource if they are re-dispatched."
                    },
                    "cancelled" : {
                        "type" : "boolean",
                        "description" : "If true then a notification is sent to the resource if a job they are allocated to is cancelled."
                    }
                }
            },
            "OptAutomaticNotifications" : {
                "type" : "object",
                "properties" : {
                    "resource" : {
                        "$ref" : "#/components/schemas/OptResourceAutomaticNotifications"
                    }
                }
            },
            "OptResourceAutomaticNotifications" : {
                "type" : "object",
                "properties" : {
                    "job" : {
                        "description" : "If true then automatic notifications based on job changes can be sent to resources.",
                        "type" : "boolean"
                    },
                    "shift" : {
                        "description" : "If true then automatic notifications based on shift changes can be sent to resources.",
                        "type" : "boolean"
                    }
                }
            },
            "OptExceptionReportingOrgPreferences" : {
                "type" : "object",
                "properties" : {
                    "insufficientTravelTime" : {
                        "$ref" : "#/components/schemas/OptInsufficientTravelTimeOrgPreferences"
                    }
                }
            },
            "OptInsufficientTravelTimeOrgPreferences" : {
                "type" : "object",
                "properties" : {
                    "enabled" : {
                        "description" : "Determines whether to generate insufficient travel time exceptions",
                        "type" : "boolean"
                    },
                    "maxTravelTimeInMinutes" : {
                        "description" : "Raise an exception if the travel time in minutes between two work items is greater than this value",
                        "type" : "integer",
                        "format" : "int32"
                    }
                }
            },
            "OptVisualforceOrgPreferences" : {
                "type" : "object",
                "properties" : {
                    "jobItems" : {
                        "description" : "Visualforce items that are shown on the job details screen.",
                        "type" : "array",
                        "items" : {
                            "$ref" : "#/components/schemas/VisualforceLink"
                        }
                    },
                    "menuItems" : {
                        "description" : "Visualforce items that are shown on the hamburger menu.",
                        "type" : "array",
                        "items" : {
                            "$ref" : "#/components/schemas/VisualforceLink"
                        }
                    },
                    "nameFromJob" : {
                        "description" : "The name of a Visualforce page in Salesforce that is shown on the job details screen. This field is deprecated, use `jobItems` instead.",
                        "type" : "string"
                    },
                    "labelFromJob" : {
                        "description" : "The label used for the job details Visualforce page. This field is deprecated, use `jobItems` instead.",
                        "type" : "string"
                    },
                    "nameFromMenu" : {
                        "description" : "The name of a Visualforce page in Salesforce that is shown on the hamburger menu. This field is deprecated, use `menuItems` instead.",
                        "type" : "string"
                    },
                    "labelFromMenu" : {
                        "description" : "The label used for the hamburger menu Visualforce page. This field is deprecated, use `menuItems` instead.",
                        "type" : "string"
                    }
                }
            },
            "ResultOKTemplates" : {
                "type" : "object",
                "properties" : {
                    "result" : {
                        "type" : "array",
                        "items" : {
                            "$ref" : "#/components/schemas/Template"
                        }
                    }
                }
            },
            "ResultOKCreateTemplate" : {
                "type" : "object",
                "properties" : {
                    "result" : {
                        "type" : "array",
                        "items" : {
                            "$ref" : "#/components/schemas/Template"
                        }
                    }
                }
            },
            "ResultOKDeleteTemplate" : {
                "type" : "object",
                "properties" : {
                    "deleted" : {
                        "$ref" : "#/components/schemas/TemplateId"
                    }
                }
            },
            "Template" : {
                "type" : "object",
                "required" : [
                    "id",
                    "name",
                    "schemaName"
                ],
                "properties" : {
                    "id" : {
                        "$ref" : "#/components/schemas/TemplateId"
                    },
                    "name" : {
                        "type" : "string"
                    },
                    "schemaName" : {
                        "type" : "string"
                    }
                }
            },
            "NewTemplate" : {
                "type" : "object",
                "required" : [
                    "name",
                    "schemaName"
                ],
                "properties" : {
                    "name" : {
                        "type" : "string"
                    },
                    "schemaName" : {
                        "type" : "string"
                    }
                }
            },
            "UpdateTemplate" : {
                "type" : "object",
                "required" : [
                    "name"
                ],
                "properties" : {
                    "name" : {
                        "type" : "string"
                    }
                }
            },
            "ResultOKTemplateValues" : {
                "type" : "object",
                "properties" : {
                    "result" : {
                        "type" : "array",
                        "items" : {
                            "$ref" : "#/components/schemas/TemplateValue"
                        }
                    }
                }
            },
            "TemplateValue" : {
                "type" : "object",
                "required" : [
                    "id",
                    "templateId",
                    "rel",
                    "field",
                    "value"
                ],
                "properties" : {
                    "id" : {
                        "$ref" : "#/components/schemas/TemplateValueId"
                    },
                    "templateId" : {
                        "$ref" : "#/components/schemas/TemplateId"
                    },
                    "rel" : {
                        "type" : "string"
                    },
                    "field" : {
                        "type" : "string"
                    },
                    "value" : {
                        "type" : "string"
                    }
                }
            },
            "NewTemplateValue" : {
                "type" : "object",
                "required" : [
                    "rel",
                    "field",
                    "value"
                ],
                "properties" : {
                    "rel" : {
                        "type" : "string"
                    },
                    "field" : {
                        "type" : "string"
                    },
                    "value" : {
                        "type" : "string"
                    }
                }
            },
            "TemplateId" : {
                "type" : "string",
                "format" : "uuid"
            },
            "TemplateValueId" : {
                "type" : "string",
                "format" : "uuid"
            },
            "Layout" : {
                "type" : "object",
                "required" : [
                    "relatedData"
                ],
                "properties" : {
                    "relatedData" : {
                        "type" : "array",
                        "items" : {
                            "$ref" : "#/components/schemas/LayoutRelatedData"
                        }
                    }
                }
            },
            "LayoutRelatedData" : {
                "oneOf" : [
                    {
                        "$ref" : "#/components/schemas/LayoutRelatedDataRelatedObject"
                    }
                ],
                "discriminator" : {
                    "propertyName" : "type",
                    "mapping" : {
                        "relatedObjects" : "#/components/schemas/LayoutRelatedDataRelatedObject"
                    }
                }
            },
            "LayoutRelatedDataRelatedObject" : {
                "required" : [
                    "type",
                    "object"
                ],
                "properties" : {
                    "type" : {
                        "type" : "string",
                        "enum" : [
                            "relatedObjects"
                        ]
                    },
                    "reference" : {
                        "type" : "string"
                    },
                    "object" : {
                        "type" : "string"
                    },
                    "label" : {
                        "type" : "string"
                    },
                    "listFields" : {
                        "type" : "array",
                        "items" : {
                            "$ref" : "#/components/schemas/LayoutRelatedDataRelatedObjectField"
                        }
                    }
                }
            },
            "LayoutRelatedDataRelatedObjectField" : {
                "required" : [
                    "fieldName"
                ],
                "properties" : {
                    "fieldName" : {
                        "type" : "string"
                    }
                }
            },
            "Error" : {
                "type" : "object",
                "required" : [
                    "errorType",
                    "message"
                ],
                "properties" : {
                    "errorType" : {
                        "type" : "string"
                    },
                    "message" : {
                        "type" : "string"
                    },
                    "errorId" : {
                        "type" : "string"
                    }
                }
            }
        }
    }
}
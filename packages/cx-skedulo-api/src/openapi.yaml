openapi: 3.0.0
info:
  title: Skedulo Lens API
  version: 1.0.0
  description: "## Overview\n\nThe Skedulo Lens API reference documentation is designed to assist developers integrate Skedulo platform functionality into their applications. The Skedulo API provides full data access to standard and custom objects via GraphQL, including the ability to create and schedule jobs, manage allocation to resources and customers, and handle contact information.\n\nSkedulo Lens API also provides the capabilities to:\n\n  * Dispatch jobs to resources and manage notifications, via SMS or push.\n  * Call the optimization engine to schedule jobs efficiently to multiple resources.\n  * Access tracking and summary information about job travel and service times.\n  * Access current and historical information about resource locations.\n  * Get information about resource availability.\n\n### API calls must include the following HTTP headers:\n\n     * `content-type`: `application/json`\n     * `authorization`: `Bearer “$API_TOKEN”`\n\n### UTC time format\n\nAs a general rule, all Skedulo APIs that rely on timestamp inclusion in request bodies, or that return timestamps in their responses, use UTC time ([Coordinated Universal Time](https://en.wikipedia.org/wiki/Coordinated_Universal_Time)).\n\n## Regional URLs\n\nSkedulo tenant instances are deployed in one of the four geographical regions: US, UK, Canada and Australia. The Skedulo API is hosted on a different subdomain in each region:\n\n  * US - https://api.skedulo.com\n  * UK - https://api.uk.skedulo.com\n  * CA - https://api.ca.skedulo.com\n  * AU - https://api.au.skedulo.com\n\n  Data is accessible only via the API subdomain for the tenant’s geographical deployment region. Note that the deployment region might not be the same as the physical location of the customer’s business.\n\n  All API clients must query the main (US) API first to determine the correct subdomain for subsequent requests. They can do this by calling the\__/auth/config/team/web_ endpoint with the team name, for example:\n  https://api.skedulo.com/auth/config/team/web?name=my-team, where\_`my-team`\_is the team name in any region.\n\n  All subsequent API calls must be to the subdomain that is returned in\_the result.server.api field of the response.\n"
  contact:
    email: support@skedulo.com
servers:
  - url: 'https://api.skedulo.com'
  - url: 'https://api.uk.skedulo.com'
  - url: 'https://api.ca.skedulo.com'
  - url: 'https://api.au.skedulo.com'
security:
  - BearerAuth: []
tags:
  - name: Authentication API
    description: >
      Use the Authentication API to manage API permissions for your users,
      obtain delegation tokens, user metadata, and authentication configuration.
  - name: Access control
    description: >
      Retrieve information about Skedulo objects and field level permission and
      override or modify default role permissions.


      Remote access control for objects and roles uses two endpoints;
      `/custom/permissions` for retrieving object metadata, and
      `/standalone/permissions/role` for retrieving and modifying user role
      permissions.


      > ### Admin only

      > Only admin users can make create, edit, and delete permissions.


      > ### Managed package users

      > Skedulo for Salesforce users must have the `API enabled` and `View Setup
      and Configuration` system permissions enabled.
  - name: Notifications
    description: >
      The Notifications API dispatches jobs to resources and sends notifications
      via SMS or push.

      Notifications can also be sent to any phone number using the
      `/notfications/sms` endpoint.
  - name: Resource tracking
    description: >
      Resource tracking provides routing information and location updates via
      the mobile application for your resources in the field. Retrieve current
      and historical locations, and summarize travel and service times by job
      and resource.
  - name: Planr
    description: >-
      You can use the Skedulo Lens REST API to perform optimization operations
      using the Planr endpoints available from the
      `https://api.skedulo.com/planr` base URL.


      > ### Planr deprecation

      > Planr is being deprecated in favor of the new `/optimization` endpoint.

      > Planr continues to be supported at this stage, however we recommend that
      you use `/optimization` for optimization requests going forward.

       All requests require an API authentication token, which can be set as an environment variable. The examples in this chapter use `$API_TOKEN` to represent this variable. For information about how to set up an authentication token, see [Authentication](https://developer.skedulo.com/docs/introduction/authentication/).

       > ### Usage limitations
       >
       > Planr is limited to 200 jobs per request within the scheduling window.
  - name: GraphQL
    description: >
      GraphQL is a query language that allows selective access to objects in the
      data graph. Skedulo Lens supports GraphQL queries for all standard objects
      as well as any custom objects and fields you have defined.


      The Skedulo GraphQL HTTP server handles POST methods using the
      application/json content type and with a JSON-encoded body. Responses,
      including both data and errors, are also returned in JSON format. Make
      queries and mutations using GraphQL.


      For more information about using Skedulo GraphQL, see the [developer
      documentation](https://developer.skedulo.com/docs/graphql) or the [Skedulo
      GraphQL Schema
      Documentation](https://developer.skedulo.com/docs/skedulo_lens_api/graphql/).
  - name: Webhooks
    description: >
      Retrieve the GraphQL schema that is used for webhooks with type `graphql`.


      For more information about how to create webhooks, see the
      [Webhooks](https://developer.skedulo.com/docs/integration/webhooks)
      section in the Skedulo developer documentation.
  - name: Triggered actions
    description: >
      Triggered actions are made up of a trigger and an action. The trigger
      defines an event that causes an action to be performed. Only certain
      actions are valid for a trigger.


      Triggered actions are defined per tenant via the `/triggered-actions`
      endpoints. They can be inserted, updated, and deleted. Updating a
      triggered action cannot change the type of the trigger or action


      The following event types are currently supported:

        * `object_modified` triggers fire when an object that can have a GraphQL subscription and is tracked for changes is inserted, updated or deleted. To configure the trigger, you need to provide the trigger type, the target schema/object name, and an EQL filter.

          The filter specifies when the action should be performed and can refer to the operation name and the current and previous data objects.

          ```json
            "trigger" : {
              "type": "object_modified",
              "schemaName": "Jobs",
              "filter": "Operation == 'INSERT' OR Current.JobStatus != Previous.JobStatus"
            }
          ```

      * `event` triggers fire when pre-defined events occur.

        * `recurring_schedule`: Indicates that a recurring schedule has been updated.

          * `jobIds`: The list of jobs updated as part of a single action.
          * `jobFields`: Represents the set of values changed across jobs.
  - name: Availability
    description: |
      Query and manage resource availability for a given time period.
  - name: Onboarding
    description: >-
      Provision users from a CSV or JSON file, or directly by sending a JSON
      request body. This adds the new users to Auth0 and sends an onboarding
      email to their provided email address.
  - name: Configurations
    description: |
      Configure feature flags, UFB settings, user preferences, and templates.
  - name: Custom fields
    description: >
      Create and delete custom fields in Skedulo.


      * Use the `/custom/standalone` endpoints to create or delete custom schema
      objects and fields in Skedulo.

      * Use the `/custom/vocabulary` endpoints to modify picklist values.


      > ### Important

      > The `/custom` endpoint is only for use with Skedulo.

      >

      > Skedulo for Salesforce users must create custom fields in Salesforce.
  - name: Files
    description: |
      Manage attachments and avatars.
  - name: Geoservices
    description: >
      Geoservices provide a way to access all the gor location APIs that are
      external to Skedulo. It handles all interactions between with the mapping
      tools and helps in calculation of various map-based operations.
  - name: iCal token
    description: >
      iCal exposes the schedule via the
      [iCalendar](https://en.wikipedia.org/wiki/ICalendar) protocol for
      integration into third-party calendar products.
  - name: Schedule management
    description: >
      Use the scheduling API to copy and dispatch multiple jobs, shifts, or
      activities, or to create and apply schedule templates.
  - name: Recurring schedules
    description: |
      Set up and manage recurring schedules.
  - name: Virtual meetings
    description: >
      Create virtual meetings for jobs that need to be carried out remotely.


      > ### Important

      > Your organization must have virtual meeting integration set up to use
      the `/virtualmeeting` endpoint.

      > Administrators can use the Skedulo Web Application to install virtual
      meetings and authenticate a virtual meeting provider for your
      organization.

      >

      > For more information about virtual meetings, see the [Virtual
      Meetings](https://support.skedulo.com/hc/en-us/articles/360001499716-Virtual-Meetings)
      support documentation.
  - name: Optimization
    description: >
      Use the Optimization API to run adhoc or scheduled optimizations and

      query the results.  The Optimization API can handle larger data sets than

      the Planr API and can devote more time to finding the most optimal

      schedule.


      > ### Optimization request limits

      > Optimization has a hard limit of 2000 jobs and 200 resources per
      request. Smaller requests may yield better results, and we recommend
      reducing the number of items in a request where possible.
components:
  securitySchemes:
    Authorization:
      type: apiKey
      in: header
      name: Authorization
      description: >-
        Skedulo APIs can be accessed by an access token. This is either a
        perpetual or time-limited token which can be presented as proof of
        authentication. Access tokens can be obtained via the admin settings of
        the Skedulo web app.

        Create long-lived access tokens via [Admin Setting: Developer
        Tools](https://support.skedulo.com/hc/en-us/articles/360001270035-Admin-Setting-Developer-Tools).
    BearerAuth:
      type: http
      scheme: bearer
      description: >-
        The access token obtained above is a Base64 encoded [JavaScript Web
        Token (JWT)](https://jwt.io/).  You use this by placing it into the
        `Authorization` header of the REST API request using the `Bearer`
        method.

        For example:

        ```

        curl -X GET https://api.skedulo.com/auth/whoami -H "Authorization:
        Bearer
        eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6Ik9ESkNORFE0TkRJMVJUTkJNekE1TlRFNVJqVTFORGxDUXpjME9EZEJOVEF3T1RjNE1rVkZSUSJ9.eyJodHRwczovL2FwaS5za2VkdWxvLmNvbS92ZW5kb...-dpYZm_8YuaUYTnMrS4Fs3fQTDxM0oEkt9CWWJxPQTOv3l3pjp3sgDeuRvzYcaFZuoVTVLPYNidL9Pc5gPMrsXpTxOJL3nMF-2GmJJ5YHAXgG2cQc9MmL74u7IsGbQ-qg"

        ```
paths:
  /auth/whoami:
    get:
      security:
        - Authorization: []
      summary: Whoami
      description: Return the current user's authentication information
      operationId: whoami
      parameters:
        - name: access_token
          in: query
          description: >-
            Access token. This is an alternative to passing the Authorization:
            `Bearer` header
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The current users authentication information was returned
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    required:
                      - username
                      - userId
                      - tenantId
                      - roles
                      - vendorInfo
                    properties:
                      username:
                        type: string
                      userId:
                        type: string
                      tenantId:
                        type: string
                      roles:
                        type: array
                        items:
                          type: string
                          enum:
                            - administrator
                            - scheduler
                            - resource
                      resourceId:
                        type: string
                      vendorInfo:
                        oneOf:
                          - type: object
                            required:
                              - vendor
                              - env
                            properties:
                              vendor:
                                type: string
                                example: salesforce
                              env:
                                type: string
                                enum:
                                  - salesforce
                                  - salesforce-sandbox
                              communityId:
                                type: string
                                description: >-
                                  community ID for this user if this user
                                  belongs to one
                              vendorUserId:
                                type: string
                                description: Salesforce user ID of this user
                          - type: object
                            required:
                              - vendor
                            properties:
                              vendor:
                                type: string
                                example: skedulo
                              vendorUserId:
                                type: string
                                description: Skedulo user ID of this user
                      permissions:
                        description: >-
                          The permissions for the user. Only present if the
                          useNewPermissions feature flag is enabled.
                        type: array
                        items:
                          description: Permission keys assigned to the user
                          type: string
      tags:
        - Authentication API
  /auth/access_rules:
    get:
      security:
        - Authorization: []
      summary: Data access rules for the current user
      description: >-
        Return the current user's data access rules. Requires the
        useRecordAccessPolicies feature flag.
      operationId: access_rules
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      type: object
                      required:
                        - objectType
                        - filter
                      properties:
                        objectType:
                          type: string
                        filter:
                          description: >-
                            EQL filter that is applied when accessing records of
                            the object type
                          type: string
      tags:
        - Authentication API
  /auth/api_user:
    post:
      security:
        - Authorization: []
      summary: Set a user as the API User for this tenant
      description: >-
        The user assigning the API user must be an administrator.


        >NOTE:

        >If you make any modifications to the user assigned as the API User, you
        need to set the user as the API User again to ensure the data stored for
        the user is up to date. Otherwise, some claims in the access token will
        be outdated.
      operationId: setApiUser
      responses:
        '200':
          description: The user was successfully setup as the API User.
          content:
            '*/*':
              schema:
                type: object
                required:
                  - result
                properties:
                  result:
                    type: object
                    required:
                      - authEndpoint
                      - authBody
                    properties:
                      authEndpoint:
                        type: string
                        description: >-
                          The endpoint to obtain the Skedulo API access token
                          using the body given in authBody. The authorization
                          flow is called client credentials flow.
                      authBody:
                        type: object
                        description: >-
                          The content of this object should be sent verbatim to
                          the authEndpoint (POST) to obtain a Skedulo API access
                          token.
                        required:
                          - grant_type
                          - client_id
                          - client_secret
                          - audience
                        properties:
                          grant_type:
                            type: string
                            example: client_credentials
                          client_id:
                            type: string
                          client_secret:
                            type: string
                          audience:
                            type: string
        '403':
          description: If the user is not an administrator
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - userId
              properties:
                userId:
                  type: string
                  description: Skedulo User ID of the user to be setup as the API User
        required: true
      tags:
        - Authentication API
    delete:
      security:
        - Authorization: []
      summary: Remove the API User for this tenant
      description: >-
        Removes the API User for this tenant if they have one. If the tenant is
        on Standalone this will reset their API user to the system user. The
        caller must be an administrator.
      operationId: removeApiUser
      responses:
        '200':
          description: successful result
        '403':
          description: If the user is not an administrator
      tags:
        - Authentication API
  /auth/api_user/client_credentials:
    get:
      security:
        - Authorization: []
      summary: Get client credentials information for the API user
      description: >-
        The user requesting this information must be an administrator for their
        organization.
      operationId: getApiUserClientCredentials
      responses:
        '200':
          description: Client credentials information of the API user
          content:
            '*/*':
              schema:
                type: object
                required:
                  - result
                properties:
                  result:
                    type: object
                    required:
                      - authEndpoint
                      - authBody
                    properties:
                      authEndpoint:
                        type: string
                        description: >-
                          The endpoint to obtain the Skedulo API access token
                          using the body given in authBody. The authorization
                          flow is called client credentials flow.
                      authBody:
                        type: object
                        description: >-
                          The content of this object should be sent verbatim to
                          the authEndpoint (POST) to obtain a Skedulo API access
                          token.
                        required:
                          - grant_type
                          - client_id
                          - client_secret
                          - audience
                        properties:
                          grant_type:
                            type: string
                            example: client_credentials
                          client_id:
                            type: string
                          client_secret:
                            type: string
                          audience:
                            type: string
        '403':
          description: User is not an administrator
        '404':
          description: API user is not setup
      tags:
        - Authentication API
  /auth/api_user/candidates:
    get:
      security:
        - Authorization: []
      summary: List API user candidates
      description: >-
        List candidates that can be set as the API user and the current API
        user. Only users with role `administrator` are returned.
      operationId: listApiUserCandidates
      responses:
        '200':
          description: List of candidates that can be assigned as the API User
          content:
            application/json:
              schema:
                type: object
                required:
                  - result
                properties:
                  result:
                    type: object
                    required:
                      - candidates
                    properties:
                      currentApiUserId:
                        type: string
                        description: User ID of the current API User
                      moreCandidatesExist:
                        type: boolean
                        description: >-
                          True if only a subset of all available candidates is
                          being returned
                      candidates:
                        type: array
                        items:
                          type: object
                          required:
                            - userId
                            - vendorUserId
                            - lastName
                            - username
                            - roles
                            - email
                            - emailVerified
                          properties:
                            userId:
                              type: string
                            vendorUserId:
                              type: string
                            firstName:
                              type: string
                            lastName:
                              type: string
                            username:
                              type: string
                            resourceId:
                              type: string
                            roles:
                              type: array
                              items:
                                type: string
                                enum:
                                  - administrator
                                  - scheduler
                                  - resource
                            email:
                              type: string
                              format: email
                            emailVerified:
                              type: boolean
      tags:
        - Authentication API
  /auth/api_user/verify:
    get:
      security:
        - Authorization: []
      summary: Check if the API user is verified
      description: ''
      operationId: verifyApiUser
      responses:
        '200':
          description: >-
            If the result contains success equal to true the API user is
            verified, otherwise it is not.
          content:
            application/json:
              schema:
                type: object
                required:
                  - result
                properties:
                  result:
                    type: object
                    required:
                      - success
                    properties:
                      success:
                        type: boolean
                      code:
                        type: string
                      message:
                        type: boolean
                      extraFields:
                        type: object
                        description: Additional information about the error
                        additionalProperties: true
      tags:
        - Authentication API
  /auth/metadata/user:
    get:
      security:
        - Authorization: []
      summary: Current user metadata
      description: Fetch metadata about the current user.
      operationId: metadataUser
      responses:
        '200':
          description: The current users metadata
          content:
            application/json:
              schema:
                type: object
                properties:
                  created:
                    type: object
                    required:
                      - id
                      - email
                      - username
                      - fullName
                      - lastName
                      - team
                    properties:
                      id:
                        type: string
                      email:
                        type: string
                      username:
                        type: string
                      fullName:
                        type: string
                      firstName:
                        type: string
                      lastName:
                        type: string
                      team:
                        type: object
                        required:
                          - id
                          - name
                          - description
                          - vendor
                          - orgId
                        properties:
                          id:
                            type: string
                          name:
                            description: A valid DNS sub domain
                            type: string
                          description:
                            description: A human friendly name
                            type: string
                          vendor:
                            description: The vendor associated with this organization
                            type: string
                            enum:
                              - salesforce
                              - servicenow
                              - skedulo
                          orgId:
                            description: The vendor specific organization ID
                            type: string
                          customer:
                            description: The customer name.
                            type: string
                      resource:
                        type: object
                        required:
                          - id
                          - timezone
                        properties:
                          id:
                            type: string
                          category:
                            type: string
                          employmentType:
                            type: string
                          address:
                            type: string
                          latitude:
                            type: number
                          longitude:
                            type: number
                          mobilePhone:
                            type: string
                          timezone:
                            type: string
        '412':
          description: The user belongs to a tenant that is not associated with a team
      tags:
        - Authentication API
  /auth/link_resource:
    post:
      security:
        - Authorization: []
      summary: Create link between resource and user
      description: Links (assigns) a resource to a user by their respective Ids.
      operationId: linkResource
      responses:
        '200':
          description: User and resource were successfully linked.
        '403':
          description: The user does not have permission to perform this action.
        '404':
          description: No user found for the given id.
          content:
            '*/*':
              schema:
                type: object
                example:
                  errorType: not_found
                  message: Could not find user with vendor user id 1234
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - userId
                - resourceId
              properties:
                userId:
                  type: string
                  description: The user id of the user to be linked to given resource
                resourceId:
                  type: string
                  description: The resource id of the resource to be linked to given user
        required: true
      tags:
        - Authentication API
    delete:
      security:
        - Authorization: []
      summary: Remove link between resource and user
      description: Unlinked a resource to a user by their respective Ids.
      operationId: unlinkResource
      responses:
        '200':
          description: successful result
        '403':
          description: The user does not have permission to perform this action.
        '404':
          description: No user found for the given id.
          content:
            '*/*':
              schema:
                type: object
                example:
                  errorType: not_found
                  message: Could not find user with vendor user id 1234
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - user_id
                - resource_id
              properties:
                user_id:
                  type: string
                  description: The user id of the user to be linked to given resource
                resource_id:
                  type: string
                  description: The resource id of the resource to be linked to given user
        required: true
      tags:
        - Authentication API
  /auth/tokens:
    get:
      summary: List all API tokens
      description: List all the available and revoked API tokens.
      operationId: fetchAll
      responses:
        '200':
          description: Return information about all the available and revoked API tokens.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      type: object
                      required:
                        - tenantId
                        - jti
                        - claims
                        - createdDate
                        - createdBy
                      properties:
                        tenantId:
                          type: string
                          example: sk_e0bb1f8aa1924a00b77a9c1f43b09e41
                        jti:
                          type: string
                          example: BM10SHoI4Z4nmhtElInXuJWLkeeqqyzy
                        claims:
                          description: Selection of the user claims from the JWT
                          type: object
                          additionalProperties: true
                        createdDate:
                          type: string
                          format: date-time
                        createdBy:
                          type: string
                        revokedDate:
                          type: string
                          format: date-time
                        revokedBy:
                          type: string
                        lastUpdated:
                          type: string
                          format: date-time
      tags:
        - Authentication API
  '/auth/token/{jti}':
    get:
      summary: Get API token using JTI
      description: Get an API token by specifying its JTI.
      operationId: fetchAllApiTokens
      parameters:
        - in: path
          name: jti
          description: The JWT Identifier for the API token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Return information about the requested API token
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    required:
                      - tenantId
                      - jti
                      - claims
                      - createdDate
                      - createdBy
                    properties:
                      tenantId:
                        type: string
                        example: sk_e0bb1f8aa1924a00b77a9c1f43b09e41
                      jti:
                        type: string
                        example: BM10SHoI4Z4nmhtElInXuJWLkeeqqyzy
                      claims:
                        description: Selection of the user claims from the JWT
                        type: object
                        additionalProperties: true
                      createdDate:
                        type: string
                        format: date-time
                      createdBy:
                        type: string
                      revokedDate:
                        type: string
                        format: date-time
                      revokedBy:
                        type: string
                      lastUpdated:
                        type: string
                        format: date-time
      tags:
        - Authentication API
  /auth/token:
    post:
      summary: Create API token
      description: >-
        Create an API token with an optional expiry. This token can be used to
        authenticate as the same user that created it (with the same claims) for
        as long as the token is valid. Tokens may be revoked.
      operationId: createApiToken
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                expiry:
                  description: Optional expiry. If omitted the token is valid forever.
                  type: string
                  format: date-time
      responses:
        '200':
          description: Return the API token
          content:
            application/json:
              schema:
                type: object
                required:
                  - result
                properties:
                  result:
                    type: object
                    required:
                      - token
                      - jti
                    properties:
                      token:
                        type: string
                        format: base64
                        example: >-
                          5l8l/TyAG+282cBi0JoAp8Gj2WtnXjhxkHKu5J+ytWJcp5kHG9I7k...A==
                      jti:
                        type: string
                        example: x62ThdBIqHVmILpLKdHbZctTaEzySGGc
      tags:
        - Authentication API
  /auth/token/revoke:
    post:
      summary: Revoke API token
      description: >-
        Revoke an API token so it can no longer be used. The token will be
        returned but marked as revoked. It cannot be used to authenticate once
        revoked.
      operationId: revokeToken
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                jti:
                  description: JWT Identfier of token to revoke
                  type: string
      responses:
        '200':
          description: The token was revoked
          content:
            application/json:
              schema:
                type: object
                required:
                  - result
                properties:
                  result:
                    type: object
      tags:
        - Authentication API
  /custom/permissions:
    get:
      security:
        - Authorization: []
      summary: Return permission metadata for the given object names
      description: ''
      operationId: fetchPermissions
      parameters:
        - name: names
          in: path
          description: >-
            A non-empty comma separated string of object names to fetch
            permission metadata for
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    description: Object permission metadata keyed by the object name
                    additionalProperties:
                      type: object
                      required:
                        - read
                        - create
                        - update
                        - delete
                        - fields
                      properties:
                        read:
                          type: boolean
                          description: >-
                            True if the current user has permission to read from
                            this object
                        create:
                          type: boolean
                          description: >-
                            True if the current user has permission to create a
                            record in this object
                        update:
                          type: boolean
                          description: >-
                            True if the current user has permission to update a
                            record in this object
                        delete:
                          type: boolean
                          description: >-
                            True if the current user has permission to delete a
                            record in this object
                        fields:
                          description: Fields of the object keyed by their name
                          additionalProperties:
                            type: object
                            required:
                              - read
                              - create
                              - update
                            properties:
                              read:
                                type: boolean
                                description: >-
                                  True if the current user has permission to
                                  read from this field
                              create:
                                type: boolean
                                description: >-
                                  True if the current user has permission to
                                  insert a value into this field
                              update:
                                type: boolean
                                description: >-
                                  True if the current user has permission to
                                  update a value in this field
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
      tags:
        - Access control
  /standalone/permissions/role:
    get:
      summary: Fetch role permissions
      description: Fetch the default permissions and custom permissions for each role
      operationId: rolePermissions
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - result
                properties:
                  result:
                    type: object
                    description: The object key is the name of the role
                    additionalProperties:
                      type: object
                      properties:
                        defaults:
                          nullable: true
                          oneOf:
                            - type: object
                              required:
                                - type
                              properties:
                                type:
                                  type: string
                                  enum:
                                    - all
                            - type: object
                              required:
                                - type
                                - objects
                              properties:
                                type:
                                  type: string
                                  enum:
                                    - custom
                                objects:
                                  type: object
                                  description: key is the name of the object
                                  additionalProperties:
                                    type: object
                                    required:
                                      - permissions
                                      - fields
                                    properties:
                                      permissions:
                                        type: object
                                        required:
                                          - read
                                          - create
                                          - update
                                          - delete
                                        properties:
                                          read:
                                            type: boolean
                                          create:
                                            type: boolean
                                          update:
                                            type: boolean
                                          delete:
                                            type: boolean
                                      fields:
                                        type: object
                                        description: key is the name of the field
                                        additionalProperties:
                                          type: object
                                          required:
                                            - read
                                            - create
                                            - update
                                          properties:
                                            read:
                                              type: boolean
                                            create:
                                              type: boolean
                                            update:
                                              type: boolean
                          discriminator:
                            propertyName: type
                            mapping:
                              all: '#/components/schemas/PermissionsAll'
                              custom: '#/components/schemas/PermissionsCustom'
                        overrides:
                          nullable: true
                          oneOf:
                            - type: object
                              required:
                                - type
                              properties:
                                type:
                                  type: string
                                  enum:
                                    - all
                            - type: object
                              required:
                                - type
                                - objects
                              properties:
                                type:
                                  type: string
                                  enum:
                                    - custom
                                objects:
                                  type: object
                                  description: key is the name of the object
                                  additionalProperties:
                                    type: object
                                    required:
                                      - permissions
                                      - fields
                                    properties:
                                      permissions:
                                        type: object
                                        required:
                                          - read
                                          - create
                                          - update
                                          - delete
                                        properties:
                                          read:
                                            type: boolean
                                          create:
                                            type: boolean
                                          update:
                                            type: boolean
                                          delete:
                                            type: boolean
                                      fields:
                                        type: object
                                        description: key is the name of the field
                                        additionalProperties:
                                          type: object
                                          required:
                                            - read
                                            - create
                                            - update
                                          properties:
                                            read:
                                              type: boolean
                                            create:
                                              type: boolean
                                            update:
                                              type: boolean
                          discriminator:
                            propertyName: type
                            mapping:
                              all: '#/components/schemas/PermissionsAll'
                              custom: '#/components/schemas/PermissionsCustom'
        '403':
          description: If the user is not an administrator
          content:
            '*/*':
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
        default:
          description: Error
          content:
            '*/*':
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
      tags:
        - Access control
  '/standalone/permissions/role/{role}':
    parameters:
      - name: role
        in: path
        description: Name of the role
        example: administrator | scheduler | resource
        required: true
        schema:
          type: string
    post:
      summary: Override default permissions for a role
      description: To remove a single object or field override pass `null` as the value.
      operationId: rolePermissionsSet
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - objects
              properties:
                objects:
                  type: object
                  description: key is the name of the object
                  additionalProperties:
                    nullable: true
                    type: object
                    required:
                      - permissions
                      - fields
                    properties:
                      permissions:
                        type: object
                        required:
                          - read
                          - create
                          - update
                          - delete
                        properties:
                          read:
                            type: boolean
                          create:
                            type: boolean
                          update:
                            type: boolean
                          delete:
                            type: boolean
                      fields:
                        type: object
                        description: key is the name of the field
                        additionalProperties:
                          nullable: true
                          type: object
                          required:
                            - read
                            - create
                            - update
                          properties:
                            read:
                              type: boolean
                            create:
                              type: boolean
                            update:
                              type: boolean
      responses:
        '200':
          description: successful operation
        '403':
          description: If the user is not an administrator
          content:
            '*/*':
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
        default:
          description: Error
          content:
            '*/*':
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
      tags:
        - Access control
    delete:
      summary: Remove any permission overrides for a role
      description: ''
      operationId: rolePermissionsDelete
      responses:
        '200':
          description: successful operation
        '403':
          description: If the user is not an administrator
          content:
            '*/*':
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
        default:
          description: Error
          content:
            '*/*':
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
      tags:
        - Access control
  /notifications/dispatch:
    post:
      security:
        - Authorization: []
      summary: Dispatch resources
      tags:
        - Notifications
      description: |
        This endpoint will dispatch the resources and notify them.
      responses:
        '200':
          description: Result
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    required:
                      - jobId
                      - results
                    properties:
                      jobId:
                        type: string
                      results:
                        type: array
                        items:
                          type: object
                          properties:
                            resourceId:
                              type: string
                            protocol:
                              type: string
                            error:
                              description: null if the notification was sent successfully
                              type: object
                              required:
                                - errorType
                                - message
                              properties:
                                errorType:
                                  type: string
                                message:
                                  type: string
        default:
          description: Error
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - jobId
              properties:
                jobId:
                  type: string
                resourceId:
                  type: string
                resourceIds:
                  type: array
                  items:
                    type: string
        required: true
  /notifications/notify:
    post:
      security:
        - Authorization: []
      summary: Notify resources
      tags:
        - Notifications
      description: |
        This endpoint ONLY notifies.
      responses:
        '200':
          description: Result
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    required:
                      - jobId
                      - results
                    properties:
                      jobId:
                        type: string
                      results:
                        type: array
                        items:
                          type: object
                          properties:
                            resourceId:
                              type: string
                            protocol:
                              type: string
                            error:
                              description: null if the notification was sent successfully
                              type: object
                              required:
                                - errorType
                                - message
                              properties:
                                errorType:
                                  type: string
                                message:
                                  type: string
        default:
          description: Error
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - jobId
              properties:
                jobId:
                  type: string
                resourceId:
                  type: string
                resourceIds:
                  type: array
                  items:
                    type: string
        required: true
  /notifications/notify_cancel:
    post:
      security:
        - Authorization: []
      summary: Notify resources of job cancellations
      tags:
        - Notifications
      description: >
        This endpoint notifies of cancellations of a job. Does not cause any
        side affects.
      responses:
        '200':
          description: Result
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    required:
                      - jobId
                      - results
                    properties:
                      jobId:
                        type: string
                      results:
                        type: array
                        items:
                          type: object
                          properties:
                            resourceId:
                              type: string
                            protocol:
                              type: string
                            error:
                              description: null if the notification was sent successfully
                              type: object
                              required:
                                - errorType
                                - message
                              properties:
                                errorType:
                                  type: string
                                message:
                                  type: string
        default:
          description: Error
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - jobId
              properties:
                jobId:
                  type: string
        required: true
  /notifications/oneoff:
    post:
      security:
        - Authorization: []
      summary: Send a one off message to a resource
      tags:
        - Notifications
      responses:
        '200':
          description: Message sent
          content:
            application/json:
              schema:
                type: object
                required:
                  - protocol
                properties:
                  protocol:
                    description: protocol the messsage was sent with
                    type: string
                    enum:
                      - push
                      - sms
        '400':
          description: Message too long or invalid request body
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - resourceId
                - message
              properties:
                resourceId:
                  type: string
                message:
                  type: string
                  description: >-
                    Message to send to the resource. Message length is limited
                    to 500 characters
                protocol:
                  type: string
                  description: >-
                    The notification method to use to send the message. If not
                    provided, the resource's default notification method
                  enum:
                    - push
                    - sms
        required: true
  /notifications/sms:
    get:
      security:
        - Authorization: []
      summary: Fetch the latest 250 SMS messages sent by the current tenant
      description: Messages are sorted by when they were created in descending order.
      tags:
        - Notifications
      parameters:
        - name: cursor
          description: Returns messages sent after the message with this cursor
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Result
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      type: object
                      required:
                        - key
                        - to
                        - status
                        - created
                        - updated
                        - cursor
                      properties:
                        key:
                          type: object
                          required:
                            - vendor
                            - id
                          properties:
                            vendor:
                              type: string
                            id:
                              type: string
                        to:
                          type: string
                          description: E164 phone number that the SMS was sent to
                        status:
                          type: string
                          description: >-
                            Should be one of the following strings: accepted,
                            delivered, failed, queued, sending, sent,
                            undelivered
                        resourceId:
                          type: string
                          nullable: true
                        jobId:
                          type: string
                          nullable: true
                        created:
                          type: string
                          format: date-time
                          description: The time when the SMS was created
                        updated:
                          type: string
                          format: date-time
                          description: The time when the SMS last had its status updated
                        cursor:
                          type: string
                          description: >-
                            A string to pass as the cursor GET parameter to
                            fetch records that occur after this one
        '403':
          description: If the user is not an administrator
        default:
          description: Error
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
    post:
      security:
        - Authorization: []
      summary: Send SMS to any phone number
      description: >-
        Send an SMS message to any phone number, such as a customer.


        For example 'Thanks for confirming your booking'. Replies from the
        recipient will not be tracked back to a job.
      tags:
        - Notifications
      responses:
        '200':
          description: Result
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: true
        default:
          description: 'Phone number or country code was invalid, or message was too long'
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - phoneNumber
                - countryCode
                - message
              properties:
                phoneNumber:
                  type: string
                  description: The phone number of the recipient.
                countryCode:
                  type: string
                  description: The two character country code of the phone number.
                message:
                  type: string
                  description: >-
                    Message to send to the resource. Message length is limited
                    to 500 characters.
                expectsReply:
                  type: boolean
                  default: false
                  description: >-
                    Set to true if a reply is expected. The reply should be
                    handled by an external process such as a webhook. If this
                    flag is false or absent and the recipient sends a reply to
                    the message, an error message will be sent back to them.
        required: true
  /notifications/sms/confirmation_request:
    post:
      security:
        - Authorization: []
      summary: Request confirmation by SMS
      description: >-
        Send an SMS message to any phone number, such as a customer, to request
        confirmation that a job should proceed. This will set the job's
        confirmation status to `Pending`. Upon receiving a Y/YES or N/NO SMS
        message from the recipient, the job's confirmation status will be
        updated accordingly.


        Note that while a job's confirmation status is `Pending`, SMS
        confirmation requests cannot be sent to the recipient for that job.


        Note that a job's confirmation status is for use by custom workflows. It
        does not affect the normal workflow of the job.
      tags:
        - Notifications
      responses:
        '200':
          description: Result
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: true
        default:
          description: >-
            Phone number or country code was invalid, message was too long,
            phone number already has a request outstanding, job has been
            completed or cancelled.
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - phoneNumber
                - countryCode
                - jobId
                - message
              properties:
                phoneNumber:
                  type: string
                  description: The phone number of the recipient
                countryCode:
                  type: string
                  description: The two character country code of the phone number
                jobId:
                  type: string
                  description: The UID of the job that this message relates to
                message:
                  type: string
                  description: >-
                    Message to send to the resource. Message length is limited
                    to 500 characters
        required: true
  '/notifications/confirm/job_id/{job_id}/resource_id/{resource_id}':
    post:
      security:
        - Authorization: []
      summary: Confirm allocations
      tags:
        - Notifications
      description: >-
        Confirm an allocation given a job/resource. Stores the time the response
        was sent as either the given timestamp or the current time if a time is
        not provided.
      parameters:
        - name: job_id
          in: path
          required: true
          schema:
            type: string
        - name: resource_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                timestamp:
                  type: string
                  format: date-time
        required: true
      responses:
        '200':
          description: Result
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: true
        default:
          description: Error
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
    put:
      security:
        - Authorization: []
      deprecated: true
      summary: Confirm allocations
      tags:
        - Notifications
      description: Confirm an allocation given a job/resource
      parameters:
        - name: job_id
          in: path
          required: true
          schema:
            type: string
        - name: resource_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Result
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: true
        default:
          description: Error
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
  '/notifications/confirm/allocation_id/{allocation_id}':
    post:
      security:
        - Authorization: []
      summary: Confirm allocations by allocation ID
      tags:
        - Notifications
      description: >-
        Confirm an allocation given an allocation ID. Stores the time the
        response was sent as either the given timestamp or the current time if a
        time is not provided.
      parameters:
        - name: allocation_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                timestamp:
                  type: string
                  format: date-time
        required: true
      responses:
        '200':
          description: Result
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: true
        default:
          description: Error
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
    put:
      security:
        - Authorization: []
      deprecated: true
      summary: Confirm allocations by allocation ID
      tags:
        - Notifications
      description: Confirm an allocation given an allocation
      parameters:
        - name: allocation_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Result
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: true
        default:
          description: Error
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
  '/notifications/decline/job_id/{job_id}/resource_id/{resource_id}':
    post:
      security:
        - Authorization: []
      summary: Decline allocations by job or resource ID
      tags:
        - Notifications
      description: >-
        Decline an allocation given a job/resource. Stores the time the response
        was sent as either the given timestamp or the current time if a time is
        not provided.
      parameters:
        - name: job_id
          in: path
          required: true
          schema:
            type: string
        - name: resource_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                timestamp:
                  type: string
                  format: date-time
        required: true
      responses:
        '200':
          description: Result
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: true
        default:
          description: Error
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
    put:
      security:
        - Authorization: []
      deprecated: true
      summary: Decline allocations by job or resource ID
      tags:
        - Notifications
      description: Decline a allocation given a job/resource
      parameters:
        - name: job_id
          in: path
          required: true
          schema:
            type: string
        - name: resource_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Result
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: true
        default:
          description: Error
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
  '/notifications/decline/allocation_id/{allocation_id}':
    post:
      security:
        - Authorization: []
      summary: Decline an allocation
      tags:
        - Notifications
      description: >-
        Decline an allocation. Stores the time the response was sent as either
        the given timestamp or the current time if a time is not provided.
      parameters:
        - name: allocation_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                timestamp:
                  type: string
                  format: date-time
        required: true
      responses:
        '200':
          description: Result
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: true
        default:
          description: Error
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
    put:
      security:
        - Authorization: []
      deprecated: true
      summary: Decline an allocation
      tags:
        - Notifications
      description: Decline an allocation given an allocation
      parameters:
        - name: allocation_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Result
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: true
        default:
          description: Error
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
  '/notifications/offer/job/resource/{resource_job_offer_id}/accept':
    post:
      security:
        - Authorization: []
      summary: Accept a job offer
      tags:
        - Notifications
      description: >-
        The offered job will be automatically allocated if the
        'autoAllocateJobOffers' org preference is enabled. Schedulers and Admins
        can accept any offer. Resources can only accept an offer that is
        assigned to them. Stores the time the response was sent as either the
        given timestamp or the current time if a time is not provided.
      parameters:
        - name: resource_job_offer_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                timestamp:
                  type: string
                  format: date-time
        required: true
      responses:
        '200':
          description: Result
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: true
                  status:
                    type: string
                    enum:
                      - Accepted
                      - Declined
                      - Allocated
        default:
          description: 'Error. '
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
  '/notifications/offer/job/resource/{resource_job_offer_id}/decline':
    post:
      security:
        - Authorization: []
      summary: Decline a job offer
      tags:
        - Notifications
      description: >-
        Closes the offer: after an offer is declined, it cannot be subsequently
        accepted. Schedulers and Admins can decline any offer. Resources can
        only decline an offer that is assigned to them. Stores the time the
        response was sent as either the given timestamp or the current time if a
        time is not provided.
      parameters:
        - name: resource_job_offer_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                timestamp:
                  type: string
                  format: date-time
        required: true
      responses:
        '200':
          description: Result
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: true
                  status:
                    type: string
                    enum:
                      - Accepted
                      - Declined
                      - Allocated
        default:
          description: Error
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
  '/notifications/offer/job/{job_offer_id}/notify':
    post:
      security:
        - Authorization: []
      summary: Notify associated resources about a job offer
      tags:
        - Notifications
      description: >-
        Send a notification to some or all resources who have an open offer on
        the given job. Resources who have declined will not be notified. Each
        resource's preferred notification method (push or SMS) will be used, if
        set. If job offer notifications are disabled then no notifications will
        be sent and an appropriate message will be returned in the response.
      parameters:
        - name: job_offer_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: >-
          List of Resource Job Offer IDs to notify. This is optional: if not
          present, all resources will be notified.
        content:
          application/json:
            schema:
              type: object
              properties:
                resourceOfferIds:
                  type: array
                  items:
                    type: string
        required: false
      responses:
        '200':
          description: The results of notifying each resource
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      type: object
                      properties:
                        resourceId:
                          type: string
                        protocol:
                          type: string
                        error:
                          description: null if the notification was sent successfully
                          type: object
                          required:
                            - errorType
                            - message
                          properties:
                            errorType:
                              type: string
                            message:
                              type: string
        default:
          description: Error
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
  '/notifications/offer/shift/resource/{resource_shift_offer_id}/accept':
    post:
      security:
        - Authorization: []
      summary: Accept a shift offer
      tags:
        - Notifications
      description: >-
        The offered shift will be automatically allocated if the
        'autoAllocateShiftOffers' org preference is enabled. Schedulers and
        Admins can accept any offer. Resources can only accept an offer that is
        assigned to them. Stores the time the response was sent as either the
        given timestamp or the current time if a time is not provided.
      parameters:
        - name: resource_shift_offer_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                timestamp:
                  type: string
                  format: date-time
        required: true
      responses:
        '200':
          description: Result
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: true
                  status:
                    type: string
                    enum:
                      - Accepted
                      - Declined
                      - Allocated
        default:
          description: 'Error. '
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
  '/notifications/offer/shift/resource/{resource_shift_offer_id}/decline':
    post:
      security:
        - Authorization: []
      summary: Decline a shift offer
      tags:
        - Notifications
      description: >-
        Closes the offer: after an offer is declined, it cannot be subsequently
        accepted. Schedulers and Admins can decline any offer. Resources can
        only decline an offer that is assigned to them. Stores the time the
        response was sent as either the given timestamp or the current time if a
        time is not provided.
      parameters:
        - name: resource_shift_offer_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                timestamp:
                  type: string
                  format: date-time
        required: true
      responses:
        '200':
          description: Result
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: true
                  status:
                    type: string
                    enum:
                      - Accepted
                      - Declined
                      - Allocated
        default:
          description: Error
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
  '/notifications/offer/shift/{shift_offer_id}/notify':
    post:
      security:
        - Authorization: []
      summary: Notify associated resources about a shift offer
      tags:
        - Notifications
      description: >-
        Send a notification to some or all resources who have an open offer on
        the given shift. Resources who have declined will not be notified. Each
        resource's preferred notification method (push or SMS) will be used, if
        set.
      parameters:
        - name: shift_offer_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: >-
          List of Resource Shift Offer IDs to notify. This is optional: if not
          present, all resources will be notified.
        content:
          application/json:
            schema:
              type: object
              properties:
                resourceOfferIds:
                  type: array
                  items:
                    type: string
        required: false
      responses:
        '200':
          description: The results of notifying each resource
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      type: object
                      properties:
                        resourceId:
                          type: string
                        protocol:
                          type: string
                        error:
                          description: null if the notification was sent successfully
                          type: object
                          required:
                            - errorType
                            - message
                          properties:
                            errorType:
                              type: string
                            message:
                              type: string
        default:
          description: Error
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
  /notifications/device_id:
    post:
      security:
        - Authorization: []
      summary: Register a device ID
      tags:
        - Notifications
      description: Register a device ID.
      responses:
        '200':
          description: Result
        default:
          description: Error
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - deviceId
                - platform
              properties:
                deviceId:
                  type: string
                platform:
                  type: string
                  enum:
                    - Skedulo-X-iOS
                    - Skedulo-X-Android
                features:
                  type: object
                  description: >-
                    This field is optional for backwards compatibility reasons
                    (all features defaults to false if not provided)
                  properties:
                    chat:
                      type: boolean
                      description: >-
                        Whether this device can has team chat functionality
                        (e.g. can understand push notifications for chat)
        required: true
    delete:
      security:
        - Authorization: []
      summary: Delete device ID
      tags:
        - Notifications
      description: Delete device ID.
      responses:
        '200':
          description: Result
        '404':
          description: Device info for this user cannot be found
        default:
          description: Error
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
  /notifications/templates:
    get:
      deprecated: true
      security:
        - Authorization: []
      summary: Get all notification templates
      tags:
        - Notifications
      responses:
        '200':
          description: Result
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      type: object
                      required:
                        - msgType
                        - template
                        - createDate
                        - modifyDate
                      properties:
                        msgType:
                          type: string
                          enum:
                            - sms
                            - push
                        template:
                          type: string
                          description: >-
                            The template string used to generate the
                            notification template
                        createDate:
                          type: string
                          format: dateTime
                          description: The date / time the template was created
                        modifyDate:
                          type: string
                          format: dateTime
                          description: The date / time the template was last modified
        default:
          description: Error
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
  '/notifications/templates/{msgType}':
    parameters:
      - name: msgType
        in: path
        required: true
        schema:
          type: string
          enum:
            - sms
            - push
    get:
      deprecated: true
      security:
        - Authorization: []
      summary: Get the notification template for a message protocol
      tags:
        - Notifications
      responses:
        '200':
          description: Notification template found
          content:
            application/json:
              schema:
                type: object
                required:
                  - result
                properties:
                  result:
                    type: object
                    required:
                      - msgType
                      - template
                      - createDate
                      - modifyDate
                    properties:
                      msgType:
                        type: string
                        enum:
                          - sms
                          - push
                      template:
                        type: string
                        description: >-
                          The template string used to generate the notification
                          template
                      createDate:
                        type: string
                        format: dateTime
                        description: The date / time the template was created
                      modifyDate:
                        type: string
                        format: dateTime
                        description: The date / time the template was last modified
        '404':
          description: Notification template for the given protocol cannot be found
        default:
          description: Error
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
    post:
      deprecated: true
      security:
        - Authorization: []
      summary: Create or update notification template for a protocol
      tags:
        - Notifications
      responses:
        '200':
          description: Result
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    required:
                      - msgType
                      - template
                      - createDate
                      - modifyDate
                    properties:
                      msgType:
                        type: string
                        enum:
                          - sms
                          - push
                      template:
                        type: string
                        description: >-
                          The template string used to generate the notification
                          template
                      createDate:
                        type: string
                        format: dateTime
                        description: The date / time the template was created
                      modifyDate:
                        type: string
                        format: dateTime
                        description: The date / time the template was last modified
        default:
          description: Error
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                template:
                  type: string
                  description: New notification template to use for this protocol
        required: true
    delete:
      deprecated: true
      security:
        - Authorization: []
      summary: Delete notification template
      description: >-
        Delete the notification template associated with a message protocol. Any
        future messages sent through this protocol will use the default
        template.
      tags:
        - Notifications
      responses:
        '200':
          description: Successfully deleted
        default:
          description: Error
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
  /notifications/v2/templates/defaults:
    get:
      security:
        - Authorization: []
      summary: Notification template default values
      description: Fetch the default values for notification templates.
      tags:
        - Notifications
      responses:
        '200':
          description: Result
          content:
            application/json:
              schema:
                type: object
                required:
                  - result
                properties:
                  result:
                    type: array
                    items:
                      type: object
                      required:
                        - job_dispatch
                        - job_reminder
                        - job_cancelled
                        - job_offer
                      properties:
                        job_dispatch:
                          type: object
                          required:
                            - text
                            - parts
                          properties:
                            text:
                              type: string
                            parts:
                              type: array
                              items:
                                type: object
                                discriminator:
                                  propertyName: type
                                required:
                                  - type
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - text
                                      - variable
                                      - function
                        job_reminder:
                          type: object
                          required:
                            - text
                            - parts
                          properties:
                            text:
                              type: string
                            parts:
                              type: array
                              items:
                                type: object
                                discriminator:
                                  propertyName: type
                                required:
                                  - type
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - text
                                      - variable
                                      - function
                        job_cancelled:
                          type: object
                          required:
                            - text
                            - parts
                          properties:
                            text:
                              type: string
                            parts:
                              type: array
                              items:
                                type: object
                                discriminator:
                                  propertyName: type
                                required:
                                  - type
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - text
                                      - variable
                                      - function
                        job_offer:
                          type: object
                          required:
                            - text
                            - parts
                          properties:
                            text:
                              type: string
                            parts:
                              type: array
                              items:
                                type: object
                                discriminator:
                                  propertyName: type
                                required:
                                  - type
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - text
                                      - variable
                                      - function
                      additionalProperties: false
        default:
          description: Error
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
  /notifications/v2/templates:
    get:
      security:
        - Authorization: []
      summary: Get all notification templates
      tags:
        - Notifications
      responses:
        '200':
          description: Result
          content:
            application/json:
              schema:
                type: object
                required:
                  - result
                  - error
                properties:
                  result:
                    type: array
                    items:
                      type: object
                      required:
                        - type
                        - protocol
                        - schema
                        - template
                      properties:
                        type:
                          type: string
                          enum:
                            - job_dispatch
                            - job_reminder
                            - job_cancelled
                            - job_offer
                        protocol:
                          type: string
                          enum:
                            - sms
                            - push
                        schema:
                          type: string
                        template:
                          type: object
                          required:
                            - text
                            - parts
                          properties:
                            text:
                              type: string
                            parts:
                              type: array
                              items:
                                type: object
                                discriminator:
                                  propertyName: type
                                required:
                                  - type
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - text
                                      - variable
                                      - function
                  error:
                    type: array
                    items:
                      type: object
                      required:
                        - type
                        - protocol
                        - template
                        - error
                      properties:
                        type:
                          type: string
                          enum:
                            - job_dispatch
                            - job_reminder
                            - job_cancelled
                            - job_offer
                        protocol:
                          type: string
                          enum:
                            - sms
                            - push
                        template:
                          type: string
                        error:
                          description: A description of the error
                          type: string
        default:
          description: Error
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
  '/notifications/v2/template/{type}/{protocol}':
    parameters:
      - name: type
        in: path
        required: true
        schema:
          type: string
          enum:
            - job_dispatch
            - job_reminder
            - job_cancelled
            - job_offer
      - name: protocol
        in: path
        required: true
        schema:
          type: string
          enum:
            - sms
            - push
    post:
      security:
        - Authorization: []
      summary: Create or update a notification template for a protocol
      tags:
        - Notifications
      operationId: templateV2Upsert
      responses:
        '200':
          description: Successfully created or updated
        '403':
          description: If the user is not an administrator
        default:
          description: Error
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                template:
                  type: string
                  description: >-
                    A notification template to use for this protocol. Accepts
                    Mustache style variables that point at schema fields and a
                    small number of Handlebar handlers.
                  example: >-
                    New {{ Name }}. {{ Start }}. {{first Address "Unknown
                    Address" }}. For {{first Account.Name Contact.FullName
                    "Unknown Customer" }}, {{ Duration }}.
        required: true
    delete:
      security:
        - Authorization: []
      summary: Delete notification template
      description: >-
        Delete the notification template associated with a message protocol. Any
        future messages sent through this protocol will use the default
        template.
      tags:
        - Notifications
      responses:
        '200':
          description: Successfully deleted
        '403':
          description: If the user is not an administrator
        default:
          description: Error
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
  /notifications/logs:
    get:
      security:
        - Authorization: []
      tags:
        - Notifications
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
      summary: Fetch notification logs
      deprecated: true
      description: >-
        Fetch the latest 100 notification log entries for the current resource. 


        This endpoint is deprecated; please use the `notifications` GraphQL
        query instead.
      responses:
        '200':
          description: Result
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      type: object
                      discriminator:
                        propertyName: type
                      required:
                        - timestamp
                        - referenceId
                        - type
                      properties:
                        timestamp:
                          type: string
                          format: date-time
                        referenceId:
                          description: >-
                            The identifier of the object that the notification
                            was for
                          type: string
                        type:
                          type: string
                          enum:
                            - job
                            - shift
        default:
          description: Error
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
  /resource_tracking/location/latest:
    get:
      security:
        - Authorization: []
      operationId: locationLatest
      summary: Latest locations
      description: >
        The latest locations endpoint returns information about the
        **resource's** latest location. It is a map from resourceId to latest
        location.
      parameters:
        - name: resource_ids
          in: query
          description: Comma separated resourceIds
          required: true
          schema:
            type: string
            format: string
      responses:
        '200':
          description: A map from resourceId to Latest Location
          content:
            application/json:
              schema:
                type: object
                required:
                  - result
                properties:
                  result:
                    type: object
                    additionalProperties:
                      type: object
                      required:
                        - time
                        - lat
                        - lng
                      properties:
                        time:
                          type: string
                          format: date-time
                          description: >-
                            Time the location was recorded. This must be in ISO
                            date format.
                        lat:
                          type: number
                          format: double
                          description: >
                            The latitude (degrees).  This should be in decimal
                            format, ie. "DDD.DDDD" not degrees and minutes.
                        lng:
                          type: number
                          format: double
                          description: >
                            The longitude (degrees). This should be in decimal
                            format, ie. "DDD.DDDD" not degrees and minutes.
                        altitude:
                          type: number
                          format: float
                          description: The altitude (m)
                        heading:
                          type: number
                          format: float
                          minimum: 0
                          maximum: 360
                          description: >
                            The current heading/bearing of the path track
                            (degrees).  Where both bearing and orientation are
                            available, the bearing should be used.  This
                            distinguishes the current orientation of the device
                            which  may be determined by compass for example from
                            the heading of the track taken as the user moves.
                        speed:
                          type: number
                          format: float
                          minimum: 0
                          description: The current speed (m/s).
                        accuracy:
                          type: number
                          format: float
                          minimum: 0
                          description: |
                            Horizontal position accuracy (m).
                        altAccuracy:
                          type: number
                          format: float
                          minimum: 0
                          description: |
                            Vertical position accuracy (m).
            result:
              examples:
                response:
                  value:
                    a0L6F000018s95jUAA:
                      time: '2017-02-08T05:20:45.550Z'
                      lat: 51.503364
                      lng: -0.127625
                      accuracy: 2.5
        '400':
          description: Bad request. eg. resourceId cannot be empty
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
      tags:
        - Resource tracking
  /resource_tracking/location/history:
    get:
      security:
        - Authorization: []
      operationId: locationHistory
      summary: Location history
      description: >
        The Location history end point allows you to retrieve the location
        history for a resource.

        The default limit is 100 results.
      parameters:
        - name: resource_id
          in: query
          description: Identifier of a resource
          required: true
          schema:
            type: string
        - name: start
          in: query
          description: Start time
          required: true
          schema:
            type: string
            format: date-time
        - name: end
          in: query
          description: End Time
          required: true
          schema:
            type: string
            format: date-time
        - name: accuracy
          in: query
          description: >-
            All points returned will have an accuracy of at least the number
            given. If this parameter is not provided the default value is 100.
            To return all points use an empty string.
          required: false
          schema:
            type: number
            format: double
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Paged array of locations
          content:
            application/json:
              schema:
                type: object
                required:
                  - paging
                  - result
                properties:
                  paging:
                    type: object
                    required:
                      - total
                      - offset
                      - limit
                    properties:
                      total:
                        type: number
                        format: int64
                      offset:
                        type: number
                        format: int64
                      limit:
                        type: number
                        format: int64
                  result:
                    type: array
                    items:
                      type: object
                      required:
                        - time
                        - lat
                        - lng
                      properties:
                        time:
                          type: string
                          format: date-time
                          description: >-
                            Time the location was recorded. This must be in ISO
                            date format.
                        lat:
                          type: number
                          format: double
                          description: >
                            The latitude (degrees).  This should be in decimal
                            format, ie. "DDD.DDDD" not degrees and minutes.
                        lng:
                          type: number
                          format: double
                          description: >
                            The longitude (degrees). This should be in decimal
                            format, ie. "DDD.DDDD" not degrees and minutes.
                        altitude:
                          type: number
                          format: float
                          description: The altitude (m)
                        heading:
                          type: number
                          format: float
                          minimum: 0
                          maximum: 360
                          description: >
                            The current heading/bearing of the path track
                            (degrees).  Where both bearing and orientation are
                            available, the bearing should be used.  This
                            distinguishes the current orientation of the device
                            which  may be determined by compass for example from
                            the heading of the track taken as the user moves.
                        speed:
                          type: number
                          format: float
                          minimum: 0
                          description: The current speed (m/s).
                        accuracy:
                          type: number
                          format: float
                          minimum: 0
                          description: |
                            Horizontal position accuracy (m).
                        altAccuracy:
                          type: number
                          format: float
                          minimum: 0
                          description: |
                            Vertical position accuracy (m).
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
      tags:
        - Resource tracking
  /resource_tracking/location/update:
    post:
      security:
        - Authorization: []
      operationId: locationUpdate
      summary: Location Update
      description: >
        The location update endpoint allows one or more position updates to be
        provided indicating a resource's location.


        The resource is determined by the Java Web Token provided. It is not
        possible for users other than the logged in user to update a resources
        position.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                required:
                  - time
                  - lat
                  - lng
                properties:
                  time:
                    type: string
                    format: date-time
                    description: >-
                      Time the location was recorded. This must be in ISO date
                      format.
                  lat:
                    type: number
                    format: double
                    description: >
                      The latitude (degrees).  This should be in decimal format,
                      ie. "DDD.DDDD" not degrees and minutes.
                  lng:
                    type: number
                    format: double
                    description: >
                      The longitude (degrees). This should be in decimal format,
                      ie. "DDD.DDDD" not degrees and minutes.
                  altitude:
                    type: number
                    format: float
                    description: The altitude (m)
                  heading:
                    type: number
                    format: float
                    minimum: 0
                    maximum: 360
                    description: >
                      The current heading/bearing of the path track (degrees). 
                      Where both bearing and orientation are available, the
                      bearing should be used.  This distinguishes the current
                      orientation of the device which  may be determined by
                      compass for example from the heading of the track taken as
                      the user moves.
                  speed:
                    type: number
                    format: float
                    minimum: 0
                    description: The current speed (m/s).
                  accuracy:
                    type: number
                    format: float
                    minimum: 0
                    description: |
                      Horizontal position accuracy (m).
                  altAccuracy:
                    type: number
                    format: float
                    minimum: 0
                    description: |
                      Vertical position accuracy (m).
        required: true
      responses:
        '200':
          description: Location update added
        default:
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
      tags:
        - Resource tracking
  /resource_tracking/location/resources_within_distance:
    get:
      security:
        - Authorization: []
      summary: Locate resources with a set distance
      description: Locate all resources within a set distance of a specified location.
      operationId: locationResourcesWithinDistance
      parameters:
        - name: lat
          in: query
          required: true
          description: >
            The latitude (degrees).  This should be in decimal format, ie.
            "DDD.DDDD" not degrees and minutes.
          schema:
            type: number
            format: double
        - name: lng
          in: query
          required: true
          description: >
            The longitude of the position (degrees).  This should be in decimal
            format, ie. "DDD.DDDD" not degrees and minutes.
          schema:
            type: number
            format: double
        - name: distance
          in: query
          required: true
          description: >-
            The distance (metres) to query for resources.  Note that the
            accuracy of the resources location is not considered when making
            this query.
          schema:
            type: number
            format: double
        - name: start
          in: query
          description: Only consider points after this time.
          required: false
          schema:
            type: string
            format: date-time
        - name: end
          in: query
          description: Only consider points before this time.
          required: false
          schema:
            type: string
            format: date-time
        - name: accuracy
          in: query
          description: >-
            Ignores any points that have an accuracy greater than the number
            given. If this parameter is not provided the default value is 100.
            To return all points use an empty string.
          required: false
          schema:
            type: number
            format: double
      responses:
        '200':
          description: >-
            Resources and their latest position that was within distance of the
            location.
          content:
            application/json:
              schema:
                type: object
                required:
                  - result
                properties:
                  result:
                    type: object
                    description: Map resource ids to their distance from a location
                    additionalProperties:
                      type: object
                      description: Position and Distance from a location
                      required:
                        - time
                        - lat
                        - lng
                        - distance
                      properties:
                        time:
                          type: string
                          format: date-time
                          description: Time the last position was received
                        lat:
                          type: number
                          format: double
                          description: Latitude of the position
                        lng:
                          type: number
                          format: double
                          description: Longitude of the position
                        distance:
                          type: number
                          format: double
                          description: Distance from the requested location (in meters)
                        accuracy:
                          type: number
                          format: double
                          description: Accuracy of the position
        default:
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
      tags:
        - Resource tracking
  /resource_tracking/travel/routes:
    get:
      security:
        - Authorization: []
      operationId: travelRoutes
      summary: Retrieve historical routes for one or more resources.
      description: >
        Given a comma-separated list of resource Ids and a start and end date,
        return the route taken by that resource between the start and end time.


        The maximum amount of time supported is 24 hours.


        The supported formats are

        * _polyline_ Uses the Google Maps Polyline encoding (default)

        * _wkt_ - Well Known Text Strings.  Either a LINESTRING or a POINT is
        returned

        * _geojson_ - GeoJSON format. Either a linestring or a point is returned
      parameters:
        - name: resource_ids
          in: query
          description: Comma separated resource Id values
          required: true
          schema:
            type: string
        - name: start
          in: query
          description: Start time
          required: true
          schema:
            type: string
            format: date-time
        - name: end
          in: query
          description: End Time
          required: true
          schema:
            type: string
            format: date-time
        - name: accuracy
          in: query
          description: >-
            All points returned will have an accuracy of at least the number
            given. If this parameter is not provided the default value is 100.
            To return all points use an empty string.
          required: false
          schema:
            type: number
            format: double
        - name: format
          in: query
          description: Output Format.
          schema:
            type: string
            enum:
              - polyline
              - wkt
              - geojson
      responses:
        '200':
          description: Map from resourceId to route in the requested format
          content:
            application/json:
              schema:
                type: object
                required:
                  - result
                properties:
                  result:
                    type: object
                    description: Map resource ids to routes with start and end times
                    required:
                      - result
                    properties:
                      result:
                        type: object
                        description: Map resource ids to route information
                        additionalProperties:
                          type: object
                          description: >-
                            Route Information for a given resource.  One of
                            polyline, wkt, or geoJson should be present
                          required:
                            - start
                            - end
                          properties:
                            start:
                              type: string
                              format: date-time
                              description: Time of the first position in the result
                            end:
                              type: string
                              format: date-time
                              description: Time of the last position in the result
                            polyline:
                              type: string
                              format: Google Maps Polyline
                              description: The route encoded as a Google maps polylne
                            wkt:
                              type: string
                              format: Well Known Text
                              description: >-
                                The route encoded in Well Known Text (wkt)
                                format. Either POINT or LINESTRING will be
                                returned
                            geoJson:
                              type: object
                              format: GeoJson
                              description: GeoJSON encoded point or linestring
            polyline:
              examples:
                response:
                  value:
                    result:
                      a0L6F000018s95jUAA:
                        start: '2017-02-13T01:41:01.629Z'
                        end: '2017-02-14T09:46:35.296Z'
                        polyline: '_gjyHr|W[gBo|RgT'
            WKT:
              examples:
                response:
                  value:
                    result:
                      a0L6F000018s95jUAA:
                        start: '2017-02-13T01:41:01.629Z'
                        end: '2017-02-14T09:46:35.296Z'
                        wkt: >-
                          LINESTRING(51.503364 -0.127625,51.5035 -0.1271,51.6055
                          -0.1237)
            WKT (With a Point):
              examples:
                response:
                  value:
                    result:
                      a0L6F000018s95jUAA:
                        start: '2017-02-13T01:41:01.629Z'
                        end: '2017-02-13T01:41:01.629Z'
                        wkt: POINT(51.503364 -0.127625)
            GeoJSON:
              examples:
                response:
                  value:
                    result:
                      a0L6F000018s95jUAA:
                        start: '2017-02-13T01:41:01.629Z'
                        end: '2017-02-14T09:46:35.296Z'
                        geoJson:
                          type: LineString
                          coordinates:
                            - - 51.503364
                              - -0.127625
                            - - 51.5035
                              - -0.1271
                            - - 51.6055
                              - -0.1237
        default:
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
      tags:
        - Resource tracking
  /planr/optimize/suggest:
    post:
      operationId: suggest
      summary: Suggest times for a single job
      description: >
        Query the `/optimize/suggest` endpoint to find the best time to schedule
        a single job given a set of resources within a specific time range.


        For example, if a job must be done on Thursday before noon you can
        specify the time window of 8AM to 12PM on Thursday and the resources
        that are available to find the best time to schedule the job that
        morning.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                suggestForNode:
                  type: string
                  description: ID of the job that you want the suggestion for.
                resourceIds:
                  type: array
                  items:
                    type: string
                scheduleStart:
                  type: string
                  format: date-time
                  description: >-
                    Can be either ISO8601 date time string or Unix timestamp
                    number ( in milliseconds ). Always returned in ISO8601
                    format.
                scheduleEnd:
                  type: string
                  format: date-time
                  description: >-
                    Can be either ISO8601 date time string or Unix timestamp
                    number ( in milliseconds ). Always returned in ISO8601
                    format.
                schedulingOptions:
                  type: object
                  properties:
                    balanceWorkload:
                      type: boolean
                      default: false
                      description: >-
                        Equalize total allocated duration including travel time
                        for each resource.
                    minimizeResources:
                      type: boolean
                      default: false
                      description: >-
                        Attempt to allocate to the fewest number of resources in
                        a scheduling window.
                    jobTimeAsTimeConstraint:
                      type: boolean
                      default: true
                      description: >-
                        When a job has a time set, consider it to be a time
                        constraint and never re-schedule to another time slot.
                    preferJobTimeOverTimeConstraint:
                      type: boolean
                      default: true
                      description: >-
                        When a job with a JobTimeConstraint also has a time set,
                        consider the job time as the authoritative constraint
                        and ignore the JobTimeConstraint.
                    respectSchedule:
                      type: boolean
                      default: true
                      description: >-
                        For a job that is allocated and in "Pending Dispatch"
                        status, do not move the job to a different time.
                    ignoreTravelTimes:
                      type: boolean
                      default: false
                      description: Ignore all travel times between resources and jobs.
                    ignoreTravelTimeFirstJob:
                      type: boolean
                      default: false
                      description: >-
                        Ignore travel time from a resource' home location to the
                        first job.
                    ignoreTravelTimeLastJob:
                      type: boolean
                      default: false
                      description: >-
                        Ignore travel time to the resource' home location from
                        the last job.
                    assumeResourceCanTravelBeforeStart:
                      type: boolean
                      default: false
                      description: >-
                        Ignore travel time to first job when deriving its
                        arrival time however include the travel time when
                        considering overall travel time reduction.
                    assumeResourceCanTravelAfterEnd:
                      type: boolean
                      default: false
                      description: >-
                        Assume that the resource can travel after their end time
                        to get to their end location however include the travel
                        time when considering overall travel time reduction.
                    padding:
                      type: integer
                      default: 0
                      description: A fixed interval of time between consecutive jobs.
                    snapUnit:
                      type: integer
                      default: 0
                      minimum: 0
                      description: >-
                        Divide the given time frame into parts described by this
                        value and allocate all jobs to the nearest part.
                    maxTravelTimeInMinutes:
                      type: integer
                      default: 0
                      minimum: 0
                      description: >-
                        When greater than zero do not schedule nodes whose
                        travel time would exceed this value in minutes.
                accountResourceScores:
                  type: array
                  description: An array of accounts and resources to blacklist
                  items:
                    type: object
                    properties:
                      resourceId:
                        type: string
                        description: >-
                          The resource id black listing or white listing jobs
                          associated with the account id
                      accountId:
                        type: string
                        description: >-
                          The account id associated with jobs black listing or
                          white listing a resource
                      whitelist:
                        type: boolean
                        description: >-
                          Is true if the resource and jobs assoicated with the
                          account id are white listed
                      blacklist:
                        type: boolean
                        description: >-
                          Is true if the resource and jobs associated with the
                          account id are black listed
                    required:
                      - resourceId
                      - accountId
                      - whitelist
                      - blacklist
              required:
                - suggestForNode
                - resourceIds
                - scheduleStart
                - scheduleEnd
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                example: |
                  {
                    "result": {
                      "routes": {
                        "0005ea18-61c1-49d9-9b50-d16a31a21c20": {
                          "resourceId": "0005ea18-61c1-49d9-9b50-d16a31a21c20",
                          "route": {
                            "jobId": "0014cac9-4ba2-4944-b7ca-b4d2c40b1403",
                            "jobName": "JOB-0225",
                            "start": "2018-09-03T23:21:00.000Z",
                            "duration": 40,
                            "travelTime": 21,
                            "type": "job"
                          },
                          "gapList": [
                            {
                              "fromPrev": {
                                "travelTime": 21
                              },
                              "interval": {
                                "start": "2018-09-03T23:21:00.000Z",
                                "end": "2018-09-04T00:01:00.000Z"
                              },
                              "toNext": {
                                "travelTime": 0
                              }
                            }
                          ],
                          "isAllocated": false
                        }
                      }
                    }
                  }
                properties:
                  result:
                    type: object
                    properties:
                      routes:
                        type: object
                        additionalProperties:
                          type: object
                          properties:
                            resourceId:
                              type: string
                              description: >-
                                Id of the resource this suggestion is related
                                to.
                            isAllocated:
                              type: boolean
                              description: >-
                                Flag that signifies whether this resource has
                                already been allocated to the job.
                            route:
                              type: object
                              properties:
                                duration:
                                  type: integer
                                  description: Duration ( in minutes ) of the current job.
                                jobId:
                                  type: string
                                  description: Id of the current job.
                                jobName:
                                  type: string
                                  description: Name of the current job ( Job.Name ).
                                start:
                                  type: string
                                  format: date-time
                                  description: >-
                                    Suggested start time of the job as an
                                    ISO8601 Date Time string.
                                travelTime:
                                  type: integer
                                  description: >-
                                    Travel time ( in minutes ) from the previous
                                    location ( resource home or previous job )
                                    to the current job.
                                type:
                                  type: string
      tags:
        - Planr
      security:
        - BearerAuth: []
  /planr/optimize/resource_suggestions:
    post:
      operationId: /optimize/resource_suggestions
      summary: Suggest resources for a given job
      description: >
        Find the best resources within a given time range, for a given job and
        resource availabilities.


        This query provides the amount of time each resource has available
        during the time period to complete the task.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                jobId:
                  type: string
                  description: UID of the job that you want the suggestion for.
                resources:
                  description: A map of availability windows for each resource.
                  additionalProperties:
                    type: array
                    items:
                      type: object
                      properties:
                        start:
                          type: string
                          format: date-time
                          description: >-
                            Can be either ISO8601 date time string or Unix
                            timestamp number ( in milliseconds ). Always
                            returned in ISO8601 format.
                        end:
                          type: string
                          format: date-time
                          description: >-
                            Can be either ISO8601 date time string or Unix
                            timestamp number ( in milliseconds ). Always
                            returned in ISO8601 format.
                scheduleStart:
                  type: string
                  format: date-time
                  description: >-
                    Can be either ISO8601 date time string or Unix timestamp
                    number ( in milliseconds ). Always returned in ISO8601
                    format.
                scheduleEnd:
                  type: string
                  format: date-time
                  description: >-
                    Can be either ISO8601 date time string or Unix timestamp
                    number ( in milliseconds ). Always returned in ISO8601
                    format.
                schedulingOptions:
                  type: object
                  properties:
                    balanceWorkload:
                      type: boolean
                      default: false
                      description: >-
                        Equalize total allocated duration including travel time
                        for each resource.
                    minimizeResources:
                      type: boolean
                      default: false
                      description: >-
                        Attempt to allocate to the fewest number of resources in
                        a scheduling window.
                    jobTimeAsTimeConstraint:
                      type: boolean
                      default: true
                      description: >-
                        When a job has a time set, consider it to be a time
                        constraint and never re-schedule to another time slot.
                    preferJobTimeOverTimeConstraint:
                      type: boolean
                      default: true
                      description: >-
                        When a job with a JobTimeConstraint also has a time set,
                        consider the job time as the authoritative constraint
                        and ignore the JobTimeConstraint.
                    respectSchedule:
                      type: boolean
                      default: true
                      description: >-
                        For a job that is allocated and in "Pending Dispatch"
                        status, do not move the job to a different time.
                    ignoreTravelTimes:
                      type: boolean
                      default: false
                      description: Ignore all travel times between resources and jobs.
                    ignoreTravelTimeFirstJob:
                      type: boolean
                      default: false
                      description: >-
                        Ignore travel time from a resource' home location to the
                        first job.
                    ignoreTravelTimeLastJob:
                      type: boolean
                      default: false
                      description: >-
                        Ignore travel time to the resource' home location from
                        the last job.
                    assumeResourceCanTravelBeforeStart:
                      type: boolean
                      default: false
                      description: >-
                        Ignore travel time to first job when deriving its
                        arrival time however include the travel time when
                        considering overall travel time reduction.
                    assumeResourceCanTravelAfterEnd:
                      type: boolean
                      default: false
                      description: >-
                        Assume that the resource can travel after their end time
                        to get to their end location however include the travel
                        time when considering overall travel time reduction.
                    padding:
                      type: integer
                      default: 0
                      description: A fixed interval of time between consecutive jobs.
                    snapUnit:
                      type: integer
                      default: 0
                      minimum: 0
                      description: >-
                        Divide the given time frame into parts described by this
                        value and allocate all jobs to the nearest part.
                    maxTravelTimeInMinutes:
                      type: integer
                      default: 0
                      minimum: 0
                      description: >-
                        When greater than zero do not schedule nodes whose
                        travel time would exceed this value in minutes.
                accountResourceScores:
                  type: array
                  description: An array of accounts and resources to blacklist
                  items:
                    type: object
                    properties:
                      resourceId:
                        type: string
                        description: >-
                          The resource id black listing or white listing jobs
                          associated with the account id
                      accountId:
                        type: string
                        description: >-
                          The account id associated with jobs black listing or
                          white listing a resource
                      whitelist:
                        type: boolean
                        description: >-
                          Is true if the resource and jobs assoicated with the
                          account id are white listed
                      blacklist:
                        type: boolean
                        description: >-
                          Is true if the resource and jobs associated with the
                          account id are black listed
                    required:
                      - resourceId
                      - accountId
                      - whitelist
                      - blacklist
              required:
                - jobId
                - resources
                - scheduleStart
                - scheduleEnd
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                example: |
                  {
                    "result": {
                      "0005ea18-61c1-49d9-9b50-d16a31a21c20": {
                        "resourceId": "0005ea18-61c1-49d9-9b50-d16a31a21c20",
                        "jobId": "0014cac9-4ba2-4944-b7ca-b4d2c40b1403",
                        "start": "2018-09-03T23:21:00.000Z",
                        "duration": 30,
                        "travelTime": 17,
                        "currentCapacityInSeconds": 86400
                        "newCapacityInSeconds": 83580
                      }
                    }
                  }
                properties:
                  result:
                    type: object
                    additionalProperties:
                      type: object
                      properties:
                        resourceId:
                          type: string
                          description: UID of the resource.
                        jobId:
                          type: string
                          description: UID of the current job.
                        start:
                          type: string
                          format: date-time
                          description: >-
                            Suggested start time of the job as an ISO8601 Date
                            Time string.
                        duration:
                          type: integer
                          description: Duration ( in minutes ) of the current job.
                        travelTime:
                          type: integer
                          description: >-
                            Travel time ( in minutes ) from the previous
                            location ( resource home or previous job ) to the
                            current job.
                        currentCapacityInSeconds:
                          type: integer
                          description: >-
                            Available capacity for the resource based on
                            currently scheduled jobs.
                        newCapacityInSeconds:
                          type: integer
                          description: >-
                            Updated capacity for the resource once this job has
                            been scheduled to the resource.
      tags:
        - Planr
      security:
        - BearerAuth: []
  /planr/grid/schedule:
    post:
      operationId: /grid/schedule
      summary: Resource availability for timeframe
      description: >
        Splits a given time window into intervals of grid size; then aggregates
        resource availability into it, against the given job. Availability is
        determined by working hours, holidays, existing jobs and activities.
        Resource must be available for the entire duration of the slot to be
        returned in the list.


        Use the `/grid/schedule` endpoint to find all of the available time
        slots for a job to be completed during a specified time window. For
        example, if a job must be completed by the close of business the
        following day, you can query the `/grid/schedule` endpoint to obtain an
        aggregate of resource availability between now and tomorrow afternoon at
        5PM.


        The query splits the time window into intervals to determine which
        resources are available at different times during the time window for
        the job.


        * Resource availability is determined by working hours, holidays,
        existing jobs, shifts, and activities.

        * Resources must be available for the entire duration of the job slot to
        be returned in the list.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              example: |
                {
                  "resourceIds": [
                    "0005ade1-2a42-431f-a468-594ec4cb3261",
                    "0005ea18-61c1-49d9-9b50-d16a31a21c20"
                  ],
                  "job": {
                    "location": {
                      "lat": -27.457865,
                      "lng": 153.037271
                    }
                  },
                  "gridSize": 1800,
                  "scheduleStart": "2018-11-22T22:00:00.000Z",
                  "scheduleEnd": "2018-11-23T01:00:00.000Z"
                }
              properties:
                resourceIds:
                  type: array
                  description: An array of resource IDs to generate availability slots.
                  items:
                    type: string
                job:
                  type: object
                  description: >-
                    Job properties that needs to be considered when generating
                    availability slots for the grid.
                  properties:
                    location:
                      type: object
                      description: >-
                        Geocoordinates of the job. When this is set, travel time
                        is considered when generating slots.
                      properties:
                        lat:
                          type: number
                          description: Latitude
                        lng:
                          type: number
                          description: Longitude
                      required:
                        - lat
                        - lng
                gridSize:
                  type: integer
                  minimum: 300
                  description: >-
                    The size of the grid ( in seconds ). The default is 5
                    minutes (300 seconds).
                scheduleStart:
                  type: string
                  format: date-time
                  description: >-
                    Can be either ISO8601 date time string or Unix timestamp
                    number ( in milliseconds ). Always returned in ISO8601
                    format.
                scheduleEnd:
                  type: string
                  format: date-time
                  description: >-
                    Can be either ISO8601 date time string or Unix timestamp
                    number ( in milliseconds ). Always returned in ISO8601
                    format.
              required:
                - job
                - resourceIds
                - scheduleStart
                - scheduleEnd
                - gridSize
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                example: |
                  {
                    "result": [
                      {
                        "start": "2018-11-22T22:00:00.000Z",
                        "end": "2018-11-22T22:30:00.000Z",
                        "availableResources": [
                          "0005ea18-61c1-49d9-9b50-d16a31a21c20"
                        ]
                      },
                      {
                        "start": "2018-11-22T22:30:00.000Z",
                        "end": "2018-11-22T23:00:00.000Z",
                        "availableResources": [
                          "0005ea18-61c1-49d9-9b50-d16a31a21c20"
                        ]
                      },
                      {
                        "start": "2018-11-22T23:00:00.000Z",
                        "end": "2018-11-22T23:30:00.000Z",
                        "availableResources": [
                          "0005ea18-61c1-49d9-9b50-d16a31a21c20",
                          "0005ade1-2a42-431f-a468-594ec4cb3261"
                        ]
                      },
                      {
                        "start": "2018-11-22T23:30:00.000Z",
                        "end": "2018-11-23T00:00:00.000Z",
                        "availableResources": [
                          "0005ade1-2a42-431f-a468-594ec4cb3261"
                        ]
                      },
                      {
                        "start": "2018-11-23T00:00:00.000Z",
                        "end": "2018-11-23T00:30:00.000Z",
                        "availableResources": [
                          "0005ea18-61c1-49d9-9b50-d16a31a21c20",
                          "0005ade1-2a42-431f-a468-594ec4cb3261"
                        ]
                      },
                      {
                        "start": "2018-11-23T00:30:00.000Z",
                        "end": "2018-11-23T01:00:00.000Z",
                        "availableResources": [
                          "0005ade1-2a42-431f-a468-594ec4cb3261"
                        ]
                      }
                    ]
                  }
                properties:
                  result:
                    type: array
                    items:
                      type: object
                      properties:
                        start:
                          type: string
                          format: date-time
                          description: >-
                            Can be either ISO8601 date time string or Unix
                            timestamp number ( in milliseconds ). Always
                            returned in ISO8601 format.
                        end:
                          type: string
                          format: date-time
                          description: >-
                            Can be either ISO8601 date time string or Unix
                            timestamp number ( in milliseconds ). Always
                            returned in ISO8601 format.
                        availableResources:
                          type: array
                          description: Resource ids of available resources.
                          items:
                            type: string
                            description: List of the resources that are available.
      tags:
        - Planr
      security:
        - BearerAuth: []
  /planr/optimize/schedule:
    post:
      operationId: /optimize/schedule
      summary: Schedule jobs
      description: >
        This API attempts to schedule jobs against a given list of resources and
        returns a valid schedule. You can use this endpoint to specify
        availability windows for resources who are available outside the
        scheduling window for the job/s you want to schedule. This prevents
        Planr from returning invalid solutions and provides an extra layer of
        flexibility in optimized job scheduling.


        `POST` request for `/optimize/schedule` must include either the
        `resources` or `resourceIds` property in the body.


        * The `resourceIds` property is an array.

        * The `resources` property is an object containing the resource ID along
        with the working hours start and end timestamp.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  example: |
                    {
                      "jobIds": [
                          "001406d4-51fd-4da7-8960-1e71429e1974",
                          "0014c5a0-05eb-4d16-8381-f63d17bda9d6",
                          "00142eaa-a8f3-4e90-942b-3233fff67936"
                      ],
                      "resources": {
                          "0005dfa7-c49e-481c-a25c-6daef8e3d918": [],
                          "0005094d-dae5-4cbb-ad7d-db78d3735e21": [{ "start": "2019-04-17T04:00:30.000Z", "end": "2019-04-17T0:20:30.000Z" }]
                      },
                      "scheduleStart": 1555475530486,
                      "scheduleEnd": 1555509599999,
                      "timeZone": "Australia/Brisbane",
                      "schedulingOptions": {
                          "respectSchedule": false,
                          "ignoreTravelTimes": true,
                          "ignoreTravelTimeFirstJob": false,
                          "ignoreTravelTimeLastJob": false,
                          "assumeResourceCanTravelBeforeStart": false,
                          "assumeResourceCanTravelAfterEnd": false,
                          "jobTimeAsTimeConstraint": true,
                          "preferJobTimeOverTimeConstraint": true,
                          "balanceWorkload": false,
                          "minimizeResources": false,
                          "snapUnit": 0,
                          "padding": 0
                      }
                    }
                  properties:
                    jobIds:
                      type: array
                      description: An array of job IDs to schedule resources for
                      items:
                        type: string
                    resources:
                      type: object
                      description: Resource IDs that can be scheduled for the jobs
                      additionalProperties:
                        type: array
                        description: >-
                          An array containing the start and end timestamp as per
                          the open hours
                        items:
                          type: object
                          properties:
                            start:
                              type: string
                              format: date-time
                              description: >-
                                Can be either ISO8601 date time string or Unix
                                timestamp number ( in milliseconds ). Always
                                returned in ISO8601 format.
                            end:
                              type: string
                              format: date-time
                              description: >-
                                Can be either ISO8601 date time string or Unix
                                timestamp number ( in milliseconds ). Always
                                returned in ISO8601 format.
                    scheduleStart:
                      type: string
                      format: date-time
                      description: >-
                        Can be either ISO8601 date time string or Unix timestamp
                        number ( in milliseconds ). Always returned in ISO8601
                        format.
                    scheduleEnd:
                      type: string
                      format: date-time
                      description: >-
                        Can be either ISO8601 date time string or Unix timestamp
                        number ( in milliseconds ). Always returned in ISO8601
                        format.
                    timeZone:
                      type: string
                    schedulingOptions:
                      type: object
                      properties:
                        balanceWorkload:
                          type: boolean
                          default: false
                          description: >-
                            Equalize total allocated duration including travel
                            time for each resource.
                        minimizeResources:
                          type: boolean
                          default: false
                          description: >-
                            Attempt to allocate to the fewest number of
                            resources in a scheduling window.
                        jobTimeAsTimeConstraint:
                          type: boolean
                          default: true
                          description: >-
                            When a job has a time set, consider it to be a time
                            constraint and never re-schedule to another time
                            slot.
                        preferJobTimeOverTimeConstraint:
                          type: boolean
                          default: true
                          description: >-
                            When a job with a JobTimeConstraint also has a time
                            set, consider the job time as the authoritative
                            constraint and ignore the JobTimeConstraint.
                        respectSchedule:
                          type: boolean
                          default: true
                          description: >-
                            For a job that is allocated and in "Pending
                            Dispatch" status, do not move the job to a different
                            time.
                        ignoreTravelTimes:
                          type: boolean
                          default: false
                          description: Ignore all travel times between resources and jobs.
                        ignoreTravelTimeFirstJob:
                          type: boolean
                          default: false
                          description: >-
                            Ignore travel time from a resource' home location to
                            the first job.
                        ignoreTravelTimeLastJob:
                          type: boolean
                          default: false
                          description: >-
                            Ignore travel time to the resource' home location
                            from the last job.
                        assumeResourceCanTravelBeforeStart:
                          type: boolean
                          default: false
                          description: >-
                            Ignore travel time to first job when deriving its
                            arrival time however include the travel time when
                            considering overall travel time reduction.
                        assumeResourceCanTravelAfterEnd:
                          type: boolean
                          default: false
                          description: >-
                            Assume that the resource can travel after their end
                            time to get to their end location however include
                            the travel time when considering overall travel time
                            reduction.
                        padding:
                          type: integer
                          default: 0
                          description: A fixed interval of time between consecutive jobs.
                        snapUnit:
                          type: integer
                          default: 0
                          minimum: 0
                          description: >-
                            Divide the given time frame into parts described by
                            this value and allocate all jobs to the nearest
                            part.
                        maxTravelTimeInMinutes:
                          type: integer
                          default: 0
                          minimum: 0
                          description: >-
                            When greater than zero do not schedule nodes whose
                            travel time would exceed this value in minutes.
                    responseConfig:
                      type: object
                      properties:
                        optimizedJobsOnly:
                          type: boolean
                          default: false
                          description: >-
                            The scheduled jobs returned are only the jobs
                            optimized. Jobs that are fixed (resource and time)
                            are not returned
                  required:
                    - jobIds
                    - resources
                    - scheduleStart
                    - scheduleEnd
                    - timeZone
                    - schedulingOptions
                - type: object
                  example: |
                    {
                      "jobIds": [
                          "001406d4-51fd-4da7-8960-1e71429e1974",
                          "0014c5a0-05eb-4d16-8381-f63d17bda9d6",
                          "00142eaa-a8f3-4e90-942b-3233fff67936"
                      ],
                      "resourceIds": [
                          "0005dfa7-c49e-481c-a25c-6daef8e3d918"
                          "000577e0-2d69-4e84-a1c3-1878d64f85f0"
                      ],
                      "scheduleStart": 1555475530486,
                      "scheduleEnd": 1555509599999,
                      "timeZone": "Australia/Brisbane",
                      "schedulingOptions": {
                          "respectSchedule": false,
                          "ignoreTravelTimes": true,
                          "ignoreTravelTimeFirstJob": false,
                          "ignoreTravelTimeLastJob": false,
                          "assumeResourceCanTravelBeforeStart": false,
                          "assumeResourceCanTravelAfterEnd": false,
                          "jobTimeAsTimeConstraint": true,
                          "preferJobTimeOverTimeConstraint": true,
                          "balanceWorkload": false,
                          "minimizeResources": false,
                          "snapUnit": 0,
                          "padding": 0
                      }
                    }
                  properties:
                    jobIds:
                      type: array
                      description: An array of job IDs to schedule resources for
                      items:
                        type: string
                    resourceIds:
                      type: array
                      description: >-
                        An array of resource ids that can be schedules for the
                        jobs
                      items:
                        type: string
                    scheduleStart:
                      type: string
                      format: date-time
                      description: >-
                        Can be either ISO8601 date time string or Unix timestamp
                        number ( in milliseconds ). Always returned in ISO8601
                        format.
                    scheduleEnd:
                      type: string
                      format: date-time
                      description: >-
                        Can be either ISO8601 date time string or Unix timestamp
                        number ( in milliseconds ). Always returned in ISO8601
                        format.
                    timeZone:
                      type: string
                    schedulingOptions:
                      type: object
                      properties:
                        balanceWorkload:
                          type: boolean
                          default: false
                          description: >-
                            Equalize total allocated duration including travel
                            time for each resource.
                        minimizeResources:
                          type: boolean
                          default: false
                          description: >-
                            Attempt to allocate to the fewest number of
                            resources in a scheduling window.
                        jobTimeAsTimeConstraint:
                          type: boolean
                          default: true
                          description: >-
                            When a job has a time set, consider it to be a time
                            constraint and never re-schedule to another time
                            slot.
                        preferJobTimeOverTimeConstraint:
                          type: boolean
                          default: true
                          description: >-
                            When a job with a JobTimeConstraint also has a time
                            set, consider the job time as the authoritative
                            constraint and ignore the JobTimeConstraint.
                        respectSchedule:
                          type: boolean
                          default: true
                          description: >-
                            For a job that is allocated and in "Pending
                            Dispatch" status, do not move the job to a different
                            time.
                        ignoreTravelTimes:
                          type: boolean
                          default: false
                          description: Ignore all travel times between resources and jobs.
                        ignoreTravelTimeFirstJob:
                          type: boolean
                          default: false
                          description: >-
                            Ignore travel time from a resource' home location to
                            the first job.
                        ignoreTravelTimeLastJob:
                          type: boolean
                          default: false
                          description: >-
                            Ignore travel time to the resource' home location
                            from the last job.
                        assumeResourceCanTravelBeforeStart:
                          type: boolean
                          default: false
                          description: >-
                            Ignore travel time to first job when deriving its
                            arrival time however include the travel time when
                            considering overall travel time reduction.
                        assumeResourceCanTravelAfterEnd:
                          type: boolean
                          default: false
                          description: >-
                            Assume that the resource can travel after their end
                            time to get to their end location however include
                            the travel time when considering overall travel time
                            reduction.
                        padding:
                          type: integer
                          default: 0
                          description: A fixed interval of time between consecutive jobs.
                        snapUnit:
                          type: integer
                          default: 0
                          minimum: 0
                          description: >-
                            Divide the given time frame into parts described by
                            this value and allocate all jobs to the nearest
                            part.
                        maxTravelTimeInMinutes:
                          type: integer
                          default: 0
                          minimum: 0
                          description: >-
                            When greater than zero do not schedule nodes whose
                            travel time would exceed this value in minutes.
                    responseConfig:
                      type: object
                      properties:
                        optimizedJobsOnly:
                          type: boolean
                          default: false
                          description: >-
                            The scheduled jobs returned are only the jobs
                            optimized. Jobs that are fixed (resource and time)
                            are not returned
                  required:
                    - jobIds
                    - resourceIds
                    - scheduleStart
                    - scheduleEnd
                    - timeZone
                    - schedulingOptions
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                example: |
                  {
                    "result": {
                        "score": {
                            "hardScore": 0,
                            "mediumScore": -180,
                            "softScore": 0
                        },
                        "timeToSolve": 2013,
                        "routes": [],
                        "unscheduled": [
                            {
                                "jobId": "001406d4-51fd-4da7-8960-1e71429e1974",
                                "jobName": "JOB-0059",
                                "jobReasons": [],
                                "resourceReasons": {
                                    "0005094d-dae5-4cbb-ad7d-db78d3735e21": {
                                        "name": "Test testing",
                                        "address": "79 McLachlan St, Fortitude Valley QLD 4006, Australia",
                                        "reasons": []
                                    }
                                }
                            }
                        ]
                    }
                  }
                properties:
                  result:
                    type: object
                    properties:
                      score:
                        type: object
                        properties:
                          hardScore:
                            type: number
                          mediumScore:
                            type: number
                          softScore:
                            type: number
                      timeToSolve:
                        type: number
                      routes:
                        type: array
                        items:
                          type: object
                          properties:
                            resourceId:
                              type: string
                            resourceName:
                              type: string
                            route:
                              type: array
                              items:
                                type: object
                                properties:
                                  jobId:
                                    type: string
                                  jobName:
                                    type: string
                                  start:
                                    type: string
                                    format: date-time
                                    description: >-
                                      Can be either ISO8601 date time string or
                                      Unix timestamp number ( in milliseconds ).
                                      Always returned in ISO8601 format.
                                  duration:
                                    type: number
                                  travelTime:
                                    type: number
                                  type:
                                    type: string
                      unscheduled:
                        type: array
                        items:
                          type: object
                          properties:
                            jobId:
                              type: string
                            jobName:
                              type: string
                            jobReasons:
                              type: array
                              items:
                                type: string
                            resourceReasons:
                              type: object
                              additionalProperties:
                                type: object
                                properties:
                                  name:
                                    type: string
                                  address:
                                    type: string
                                  reasons:
                                    type: array
                                    items:
                                      type: string
      tags:
        - Planr
      security:
        - BearerAuth: []
  /planr/geoservices/travel-time:
    post:
      operationId: /geoservices/travel-time
      summary: >-
        Determine travel time for many resources, across work or activities they
        have been assigned
      description: >-
        The Travel Time endpoint will approximate how long it takes for a
        resource to travel between destinations. It will filter down to relevant
        availability windows (ignoring destinations outside the resource's
        availability), order the work to be completed, and finally calculate the
        travel time between each destination. The result will contain only the
        node identifier and the relevant travel time.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        description: The identifier of the resource
                      origin:
                        type: object
                        description: Geocoordinates of the activity/job/resource
                        properties:
                          lat:
                            type: number
                            description: Latitude
                          lng:
                            type: number
                            description: Longitude
                        required:
                          - lat
                          - lng
                      availabilities:
                        type: array
                        description: The time windows when a resource is available
                        items:
                          type: object
                          properties:
                            start:
                              type: string
                              format: date-time
                              description: >-
                                Can be either ISO8601 date time string or Unix
                                timestamp number ( in milliseconds ). Always
                                returned in ISO8601 format.
                            end:
                              type: string
                              format: date-time
                              description: >-
                                Can be either ISO8601 date time string or Unix
                                timestamp number ( in milliseconds ). Always
                                returned in ISO8601 format.
                          required:
                            - start
                            - end
                nodes:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        description: >-
                          The requesting system's identifier that needs travel
                          time
                      resourceId:
                        type: string
                        description: >-
                          The identifier of the resource to determine routes and
                          waypoints
                      start:
                        type: string
                        format: date-time
                        description: >-
                          Can be either ISO8601 date time string or Unix
                          timestamp number ( in milliseconds ). Always returned
                          in ISO8601 format.
                      end:
                        type: string
                        format: date-time
                        description: >-
                          Can be either ISO8601 date time string or Unix
                          timestamp number ( in milliseconds ). Always returned
                          in ISO8601 format.
                      lat:
                        type: number
                        description: Latitude
                      lng:
                        type: number
                        description: Longitude
                    required:
                      - id
                      - resourceId
                      - start
                      - end
                schedulingOptions:
                  type: object
                  properties:
                    balanceWorkload:
                      type: boolean
                      default: false
                      description: >-
                        Equalize total allocated duration including travel time
                        for each resource.
                    minimizeResources:
                      type: boolean
                      default: false
                      description: >-
                        Attempt to allocate to the fewest number of resources in
                        a scheduling window.
                    jobTimeAsTimeConstraint:
                      type: boolean
                      default: true
                      description: >-
                        When a job has a time set, consider it to be a time
                        constraint and never re-schedule to another time slot.
                    preferJobTimeOverTimeConstraint:
                      type: boolean
                      default: true
                      description: >-
                        When a job with a JobTimeConstraint also has a time set,
                        consider the job time as the authoritative constraint
                        and ignore the JobTimeConstraint.
                    respectSchedule:
                      type: boolean
                      default: true
                      description: >-
                        For a job that is allocated and in "Pending Dispatch"
                        status, do not move the job to a different time.
                    ignoreTravelTimes:
                      type: boolean
                      default: false
                      description: Ignore all travel times between resources and jobs.
                    ignoreTravelTimeFirstJob:
                      type: boolean
                      default: false
                      description: >-
                        Ignore travel time from a resource' home location to the
                        first job.
                    ignoreTravelTimeLastJob:
                      type: boolean
                      default: false
                      description: >-
                        Ignore travel time to the resource' home location from
                        the last job.
                    assumeResourceCanTravelBeforeStart:
                      type: boolean
                      default: false
                      description: >-
                        Ignore travel time to first job when deriving its
                        arrival time however include the travel time when
                        considering overall travel time reduction.
                    assumeResourceCanTravelAfterEnd:
                      type: boolean
                      default: false
                      description: >-
                        Assume that the resource can travel after their end time
                        to get to their end location however include the travel
                        time when considering overall travel time reduction.
                    padding:
                      type: integer
                      default: 0
                      description: A fixed interval of time between consecutive jobs.
                    snapUnit:
                      type: integer
                      default: 0
                      minimum: 0
                      description: >-
                        Divide the given time frame into parts described by this
                        value and allocate all jobs to the nearest part.
                    maxTravelTimeInMinutes:
                      type: integer
                      default: 0
                      minimum: 0
                      description: >-
                        When greater than zero do not schedule nodes whose
                        travel time would exceed this value in minutes.
              required:
                - resources
                - nodes
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    description: >-
                      The response will contain successful travel times grouped
                      by the Nodes id
                example: |
                  {
                    "result": {
                      "0008dea1-7b0b-496c-8043-fb86ff6a73aa": 204,
                      "0008cb3c-e5d8-45e6-ba80-cc674aedbbbe": 0,
                      "001413ed-c6a5-495d-9fb9-a92503a250c1": 340,
                      "001442ff-27e7-40f3-80c8-016305b92230": 344,
                      "001484ec-5a47-48ae-bce8-0bf443fbf50c": 163,
                      "000555ac-24f1-43fe-b6c0-117c34bbc994": 257,
                    }
                  }
      tags:
        - Planr
      security:
        - BearerAuth: []
  /optimization/batch/schedule:
    post:
      operationId: batchScheduleCreate
      summary: Create an optimization batch schedule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - jobQuery
                - resourceQuery
                - region
                - runDate
                - timezone
                - earliestStartTime
                - dayRange
                - dayOffset
              example: |
                {
                  "name" : "a1",
                  "jobQuery" : "a2",
                  "resourceQuery" : "a3",
                  "region" : "r1",
                  "runDate" : "2020-02-03",
                  "timezone": "Australia/Brisbane",
                  "earliestStartTime" : "01:02:00",
                  "latestEndTime" : "03:04:00",
                  "dayRange" : 1,
                  "dayOffset" : 2,
                  "recurring" : {
                    "step" : 1,
                    "repeatMode" : "daily",
                    "endAfterNumberOccurrences" : 1,
                    "repeatOnWeekDays" : [
                      "sun",
                      "mon",
                      "tue",
                      "wed",
                      "thu",
                      "fri",
                      "sat"
                    ]
                  },
                }
              properties:
                name:
                  type: string
                  description: |
                    The name of the schedule.
                jobQuery:
                  type: string
                  description: |
                    The name of the type of jobs query.
                resourceQuery:
                  type: string
                  description: |
                    The resource types included in the query.
                region:
                  type: string
                  description: |
                    The Region ID in which job/resource queries are run against.
                runDate:
                  type: string
                  description: |
                    The day in which to execute this schedule the first time.
                timezone:
                  type: string
                  description: >
                    The timezone in which to run this schedule, which affects
                    the runDate and start/end times.
                earliestStartTime:
                  type: string
                  description: >
                    The time of day (in the given timezone) to run this
                    schedule.
                latestEndTime:
                  type: string
                  description: >
                    The (optional) time of day (in the given timezone) in which
                    the results of this optimization _must_ be completed before.

                    This is only a time (and not a duration) as optimizations
                    can only run within a 24 hour window.

                    eg. If the earliestStartTime is 16:00 then 15:00 refers to
                    3pm the next day.
                dayRange:
                  type: integer
                  description: >
                    The number of days in which to optimize.


                    NOTE: Optimization occurs across an entire day, from 12:00am
                    to 11:59pm
                dayOffset:
                  type: integer
                  description: |
                    The number of days to optimize ahead of the scheduled run.
                schedulingOptions:
                  type: object
                  properties:
                    balanceWorkload:
                      type: boolean
                      default: false
                      description: >-
                        Equalize total allocated duration including travel time
                        for each resource.
                    minimizeResources:
                      type: boolean
                      default: false
                      description: >-
                        Attempt to allocate to the fewest number of resources in
                        a scheduling window.
                    jobTimeAsTimeConstraint:
                      type: boolean
                      default: true
                      description: >-
                        When a job has a time set, consider it to be a time
                        constraint and never re-schedule to another time slot.
                    preferJobTimeOverTimeConstraint:
                      type: boolean
                      default: true
                      description: >-
                        When a job with a JobTimeConstraint also has a time set,
                        consider the job time as the authoritative constraint
                        and ignore the JobTimeConstraint.
                    respectSchedule:
                      type: boolean
                      default: true
                      description: >-
                        For a job that is allocated and in "Pending Dispatch"
                        status, do not move the job to a different time.
                    ignoreTravelTimes:
                      type: boolean
                      default: false
                      description: Ignore all travel times between resources and jobs.
                    ignoreTravelTimeFirstJob:
                      type: boolean
                      default: false
                      description: >-
                        Ignore travel time from a resource' home location to the
                        first job.
                    ignoreTravelTimeLastJob:
                      type: boolean
                      default: false
                      description: >-
                        Ignore travel time to the resource' home location from
                        the last job.
                    assumeResourceCanTravelBeforeStart:
                      type: boolean
                      default: false
                      description: >-
                        Ignore travel time to first job when deriving its
                        arrival time however include the travel time when
                        considering overall travel time reduction.
                    assumeResourceCanTravelAfterEnd:
                      type: boolean
                      default: false
                      description: >-
                        Assume that the resource can travel after their end time
                        to get to their end location however include the travel
                        time when considering overall travel time reduction.
                    padding:
                      type: integer
                      default: 0
                      description: A fixed interval of time between consecutive jobs.
                    snapUnit:
                      type: integer
                      default: 0
                      minimum: 0
                      description: >-
                        Divide the given time frame into parts described by this
                        value and allocate all jobs to the nearest part.
                    maxTravelTimeInMinutes:
                      type: integer
                      default: 0
                      minimum: 0
                      description: >-
                        When greater than zero do not schedule nodes whose
                        travel time would exceed this value in minutes.
                recurring:
                  type: object
                  required:
                    - step
                    - repeatMode
                  properties:
                    step:
                      description: >
                        The number of days/months/years between each generated
                        interval.

                        For example, with repeatMode = 'daily' and step = 1, an
                        interval will be generated every day.
                      type: number
                    repeatMode:
                      description: How occurences are repeated
                      type: string
                      enum:
                        - daily
                        - weekly
                        - monthly_nth_day
                        - yearly
                    dayOfMonthToRepeatOn:
                      description: >
                        The day of the month on which the schedule should run.
                        This is required when the `repeatMode` is
                        `monthly_nth_day`.
                      type: number
                      example: 1
                    endAfterNumberOccurrences:
                      description: >
                        Number of occurrence to generate. If using this, do not
                        provide endOn.

                        If neither are provided then never end.


                        Note: when repeatMode is 'weekly', this value means the
                        number of week periods to generate the intervals from,

                        So when endAfterNumberOccurrences = 4, only the next 4
                        weeks will be checked (some weeks may not generated an
                        interval due

                        to other rules, leading to less than 4 intervals being
                        generated in total).
                      type: number
                      example: 5
                    endOn:
                      description: >
                        Date the pattern should end on. If using this, do not
                        provide endAfterNumberOccurrences.

                        If neither are provided then never end.
                      type: string
                      format: date
                      example: 2020-05-13T00:00:00.000Z
                    repeatOnWeekDays:
                      description: >
                        The days of week intervals can occur on. Only applies
                        when repeatMode = 'daily' or 'weekly'.
                      type: array
                      items:
                        type: string
                        enum:
                          - mon
                          - tue
                          - wed
                          - thu
                          - fri
                          - sat
                          - sun
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
      tags:
        - Optimization
      security:
        - BearerAuth: []
    get:
      operationId: batchSchedulesList
      summary: List optimization batch schedules
      parameters:
        - name: offset
          in: query
          required: false
          schema:
            type: number
          description: |
            Return results at this record offset.
            NOTE: Mutually exclusive to `after`.
        - name: after
          in: query
          required: false
          schema:
            type: string
          description: |
            Taken from the page result `nextCursor`
            NOTE: Mutually exclusive to `offset`.
        - name: limit
          in: query
          required: false
          schema:
            type: number
        - name: ids
          in: query
          required: false
          explode: false
          schema:
            type: array
            items:
              type: string
              format: uuid
        - name: statuses
          in: query
          required: false
          explode: false
          schema:
            type: array
            items:
              type: string
              enum:
                - deleted
        - name: name
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                required:
                  - paging
                  - result
                properties:
                  paging:
                    type: object
                    required:
                      - limit
                    properties:
                      total:
                        type: integer
                      limit:
                        type: integer
                      nextCursor:
                        type: string
                        description: >
                          Returns an opaque cursor for the "next" page of
                          results.

                          This can be used when sequentially paging over the
                          result instead of having to calculate the next offset.
                  result:
                    type: array
                    items:
                      allOf:
                        - type: object
                          required:
                            - name
                            - jobQuery
                            - resourceQuery
                            - region
                            - runDate
                            - timezone
                            - earliestStartTime
                            - dayRange
                            - dayOffset
                          example: |
                            {
                              "name" : "a1",
                              "jobQuery" : "a2",
                              "resourceQuery" : "a3",
                              "region" : "r1",
                              "runDate" : "2020-02-03",
                              "timezone": "Australia/Brisbane",
                              "earliestStartTime" : "01:02:00",
                              "latestEndTime" : "03:04:00",
                              "dayRange" : 1,
                              "dayOffset" : 2,
                              "recurring" : {
                                "step" : 1,
                                "repeatMode" : "daily",
                                "endAfterNumberOccurrences" : 1,
                                "repeatOnWeekDays" : [
                                  "sun",
                                  "mon",
                                  "tue",
                                  "wed",
                                  "thu",
                                  "fri",
                                  "sat"
                                ]
                              },
                            }
                          properties:
                            name:
                              type: string
                              description: |
                                The name of the schedule.
                            jobQuery:
                              type: string
                              description: |
                                The name of the type of jobs query.
                            resourceQuery:
                              type: string
                              description: |
                                The resource types included in the query.
                            region:
                              type: string
                              description: >
                                The Region ID in which job/resource queries are
                                run against.
                            runDate:
                              type: string
                              description: >
                                The day in which to execute this schedule the
                                first time.
                            timezone:
                              type: string
                              description: >
                                The timezone in which to run this schedule,
                                which affects the runDate and start/end times.
                            earliestStartTime:
                              type: string
                              description: >
                                The time of day (in the given timezone) to run
                                this schedule.
                            latestEndTime:
                              type: string
                              description: >
                                The (optional) time of day (in the given
                                timezone) in which the results of this
                                optimization _must_ be completed before.

                                This is only a time (and not a duration) as
                                optimizations can only run within a 24 hour
                                window.

                                eg. If the earliestStartTime is 16:00 then 15:00
                                refers to 3pm the next day.
                            dayRange:
                              type: integer
                              description: >
                                The number of days in which to optimize.


                                NOTE: Optimization occurs across an entire day,
                                from 12:00am to 11:59pm
                            dayOffset:
                              type: integer
                              description: >
                                The number of days to optimize ahead of the
                                scheduled run.
                            schedulingOptions:
                              type: object
                              properties:
                                balanceWorkload:
                                  type: boolean
                                  default: false
                                  description: >-
                                    Equalize total allocated duration including
                                    travel time for each resource.
                                minimizeResources:
                                  type: boolean
                                  default: false
                                  description: >-
                                    Attempt to allocate to the fewest number of
                                    resources in a scheduling window.
                                jobTimeAsTimeConstraint:
                                  type: boolean
                                  default: true
                                  description: >-
                                    When a job has a time set, consider it to be
                                    a time constraint and never re-schedule to
                                    another time slot.
                                preferJobTimeOverTimeConstraint:
                                  type: boolean
                                  default: true
                                  description: >-
                                    When a job with a JobTimeConstraint also has
                                    a time set, consider the job time as the
                                    authoritative constraint and ignore the
                                    JobTimeConstraint.
                                respectSchedule:
                                  type: boolean
                                  default: true
                                  description: >-
                                    For a job that is allocated and in "Pending
                                    Dispatch" status, do not move the job to a
                                    different time.
                                ignoreTravelTimes:
                                  type: boolean
                                  default: false
                                  description: >-
                                    Ignore all travel times between resources
                                    and jobs.
                                ignoreTravelTimeFirstJob:
                                  type: boolean
                                  default: false
                                  description: >-
                                    Ignore travel time from a resource' home
                                    location to the first job.
                                ignoreTravelTimeLastJob:
                                  type: boolean
                                  default: false
                                  description: >-
                                    Ignore travel time to the resource' home
                                    location from the last job.
                                assumeResourceCanTravelBeforeStart:
                                  type: boolean
                                  default: false
                                  description: >-
                                    Ignore travel time to first job when
                                    deriving its arrival time however include
                                    the travel time when considering overall
                                    travel time reduction.
                                assumeResourceCanTravelAfterEnd:
                                  type: boolean
                                  default: false
                                  description: >-
                                    Assume that the resource can travel after
                                    their end time to get to their end location
                                    however include the travel time when
                                    considering overall travel time reduction.
                                padding:
                                  type: integer
                                  default: 0
                                  description: >-
                                    A fixed interval of time between consecutive
                                    jobs.
                                snapUnit:
                                  type: integer
                                  default: 0
                                  minimum: 0
                                  description: >-
                                    Divide the given time frame into parts
                                    described by this value and allocate all
                                    jobs to the nearest part.
                                maxTravelTimeInMinutes:
                                  type: integer
                                  default: 0
                                  minimum: 0
                                  description: >-
                                    When greater than zero do not schedule nodes
                                    whose travel time would exceed this value in
                                    minutes.
                            recurring:
                              type: object
                              required:
                                - step
                                - repeatMode
                              properties:
                                step:
                                  description: >
                                    The number of days/months/years between each
                                    generated interval.

                                    For example, with repeatMode = 'daily' and
                                    step = 1, an interval will be generated
                                    every day.
                                  type: number
                                repeatMode:
                                  description: How occurences are repeated
                                  type: string
                                  enum:
                                    - daily
                                    - weekly
                                    - monthly_nth_day
                                    - yearly
                                dayOfMonthToRepeatOn:
                                  description: >
                                    The day of the month on which the schedule
                                    should run. This is required when the
                                    `repeatMode` is `monthly_nth_day`.
                                  type: number
                                  example: 1
                                endAfterNumberOccurrences:
                                  description: >
                                    Number of occurrence to generate. If using
                                    this, do not provide endOn.

                                    If neither are provided then never end.


                                    Note: when repeatMode is 'weekly', this
                                    value means the number of week periods to
                                    generate the intervals from,

                                    So when endAfterNumberOccurrences = 4, only
                                    the next 4 weeks will be checked (some weeks
                                    may not generated an interval due

                                    to other rules, leading to less than 4
                                    intervals being generated in total).
                                  type: number
                                  example: 5
                                endOn:
                                  description: >
                                    Date the pattern should end on. If using
                                    this, do not provide
                                    endAfterNumberOccurrences.

                                    If neither are provided then never end.
                                  type: string
                                  format: date
                                  example: 2020-05-13T00:00:00.000Z
                                repeatOnWeekDays:
                                  description: >
                                    The days of week intervals can occur on.
                                    Only applies when repeatMode = 'daily' or
                                    'weekly'.
                                  type: array
                                  items:
                                    type: string
                                    enum:
                                      - mon
                                      - tue
                                      - wed
                                      - thu
                                      - fri
                                      - sat
                                      - sun
                        - type: object
                          required:
                            - id
                            - lastModifiedByUserId
                            - lastModifiedByDate
                            - createdByUserId
                            - createdByDate
                          properties:
                            id:
                              type: string
                              format: uuid
                            lastModifiedByUserId:
                              type: string
                            lastModifiedByDate:
                              type: string
                              format: date-time
                            createdByUserId:
                              type: string
                            createdByDate:
                              type: string
                              format: date-time
                            lastRun:
                              type: string
                              format: date-time
                            nextRun:
                              type: string
                              format: date-time
                            status:
                              type: string
                              enum:
                                - deleted
      tags:
        - Optimization
      security:
        - BearerAuth: []
  '/optimization/batch/schedule/{schedule_id}':
    get:
      operationId: batchScheduleGet
      summary: Get a single batch schedule
      parameters:
        - name: schedule_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    required:
                      - name
                      - jobQuery
                      - resourceQuery
                      - region
                      - runDate
                      - timezone
                      - earliestStartTime
                      - dayRange
                      - dayOffset
                    example: |
                      {
                        "name" : "a1",
                        "jobQuery" : "a2",
                        "resourceQuery" : "a3",
                        "region" : "r1",
                        "runDate" : "2020-02-03",
                        "timezone": "Australia/Brisbane",
                        "earliestStartTime" : "01:02:00",
                        "latestEndTime" : "03:04:00",
                        "dayRange" : 1,
                        "dayOffset" : 2,
                        "recurring" : {
                          "step" : 1,
                          "repeatMode" : "daily",
                          "endAfterNumberOccurrences" : 1,
                          "repeatOnWeekDays" : [
                            "sun",
                            "mon",
                            "tue",
                            "wed",
                            "thu",
                            "fri",
                            "sat"
                          ]
                        },
                      }
                    properties:
                      name:
                        type: string
                        description: |
                          The name of the schedule.
                      jobQuery:
                        type: string
                        description: |
                          The name of the type of jobs query.
                      resourceQuery:
                        type: string
                        description: |
                          The resource types included in the query.
                      region:
                        type: string
                        description: >
                          The Region ID in which job/resource queries are run
                          against.
                      runDate:
                        type: string
                        description: >
                          The day in which to execute this schedule the first
                          time.
                      timezone:
                        type: string
                        description: >
                          The timezone in which to run this schedule, which
                          affects the runDate and start/end times.
                      earliestStartTime:
                        type: string
                        description: >
                          The time of day (in the given timezone) to run this
                          schedule.
                      latestEndTime:
                        type: string
                        description: >
                          The (optional) time of day (in the given timezone) in
                          which the results of this optimization _must_ be
                          completed before.

                          This is only a time (and not a duration) as
                          optimizations can only run within a 24 hour window.

                          eg. If the earliestStartTime is 16:00 then 15:00
                          refers to 3pm the next day.
                      dayRange:
                        type: integer
                        description: >
                          The number of days in which to optimize.


                          NOTE: Optimization occurs across an entire day, from
                          12:00am to 11:59pm
                      dayOffset:
                        type: integer
                        description: >
                          The number of days to optimize ahead of the scheduled
                          run.
                      schedulingOptions:
                        type: object
                        properties:
                          balanceWorkload:
                            type: boolean
                            default: false
                            description: >-
                              Equalize total allocated duration including travel
                              time for each resource.
                          minimizeResources:
                            type: boolean
                            default: false
                            description: >-
                              Attempt to allocate to the fewest number of
                              resources in a scheduling window.
                          jobTimeAsTimeConstraint:
                            type: boolean
                            default: true
                            description: >-
                              When a job has a time set, consider it to be a
                              time constraint and never re-schedule to another
                              time slot.
                          preferJobTimeOverTimeConstraint:
                            type: boolean
                            default: true
                            description: >-
                              When a job with a JobTimeConstraint also has a
                              time set, consider the job time as the
                              authoritative constraint and ignore the
                              JobTimeConstraint.
                          respectSchedule:
                            type: boolean
                            default: true
                            description: >-
                              For a job that is allocated and in "Pending
                              Dispatch" status, do not move the job to a
                              different time.
                          ignoreTravelTimes:
                            type: boolean
                            default: false
                            description: >-
                              Ignore all travel times between resources and
                              jobs.
                          ignoreTravelTimeFirstJob:
                            type: boolean
                            default: false
                            description: >-
                              Ignore travel time from a resource' home location
                              to the first job.
                          ignoreTravelTimeLastJob:
                            type: boolean
                            default: false
                            description: >-
                              Ignore travel time to the resource' home location
                              from the last job.
                          assumeResourceCanTravelBeforeStart:
                            type: boolean
                            default: false
                            description: >-
                              Ignore travel time to first job when deriving its
                              arrival time however include the travel time when
                              considering overall travel time reduction.
                          assumeResourceCanTravelAfterEnd:
                            type: boolean
                            default: false
                            description: >-
                              Assume that the resource can travel after their
                              end time to get to their end location however
                              include the travel time when considering overall
                              travel time reduction.
                          padding:
                            type: integer
                            default: 0
                            description: A fixed interval of time between consecutive jobs.
                          snapUnit:
                            type: integer
                            default: 0
                            minimum: 0
                            description: >-
                              Divide the given time frame into parts described
                              by this value and allocate all jobs to the nearest
                              part.
                          maxTravelTimeInMinutes:
                            type: integer
                            default: 0
                            minimum: 0
                            description: >-
                              When greater than zero do not schedule nodes whose
                              travel time would exceed this value in minutes.
                      recurring:
                        type: object
                        required:
                          - step
                          - repeatMode
                        properties:
                          step:
                            description: >
                              The number of days/months/years between each
                              generated interval.

                              For example, with repeatMode = 'daily' and step =
                              1, an interval will be generated every day.
                            type: number
                          repeatMode:
                            description: How occurences are repeated
                            type: string
                            enum:
                              - daily
                              - weekly
                              - monthly_nth_day
                              - yearly
                          dayOfMonthToRepeatOn:
                            description: >
                              The day of the month on which the schedule should
                              run. This is required when the `repeatMode` is
                              `monthly_nth_day`.
                            type: number
                            example: 1
                          endAfterNumberOccurrences:
                            description: >
                              Number of occurrence to generate. If using this,
                              do not provide endOn.

                              If neither are provided then never end.


                              Note: when repeatMode is 'weekly', this value
                              means the number of week periods to generate the
                              intervals from,

                              So when endAfterNumberOccurrences = 4, only the
                              next 4 weeks will be checked (some weeks may not
                              generated an interval due

                              to other rules, leading to less than 4 intervals
                              being generated in total).
                            type: number
                            example: 5
                          endOn:
                            description: >
                              Date the pattern should end on. If using this, do
                              not provide endAfterNumberOccurrences.

                              If neither are provided then never end.
                            type: string
                            format: date
                            example: 2020-05-13T00:00:00.000Z
                          repeatOnWeekDays:
                            description: >
                              The days of week intervals can occur on. Only
                              applies when repeatMode = 'daily' or 'weekly'.
                            type: array
                            items:
                              type: string
                              enum:
                                - mon
                                - tue
                                - wed
                                - thu
                                - fri
                                - sat
                                - sun
                  - type: object
                    required:
                      - id
                      - lastModifiedByUserId
                      - lastModifiedByDate
                      - createdByUserId
                      - createdByDate
                    properties:
                      id:
                        type: string
                        format: uuid
                      lastModifiedByUserId:
                        type: string
                      lastModifiedByDate:
                        type: string
                        format: date-time
                      createdByUserId:
                        type: string
                      createdByDate:
                        type: string
                        format: date-time
                      lastRun:
                        type: string
                        format: date-time
                      nextRun:
                        type: string
                        format: date-time
                      status:
                        type: string
                        enum:
                          - deleted
        '404':
          description: The batch schedule does not exist
      tags:
        - Optimization
      security:
        - BearerAuth: []
    put:
      operationId: batchscheduleUpsert
      summary: Create/Update an optimization batch schedule
      parameters:
        - name: schedule_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - jobQuery
                - resourceQuery
                - region
                - runDate
                - timezone
                - earliestStartTime
                - dayRange
                - dayOffset
              example: |
                {
                  "name" : "a1",
                  "jobQuery" : "a2",
                  "resourceQuery" : "a3",
                  "region" : "r1",
                  "runDate" : "2020-02-03",
                  "timezone": "Australia/Brisbane",
                  "earliestStartTime" : "01:02:00",
                  "latestEndTime" : "03:04:00",
                  "dayRange" : 1,
                  "dayOffset" : 2,
                  "recurring" : {
                    "step" : 1,
                    "repeatMode" : "daily",
                    "endAfterNumberOccurrences" : 1,
                    "repeatOnWeekDays" : [
                      "sun",
                      "mon",
                      "tue",
                      "wed",
                      "thu",
                      "fri",
                      "sat"
                    ]
                  },
                }
              properties:
                name:
                  type: string
                  description: |
                    The name of the schedule.
                jobQuery:
                  type: string
                  description: |
                    The name of the type of jobs query.
                resourceQuery:
                  type: string
                  description: |
                    The resource types included in the query.
                region:
                  type: string
                  description: |
                    The Region ID in which job/resource queries are run against.
                runDate:
                  type: string
                  description: |
                    The day in which to execute this schedule the first time.
                timezone:
                  type: string
                  description: >
                    The timezone in which to run this schedule, which affects
                    the runDate and start/end times.
                earliestStartTime:
                  type: string
                  description: >
                    The time of day (in the given timezone) to run this
                    schedule.
                latestEndTime:
                  type: string
                  description: >
                    The (optional) time of day (in the given timezone) in which
                    the results of this optimization _must_ be completed before.

                    This is only a time (and not a duration) as optimizations
                    can only run within a 24 hour window.

                    eg. If the earliestStartTime is 16:00 then 15:00 refers to
                    3pm the next day.
                dayRange:
                  type: integer
                  description: >
                    The number of days in which to optimize.


                    NOTE: Optimization occurs across an entire day, from 12:00am
                    to 11:59pm
                dayOffset:
                  type: integer
                  description: |
                    The number of days to optimize ahead of the scheduled run.
                schedulingOptions:
                  type: object
                  properties:
                    balanceWorkload:
                      type: boolean
                      default: false
                      description: >-
                        Equalize total allocated duration including travel time
                        for each resource.
                    minimizeResources:
                      type: boolean
                      default: false
                      description: >-
                        Attempt to allocate to the fewest number of resources in
                        a scheduling window.
                    jobTimeAsTimeConstraint:
                      type: boolean
                      default: true
                      description: >-
                        When a job has a time set, consider it to be a time
                        constraint and never re-schedule to another time slot.
                    preferJobTimeOverTimeConstraint:
                      type: boolean
                      default: true
                      description: >-
                        When a job with a JobTimeConstraint also has a time set,
                        consider the job time as the authoritative constraint
                        and ignore the JobTimeConstraint.
                    respectSchedule:
                      type: boolean
                      default: true
                      description: >-
                        For a job that is allocated and in "Pending Dispatch"
                        status, do not move the job to a different time.
                    ignoreTravelTimes:
                      type: boolean
                      default: false
                      description: Ignore all travel times between resources and jobs.
                    ignoreTravelTimeFirstJob:
                      type: boolean
                      default: false
                      description: >-
                        Ignore travel time from a resource' home location to the
                        first job.
                    ignoreTravelTimeLastJob:
                      type: boolean
                      default: false
                      description: >-
                        Ignore travel time to the resource' home location from
                        the last job.
                    assumeResourceCanTravelBeforeStart:
                      type: boolean
                      default: false
                      description: >-
                        Ignore travel time to first job when deriving its
                        arrival time however include the travel time when
                        considering overall travel time reduction.
                    assumeResourceCanTravelAfterEnd:
                      type: boolean
                      default: false
                      description: >-
                        Assume that the resource can travel after their end time
                        to get to their end location however include the travel
                        time when considering overall travel time reduction.
                    padding:
                      type: integer
                      default: 0
                      description: A fixed interval of time between consecutive jobs.
                    snapUnit:
                      type: integer
                      default: 0
                      minimum: 0
                      description: >-
                        Divide the given time frame into parts described by this
                        value and allocate all jobs to the nearest part.
                    maxTravelTimeInMinutes:
                      type: integer
                      default: 0
                      minimum: 0
                      description: >-
                        When greater than zero do not schedule nodes whose
                        travel time would exceed this value in minutes.
                recurring:
                  type: object
                  required:
                    - step
                    - repeatMode
                  properties:
                    step:
                      description: >
                        The number of days/months/years between each generated
                        interval.

                        For example, with repeatMode = 'daily' and step = 1, an
                        interval will be generated every day.
                      type: number
                    repeatMode:
                      description: How occurences are repeated
                      type: string
                      enum:
                        - daily
                        - weekly
                        - monthly_nth_day
                        - yearly
                    dayOfMonthToRepeatOn:
                      description: >
                        The day of the month on which the schedule should run.
                        This is required when the `repeatMode` is
                        `monthly_nth_day`.
                      type: number
                      example: 1
                    endAfterNumberOccurrences:
                      description: >
                        Number of occurrence to generate. If using this, do not
                        provide endOn.

                        If neither are provided then never end.


                        Note: when repeatMode is 'weekly', this value means the
                        number of week periods to generate the intervals from,

                        So when endAfterNumberOccurrences = 4, only the next 4
                        weeks will be checked (some weeks may not generated an
                        interval due

                        to other rules, leading to less than 4 intervals being
                        generated in total).
                      type: number
                      example: 5
                    endOn:
                      description: >
                        Date the pattern should end on. If using this, do not
                        provide endAfterNumberOccurrences.

                        If neither are provided then never end.
                      type: string
                      format: date
                      example: 2020-05-13T00:00:00.000Z
                    repeatOnWeekDays:
                      description: >
                        The days of week intervals can occur on. Only applies
                        when repeatMode = 'daily' or 'weekly'.
                      type: array
                      items:
                        type: string
                        enum:
                          - mon
                          - tue
                          - wed
                          - thu
                          - fri
                          - sat
                          - sun
      responses:
        '204':
          description: Success
      tags:
        - Optimization
      security:
        - BearerAuth: []
    delete:
      operationId: batchScheduleDelete
      summary: Delete an optimization batch schedule
      parameters:
        - name: schedule_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Success
      tags:
        - Optimization
      security:
        - BearerAuth: []
  /optimization/schedule:
    post:
      operationId: schedule
      summary: Schedule jobs
      description: >
        This API attempts to schedule jobs against a given list of resources and
        returns a valid schedule.

        You can use this endpoint to specify availability windows for resources
        who are available outside the scheduling

        window for the job/s you want to schedule. This prevents the optimizer
        from returning invalid solutions and

        provides an extra layer of flexibility in optimized job scheduling.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - oneOf:
                    - type: object
                      required:
                        - resourceIds
                      properties:
                        resourceIds:
                          type: array
                          description: >-
                            An array of resource ids that can be schedules for
                            the jobs
                          items:
                            type: string
                    - type: object
                      required:
                        - resources
                      properties:
                        resources:
                          type: object
                          description: Resource IDs that can be scheduled for the jobs
                          additionalProperties:
                            type: array
                            description: >-
                              An array containing the start and end timestamp as
                              per the open hours
                            items:
                              type: object
                              properties:
                                start:
                                  type: string
                                  format: date-time
                                  description: >-
                                    Can be either ISO8601 date time string or
                                    Unix timestamp number ( in milliseconds ).
                                    Always returned in ISO8601 format.
                                end:
                                  type: string
                                  format: date-time
                                  description: >-
                                    Can be either ISO8601 date time string or
                                    Unix timestamp number ( in milliseconds ).
                                    Always returned in ISO8601 format.
                - type: object
                  example: |
                    {
                      "jobIds": [
                          "001406d4-51fd-4da7-8960-1e71429e1974",
                          "0014c5a0-05eb-4d16-8381-f63d17bda9d6",
                          "00142eaa-a8f3-4e90-942b-3233fff67936"
                      ],
                      "resources": {
                          "0005dfa7-c49e-481c-a25c-6daef8e3d918": [],
                          "0005094d-dae5-4cbb-ad7d-db78d3735e21": [{ "start": "2019-04-17T04:00:30.000Z", "end": "2019-04-17T0:20:30.000Z" }]
                      },
                      "scheduleStart": 1555475530486,
                      "scheduleEnd": 1555509599999,
                      "timeZone": "Australia/Brisbane",
                      "schedulingOptions": {
                          "respectSchedule": false,
                          "ignoreTravelTimes": true,
                          "ignoreTravelTimeFirstJob": false,
                          "ignoreTravelTimeLastJob": false,
                          "assumeResourceCanTravelBeforeStart": false,
                          "assumeResourceCanTravelAfterEnd": false,
                          "jobTimeAsTimeConstraint": true,
                          "preferJobTimeOverTimeConstraint": true,
                          "balanceWorkload": false,
                          "minimizeResources": false,
                          "snapUnit": 0,
                          "padding": 0
                      }
                    }
                  properties:
                    jobIds:
                      type: array
                      description: An array of job IDs to schedule resources for
                      items:
                        type: string
                    scheduleStart:
                      type: string
                      format: date-time
                      description: >-
                        Can be either ISO8601 date time string or Unix timestamp
                        number ( in milliseconds ). Always returned in ISO8601
                        format.
                    scheduleEnd:
                      type: string
                      format: date-time
                      description: >-
                        Can be either ISO8601 date time string or Unix timestamp
                        number ( in milliseconds ). Always returned in ISO8601
                        format.
                    timeZone:
                      type: string
                    schedulingOptions:
                      type: object
                      properties:
                        balanceWorkload:
                          type: boolean
                          default: false
                          description: >-
                            Equalize total allocated duration including travel
                            time for each resource.
                        minimizeResources:
                          type: boolean
                          default: false
                          description: >-
                            Attempt to allocate to the fewest number of
                            resources in a scheduling window.
                        jobTimeAsTimeConstraint:
                          type: boolean
                          default: true
                          description: >-
                            When a job has a time set, consider it to be a time
                            constraint and never re-schedule to another time
                            slot.
                        preferJobTimeOverTimeConstraint:
                          type: boolean
                          default: true
                          description: >-
                            When a job with a JobTimeConstraint also has a time
                            set, consider the job time as the authoritative
                            constraint and ignore the JobTimeConstraint.
                        respectSchedule:
                          type: boolean
                          default: true
                          description: >-
                            For a job that is allocated and in "Pending
                            Dispatch" status, do not move the job to a different
                            time.
                        ignoreTravelTimes:
                          type: boolean
                          default: false
                          description: Ignore all travel times between resources and jobs.
                        ignoreTravelTimeFirstJob:
                          type: boolean
                          default: false
                          description: >-
                            Ignore travel time from a resource' home location to
                            the first job.
                        ignoreTravelTimeLastJob:
                          type: boolean
                          default: false
                          description: >-
                            Ignore travel time to the resource' home location
                            from the last job.
                        assumeResourceCanTravelBeforeStart:
                          type: boolean
                          default: false
                          description: >-
                            Ignore travel time to first job when deriving its
                            arrival time however include the travel time when
                            considering overall travel time reduction.
                        assumeResourceCanTravelAfterEnd:
                          type: boolean
                          default: false
                          description: >-
                            Assume that the resource can travel after their end
                            time to get to their end location however include
                            the travel time when considering overall travel time
                            reduction.
                        padding:
                          type: integer
                          default: 0
                          description: A fixed interval of time between consecutive jobs.
                        snapUnit:
                          type: integer
                          default: 0
                          minimum: 0
                          description: >-
                            Divide the given time frame into parts described by
                            this value and allocate all jobs to the nearest
                            part.
                        maxTravelTimeInMinutes:
                          type: integer
                          default: 0
                          minimum: 0
                          description: >-
                            When greater than zero do not schedule nodes whose
                            travel time would exceed this value in minutes.
                    persistenceStrategy:
                      type: string
                      enum:
                        - save
                        - optimize
                      description: >
                        Whether an optimization should persist the results on
                        successful completion.
                  required:
                    - jobIds
                    - resources
                    - scheduleStart
                    - scheduleEnd
                    - timeZone
                    - schedulingOptions
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
      tags:
        - Optimization
      security:
        - BearerAuth: []
  '/optimization/schedule/run/{run_id}/save':
    get:
      operationId: getRunSave
      summary: Get run save
      parameters:
        - name: run_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    oneOf:
                      - allOf:
                          - type: object
                            properties:
                              autoApplied:
                                type: boolean
                              runId:
                                type: string
                                format: uuid
                              meta:
                                type: object
                                properties:
                                  userId:
                                    type: string
                                  date:
                                    type: string
                                    format: date-time
                                    description: >-
                                      Can be either ISO8601 date time string or
                                      Unix timestamp number ( in milliseconds ).
                                      Always returned in ISO8601 format.
                          - type: object
                            properties:
                              state:
                                type: string
                                description: Use 'saved' as value
                              change:
                                type: object
                                properties:
                                  deleteAllocationsIds:
                                    type: array
                                    items:
                                      type: string
                                  insertAllocations:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        resourceId:
                                          type: string
                                        jobId:
                                          type: string
                                        resourceRequirementId:
                                          type: string
                                  updateJobs:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        jobId:
                                          type: string
                                        start:
                                          type: string
                                          format: date-time
                                          description: >-
                                            Can be either ISO8601 date time string
                                            or Unix timestamp number ( in
                                            milliseconds ). Always returned in
                                            ISO8601 format.
                                        end:
                                          type: string
                                          format: date-time
                                          description: >-
                                            Can be either ISO8601 date time string
                                            or Unix timestamp number ( in
                                            milliseconds ). Always returned in
                                            ISO8601 format.
                      - allOf:
                          - type: object
                            properties:
                              autoApplied:
                                type: boolean
                              runId:
                                type: string
                                format: uuid
                              meta:
                                type: object
                                properties:
                                  userId:
                                    type: string
                                  date:
                                    type: string
                                    format: date-time
                                    description: >-
                                      Can be either ISO8601 date time string or
                                      Unix timestamp number ( in milliseconds ).
                                      Always returned in ISO8601 format.
                          - type: object
                            properties:
                              state:
                                type: string
                                description: Use 'rejected' as value
                      - allOf:
                          - type: object
                            properties:
                              autoApplied:
                                type: boolean
                              runId:
                                type: string
                                format: uuid
                              meta:
                                type: object
                                properties:
                                  userId:
                                    type: string
                                  date:
                                    type: string
                                    format: date-time
                                    description: >-
                                      Can be either ISO8601 date time string or
                                      Unix timestamp number ( in milliseconds ).
                                      Always returned in ISO8601 format.
                          - type: object
                            properties:
                              state:
                                type: string
                                description: Use 'error' as value
                              message:
                                type: string
        '404':
          description: Run not found
      tags:
        - Optimization
      security:
        - BearerAuth: []
    post:
      operationId: saveRun
      summary: Save run
      parameters:
        - name: run_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    oneOf:
                      - allOf:
                          - type: object
                            properties:
                              autoApplied:
                                type: boolean
                              runId:
                                type: string
                                format: uuid
                              meta:
                                type: object
                                properties:
                                  userId:
                                    type: string
                                  date:
                                    type: string
                                    format: date-time
                                    description: >-
                                      Can be either ISO8601 date time string or
                                      Unix timestamp number ( in milliseconds ).
                                      Always returned in ISO8601 format.
                          - type: object
                            properties:
                              state:
                                type: string
                                description: Use 'saved' as value
                              change:
                                type: object
                                properties:
                                  deleteAllocationsIds:
                                    type: array
                                    items:
                                      type: string
                                  insertAllocations:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        resourceId:
                                          type: string
                                        jobId:
                                          type: string
                                        resourceRequirementId:
                                          type: string
                                  updateJobs:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        jobId:
                                          type: string
                                        start:
                                          type: string
                                          format: date-time
                                          description: >-
                                            Can be either ISO8601 date time string
                                            or Unix timestamp number ( in
                                            milliseconds ). Always returned in
                                            ISO8601 format.
                                        end:
                                          type: string
                                          format: date-time
                                          description: >-
                                            Can be either ISO8601 date time string
                                            or Unix timestamp number ( in
                                            milliseconds ). Always returned in
                                            ISO8601 format.
                      - allOf:
                          - type: object
                            properties:
                              autoApplied:
                                type: boolean
                              runId:
                                type: string
                                format: uuid
                              meta:
                                type: object
                                properties:
                                  userId:
                                    type: string
                                  date:
                                    type: string
                                    format: date-time
                                    description: >-
                                      Can be either ISO8601 date time string or
                                      Unix timestamp number ( in milliseconds ).
                                      Always returned in ISO8601 format.
                          - type: object
                            properties:
                              state:
                                type: string
                                description: Use 'rejected' as value
                      - allOf:
                          - type: object
                            properties:
                              autoApplied:
                                type: boolean
                              runId:
                                type: string
                                format: uuid
                              meta:
                                type: object
                                properties:
                                  userId:
                                    type: string
                                  date:
                                    type: string
                                    format: date-time
                                    description: >-
                                      Can be either ISO8601 date time string or
                                      Unix timestamp number ( in milliseconds ).
                                      Always returned in ISO8601 format.
                          - type: object
                            properties:
                              state:
                                type: string
                                description: Use 'error' as value
                              message:
                                type: string
      tags:
        - Optimization
      security:
        - BearerAuth: []
  '/optimization/schedule/run/{run_id}/save/reject':
    post:
      operationId: rejectRun
      summary: Reject the run save.
      description: |
        Reject the run save. Saved or failed run cannot be rejected.
      parameters:
        - name: run_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    oneOf:
                      - allOf:
                          - type: object
                            properties:
                              autoApplied:
                                type: boolean
                              runId:
                                type: string
                                format: uuid
                              meta:
                                type: object
                                properties:
                                  userId:
                                    type: string
                                  date:
                                    type: string
                                    format: date-time
                                    description: >-
                                      Can be either ISO8601 date time string or
                                      Unix timestamp number ( in milliseconds ).
                                      Always returned in ISO8601 format.
                          - type: object
                            properties:
                              state:
                                type: string
                                description: Use 'saved' as value
                              change:
                                type: object
                                properties:
                                  deleteAllocationsIds:
                                    type: array
                                    items:
                                      type: string
                                  insertAllocations:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        resourceId:
                                          type: string
                                        jobId:
                                          type: string
                                        resourceRequirementId:
                                          type: string
                                  updateJobs:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        jobId:
                                          type: string
                                        start:
                                          type: string
                                          format: date-time
                                          description: >-
                                            Can be either ISO8601 date time string
                                            or Unix timestamp number ( in
                                            milliseconds ). Always returned in
                                            ISO8601 format.
                                        end:
                                          type: string
                                          format: date-time
                                          description: >-
                                            Can be either ISO8601 date time string
                                            or Unix timestamp number ( in
                                            milliseconds ). Always returned in
                                            ISO8601 format.
                      - allOf:
                          - type: object
                            properties:
                              autoApplied:
                                type: boolean
                              runId:
                                type: string
                                format: uuid
                              meta:
                                type: object
                                properties:
                                  userId:
                                    type: string
                                  date:
                                    type: string
                                    format: date-time
                                    description: >-
                                      Can be either ISO8601 date time string or
                                      Unix timestamp number ( in milliseconds ).
                                      Always returned in ISO8601 format.
                          - type: object
                            properties:
                              state:
                                type: string
                                description: Use 'rejected' as value
                      - allOf:
                          - type: object
                            properties:
                              autoApplied:
                                type: boolean
                              runId:
                                type: string
                                format: uuid
                              meta:
                                type: object
                                properties:
                                  userId:
                                    type: string
                                  date:
                                    type: string
                                    format: date-time
                                    description: >-
                                      Can be either ISO8601 date time string or
                                      Unix timestamp number ( in milliseconds ).
                                      Always returned in ISO8601 format.
                          - type: object
                            properties:
                              state:
                                type: string
                                description: Use 'error' as value
                              message:
                                type: string
      tags:
        - Optimization
      security:
        - BearerAuth: []
  /optimization/run:
    get:
      operationId: getRuns
      summary: Return list of optimization runs
      parameters:
        - name: offset
          in: query
          required: false
          schema:
            type: number
          description: |
            Return results at this record offset.
            NOTE: Mutually exclusive to `after`.
        - name: after
          in: query
          required: false
          schema:
            type: string
          description: |
            Taken from the page result `nextCursor`
            NOTE: Mutually exclusive to `offset`.
        - name: limit
          in: query
          required: false
          schema:
            type: number
        - name: schedule_id
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
              format: uuid
        - name: schedule_ids
          in: query
          required: false
          explode: false
          schema:
            type: array
            items:
              type: string
              format: uuid
        - name: types
          in: query
          required: false
          explode: false
          schema:
            type: array
            items:
              type: string
              enum:
                - one-off
                - batch
        - name: users
          in: query
          required: false
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                required:
                  - paging
                  - result
                properties:
                  paging:
                    type: object
                    required:
                      - limit
                    properties:
                      total:
                        type: integer
                      limit:
                        type: integer
                      nextCursor:
                        type: string
                        description: >
                          Returns an opaque cursor for the "next" page of
                          results.

                          This can be used when sequentially paging over the
                          result instead of having to calculate the next offset.
                  result:
                    type: array
                    items:
                      type: object
                      required:
                        - id
                        - start
                        - status
                        - createdByUserId
                        - label
                      properties:
                        id:
                          type: string
                          format: uuid
                        start:
                          type: string
                          format: date-time
                          description: >-
                            Can be either ISO8601 date time string or Unix
                            timestamp number ( in milliseconds ). Always
                            returned in ISO8601 format.
                        status:
                          type: string
                          enum:
                            - pending
                            - processing
                            - complete
                            - failed
                        completedAt:
                          type: string
                          format: date-time
                          description: >-
                            Can be either ISO8601 date time string or Unix
                            timestamp number ( in milliseconds ). Always
                            returned in ISO8601 format.
                        scheduleId:
                          description: >
                            An optional field that indicates when this run was
                            triggered from a batch schedule.
                          type: string
                          format: uuid
                        createdByUserId:
                          type: string
                        label:
                          type: string
                        summary:
                          type: object
                          required:
                            - totalPlannedJobs
                            - totalScheduledJobs
                          properties:
                            totalPlannedJobs:
                              type: number
                            totalScheduledJobs:
                              type: number
      tags:
        - Optimization
      security:
        - BearerAuth: []
  '/optimization/run/{run_id}':
    get:
      operationId: getOptimizationResult
      summary: Return optimization result
      parameters:
        - name: run_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: optimizedJobsOnly
          in: query
          required: false
          schema:
            type: boolean
            default: false
          description: >-
            The scheduled jobs returned are only the jobs optimized. Jobs that
            are fixed (resource and time) are not returned
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                example: |
                  {
                    "result": {
                        "score": {
                            "hardScore": 0,
                            "mediumScore": -180,
                            "softScore": 0
                        },
                        "timeToSolve": 2013,
                        "routes": [],
                        "unscheduled": [
                            {
                                "jobId": "001406d4-51fd-4da7-8960-1e71429e1974",
                                "jobName": "JOB-0059",
                                "jobReasons": [],
                                "resourceReasons": {
                                    "0005094d-dae5-4cbb-ad7d-db78d3735e21": {
                                        "name": "Test testing",
                                        "address": "79 McLachlan St, Fortitude Valley QLD 4006, Australia",
                                        "reasons": []
                                    }
                                }
                            }
                        ]
                    }
                  }
                properties:
                  result:
                    type: object
                    properties:
                      score:
                        type: object
                        properties:
                          hardScore:
                            type: number
                          mediumScore:
                            type: number
                          softScore:
                            type: number
                      timeToSolve:
                        type: number
                      routes:
                        type: array
                        items:
                          type: object
                          properties:
                            resourceId:
                              type: string
                            resourceName:
                              type: string
                            route:
                              type: array
                              items:
                                type: object
                                properties:
                                  jobId:
                                    type: string
                                  jobName:
                                    type: string
                                  start:
                                    type: string
                                    format: date-time
                                    description: >-
                                      Can be either ISO8601 date time string or
                                      Unix timestamp number ( in milliseconds ).
                                      Always returned in ISO8601 format.
                                  duration:
                                    type: number
                                  travelTime:
                                    type: number
                                  type:
                                    type: string
                      unscheduled:
                        type: array
                        items:
                          type: object
                          properties:
                            jobId:
                              type: string
                            jobName:
                              type: string
                            jobReasons:
                              type: array
                              items:
                                type: string
                            resourceReasons:
                              type: object
                              additionalProperties:
                                type: object
                                properties:
                                  name:
                                    type: string
                                  address:
                                    type: string
                                  reasons:
                                    type: array
                                    items:
                                      type: string
        '409':
          description: Error
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    description: 'Optimization is still running, try again.'
                    properties:
                      errorType:
                        type: string
                        enum:
                          - optimization_running
                      message:
                        type: string
                  - type: object
                    description: Optimization has failed
                    properties:
                      errorType:
                        type: string
                        enum:
                          - optimization_error
                      message:
                        type: string
      tags:
        - Optimization
      security:
        - BearerAuth: []
  /graphql:
    post:
      security:
        - Authorization: []
      summary: GraphQL queries and mutations
      description: >-
        Run queries and mutations against the schema using the
        `/graphql/graphql` endpoint. 


        Queries and mutations are `POST` operations with a GraphQL payload that
        defines shape of the query or mutation you want to make against the
        schema. A mutation with multiple operations is executed as an atomic
        transaction.


        The response may include standard Skedulo objects and custom objects and
        fields you have defined.


        To improve the performance of query operations on Skedulo Platform, set
        the header X-Skedulo-Read-Only=true. This will execute against a read
        replica database and will produce an error if any write operation is
        attempted. Beware of race conditions - there may be a small delay
        between a write being executed and the data being available on the read
        replica.
      operationId: graphql
      responses:
        '200':
          description: Query or Mutation result was returned
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    description: Query or mutation result.
                    additionalProperties: true
                  errors:
                    type: array
                    items:
                      type: object
                      description: errors
                      properties:
                        message:
                          type: string
                          description: Error message.
                        location:
                          type: object
                          properties:
                            line:
                              type: string
                              description: Line Number
                            column:
                              type: string
                              description: Column number
        '400':
          description: >-
            Query or Mutation failed, an error is returned.  The `data` property
            will be null in this case.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    description: Query or mutation result.
                    additionalProperties: true
                  errors:
                    type: array
                    items:
                      type: object
                      description: errors
                      properties:
                        message:
                          type: string
                          description: Error message.
                        location:
                          type: object
                          properties:
                            line:
                              type: string
                              description: Line Number
                            column:
                              type: string
                              description: Column number
        '401':
          description: Authentication/Authorization failed
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
                  errorId:
                    type: string
        default:
          description: Error
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
                  errorId:
                    type: string
      tags:
        - GraphQL
  /graphql/batch:
    post:
      security:
        - Authorization: []
      summary: Make batch queries and mutations using GraphQL.
      description: >-
        GraphQL batching involves sending multiple queries or mutations to the
        server in a single request. This reduces the number of server round
        trips to fetch data, which makes interaction more efficient. 


        See https://blog.apollographql.com/query-batching-in-apollo-63acfd859862
        for more information
      operationId: graphqlBatch
      responses:
        '200':
          description: An array of Query or Mutation results corresponding to the input
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    data:
                      type: object
                      description: Query or mutation result.
                      additionalProperties: true
                    errors:
                      type: array
                      items:
                        type: object
                        description: errors
                        properties:
                          message:
                            type: string
                            description: Error message.
                          location:
                            type: object
                            properties:
                              line:
                                type: string
                                description: Line Number
                              column:
                                type: string
                                description: Column number
        '401':
          description: Authentication/Authorization failed
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
                  errorId:
                    type: string
        default:
          description: Error
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
                  errorId:
                    type: string
      tags:
        - GraphQL
  /subscriptions:
    get:
      security:
        - Authorization: []
      summary: GraphQL Subscriptions
      description: >-
        GraphQL Subscriptions via Apollo `graphql-ws` protocol. 


        * Your tenant must have an API user. 


        * You must be a 'Scheduler' or 'Administrator'. 


        The `Authorization` header must be passed in the `connection_init`
        message.
      operationId: graphqlSubscriptions
      responses:
        '101':
          description: WebSocket connection succeeded
          content:
            '*/*':
              schema:
                type: object
                properties:
                  data:
                    type: object
                    description: Query or mutation result.
                    additionalProperties: true
                  errors:
                    type: array
                    items:
                      type: object
                      description: errors
                      properties:
                        message:
                          type: string
                          description: Error message.
                        location:
                          type: object
                          properties:
                            line:
                              type: string
                              description: Line Number
                            column:
                              type: string
                              description: Column number
        '400':
          description: If the WebSocket protocol was not 'graphql-ws'
          content:
            '*/*':
              schema:
                type: object
                properties:
                  data:
                    type: object
                    description: Query or mutation result.
                    additionalProperties: true
                  errors:
                    type: array
                    items:
                      type: object
                      description: errors
                      properties:
                        message:
                          type: string
                          description: Error message.
                        location:
                          type: object
                          properties:
                            line:
                              type: string
                              description: Line Number
                            column:
                              type: string
                              description: Column number
        default:
          description: Error
          content:
            '*/*':
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
                  errorId:
                    type: string
      tags:
        - GraphQL
  /schema:
    get:
      security:
        - Authorization: []
      summary: Skedulo GraphQL schema
      description: 'Retrieve the Skedulo GraphQL schema. '
      operationId: graphqlSchema
      responses:
        '200':
          description: Schema was returned
        '401':
          description: Authentication/Authorization failed
          content:
            application/text:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
                  errorId:
                    type: string
        default:
          description: Error
          content:
            application/text:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
                  errorId:
                    type: string
      tags:
        - GraphQL
  /webhooks/graphql:
    post:
      security:
        - Authorization: []
      summary: Webhook GraphQL introspection
      description: >-
        Perform an introspection query against the GraphQL query that is used
        for webhooks with type `graphql`.
      operationId: webhookGraphQLQuery
      responses:
        '200':
          description: Introspection query was returned.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    description: Query result
                    additionalProperties: true
                  errors:
                    type: array
                    items:
                      type: object
                      description: errors
                      properties:
                        message:
                          type: string
                          description: Error message.
                        location:
                          type: object
                          properties:
                            line:
                              type: string
                              description: Line Number
                            column:
                              type: string
                              description: Column number
        '400':
          description: Invalid query
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    description: Query result
                    additionalProperties: true
                  errors:
                    type: array
                    items:
                      type: object
                      description: errors
                      properties:
                        message:
                          type: string
                          description: Error message.
                        location:
                          type: object
                          properties:
                            line:
                              type: string
                              description: Line Number
                            column:
                              type: string
                              description: Column number
        default:
          description: Error
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
                  errorId:
                    type: string
      tags:
        - Webhooks
  /webhooks/deferred/graphql:
    post:
      security:
        - Authorization: []
      summary: Webhook Deferred GraphQL introspection
      description: >-
        Perform an introspection query against the GraphQL query that is used
        for webhooks with type `graphql_deferred`.
      operationId: webhookDeferredGraphQLQuery
      responses:
        '200':
          description: Introspection query was returned.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    description: Query result
                    additionalProperties: true
                  errors:
                    type: array
                    items:
                      type: object
                      description: errors
                      properties:
                        message:
                          type: string
                          description: Error message.
                        location:
                          type: object
                          properties:
                            line:
                              type: string
                              description: Line Number
                            column:
                              type: string
                              description: Column number
        '400':
          description: Invalid query
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    description: Query result
                    additionalProperties: true
                  errors:
                    type: array
                    items:
                      type: object
                      description: errors
                      properties:
                        message:
                          type: string
                          description: Error message.
                        location:
                          type: object
                          properties:
                            line:
                              type: string
                              description: Line Number
                            column:
                              type: string
                              description: Column number
        default:
          description: Error
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
                  errorId:
                    type: string
      tags:
        - Webhooks
  /webhooks:
    get:
      security:
        - Authorization: []
      summary: Fetch webhooks
      description: Fetch all existing webhooks.
      operationId: webhooksFetch
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                required:
                  - result
                properties:
                  result:
                    type: array
                    items:
                      oneOf:
                        - allOf:
                            - type: object
                              required:
                                - id
                                - type
                                - name
                                - url
                                - headers
                              properties:
                                id:
                                  type: string
                                  format: uuid
                                name:
                                  type: string
                                url:
                                  type: string
                                  format: uri
                                  maxLength: 2048
                                headers:
                                  type: object
                                  additionalProperties: true
                          required:
                            - type
                            - query
                          properties:
                            type:
                              type: string
                              enum:
                                - graphql
                            query:
                              type: string
                        - allOf:
                            - type: object
                              required:
                                - id
                                - type
                                - name
                                - url
                                - headers
                              properties:
                                id:
                                  type: string
                                  format: uuid
                                name:
                                  type: string
                                url:
                                  type: string
                                  format: uri
                                  maxLength: 2048
                                headers:
                                  type: object
                                  additionalProperties: true
                          required:
                            - type
                            - name
                            - offset
                            - query
                          properties:
                            type:
                              type: string
                              enum:
                                - graphql_deferred
                            filter:
                              type: string
                            name:
                              type: string
                            offset:
                              oneOf:
                                - type: integer
                                  format: int64
                                - required:
                                    - fieldName
                                  properties:
                                    fieldName:
                                      type: string
                                    default:
                                      type: integer
                                      format: int64
                            query:
                              type: string
                        - allOf:
                            - type: object
                              required:
                                - id
                                - type
                                - name
                                - url
                                - headers
                              properties:
                                id:
                                  type: string
                                  format: uuid
                                name:
                                  type: string
                                url:
                                  type: string
                                  format: uri
                                  maxLength: 2048
                                headers:
                                  type: object
                                  additionalProperties: true
                          required:
                            - type
                            - cron
                          properties:
                            type:
                              type: string
                              enum:
                                - scheduled
                            cron:
                              type: string
                        - allOf:
                            - type: object
                              required:
                                - id
                                - type
                                - name
                                - url
                                - headers
                              properties:
                                id:
                                  type: string
                                  format: uuid
                                name:
                                  type: string
                                url:
                                  type: string
                                  format: uri
                                  maxLength: 2048
                                headers:
                                  type: object
                                  additionalProperties: true
                          required:
                            - type
                          properties:
                            type:
                              type: string
                              enum:
                                - inbound_sms
                      discriminator:
                        propertyName: type
                        mapping:
                          graphql: '#/components/schemas/WebhookGraphQL'
                          graphql_deferred: '#/components/schemas/WebhookGraphQLDeferred'
                          scheduled: '#/components/schemas/WebhookScheduled'
                          inbound_sms: '#/components/schemas/WebhookInboundSMS'
        '403':
          description: If the user is not an administrator
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
                  errorId:
                    type: string
        default:
          description: Error
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
                  errorId:
                    type: string
      tags:
        - Webhooks
    post:
      security:
        - Authorization: []
      summary: Create a new webhook
      description: Establish a new webhook.
      operationId: webhooksCreate
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                required:
                  - result
                properties:
                  result:
                    type: array
                    items:
                      oneOf:
                        - allOf:
                            - type: object
                              required:
                                - id
                                - type
                                - name
                                - url
                                - headers
                              properties:
                                id:
                                  type: string
                                  format: uuid
                                name:
                                  type: string
                                url:
                                  type: string
                                  format: uri
                                  maxLength: 2048
                                headers:
                                  type: object
                                  additionalProperties: true
                          required:
                            - type
                            - query
                          properties:
                            type:
                              type: string
                              enum:
                                - graphql
                            query:
                              type: string
                        - allOf:
                            - type: object
                              required:
                                - id
                                - type
                                - name
                                - url
                                - headers
                              properties:
                                id:
                                  type: string
                                  format: uuid
                                name:
                                  type: string
                                url:
                                  type: string
                                  format: uri
                                  maxLength: 2048
                                headers:
                                  type: object
                                  additionalProperties: true
                          required:
                            - type
                            - name
                            - offset
                            - query
                          properties:
                            type:
                              type: string
                              enum:
                                - graphql_deferred
                            filter:
                              type: string
                            name:
                              type: string
                            offset:
                              oneOf:
                                - type: integer
                                  format: int64
                                - required:
                                    - fieldName
                                  properties:
                                    fieldName:
                                      type: string
                                    default:
                                      type: integer
                                      format: int64
                            query:
                              type: string
                        - allOf:
                            - type: object
                              required:
                                - id
                                - type
                                - name
                                - url
                                - headers
                              properties:
                                id:
                                  type: string
                                  format: uuid
                                name:
                                  type: string
                                url:
                                  type: string
                                  format: uri
                                  maxLength: 2048
                                headers:
                                  type: object
                                  additionalProperties: true
                          required:
                            - type
                            - cron
                          properties:
                            type:
                              type: string
                              enum:
                                - scheduled
                            cron:
                              type: string
                        - allOf:
                            - type: object
                              required:
                                - id
                                - type
                                - name
                                - url
                                - headers
                              properties:
                                id:
                                  type: string
                                  format: uuid
                                name:
                                  type: string
                                url:
                                  type: string
                                  format: uri
                                  maxLength: 2048
                                headers:
                                  type: object
                                  additionalProperties: true
                          required:
                            - type
                          properties:
                            type:
                              type: string
                              enum:
                                - inbound_sms
                      discriminator:
                        propertyName: type
                        mapping:
                          graphql: '#/components/schemas/WebhookGraphQL'
                          graphql_deferred: '#/components/schemas/WebhookGraphQLDeferred'
                          scheduled: '#/components/schemas/WebhookScheduled'
                          inbound_sms: '#/components/schemas/WebhookInboundSMS'
        '403':
          description: If the user is not an administrator.
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
                  errorId:
                    type: string
        default:
          description: Error
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
                  errorId:
                    type: string
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - allOf:
                    - type: object
                      required:
                        - id
                        - type
                        - name
                        - url
                        - headers
                      properties:
                        id:
                          type: string
                          format: uuid
                        name:
                          type: string
                        url:
                          type: string
                          format: uri
                          maxLength: 2048
                        headers:
                          type: object
                          additionalProperties: true
                  required:
                    - type
                    - query
                  properties:
                    type:
                      type: string
                      enum:
                        - graphql
                    query:
                      type: string
                - allOf:
                    - type: object
                      required:
                        - id
                        - type
                        - name
                        - url
                        - headers
                      properties:
                        id:
                          type: string
                          format: uuid
                        name:
                          type: string
                        url:
                          type: string
                          format: uri
                          maxLength: 2048
                        headers:
                          type: object
                          additionalProperties: true
                  required:
                    - type
                    - name
                    - offset
                    - query
                  properties:
                    type:
                      type: string
                      enum:
                        - graphql_deferred
                    filter:
                      type: string
                    name:
                      type: string
                    offset:
                      oneOf:
                        - type: integer
                          format: int64
                        - required:
                            - fieldName
                          properties:
                            fieldName:
                              type: string
                            default:
                              type: integer
                              format: int64
                    query:
                      type: string
                - allOf:
                    - type: object
                      required:
                        - id
                        - type
                        - name
                        - url
                        - headers
                      properties:
                        id:
                          type: string
                          format: uuid
                        name:
                          type: string
                        url:
                          type: string
                          format: uri
                          maxLength: 2048
                        headers:
                          type: object
                          additionalProperties: true
                  required:
                    - type
                    - cron
                  properties:
                    type:
                      type: string
                      enum:
                        - scheduled
                    cron:
                      type: string
                - allOf:
                    - type: object
                      required:
                        - id
                        - type
                        - name
                        - url
                        - headers
                      properties:
                        id:
                          type: string
                          format: uuid
                        name:
                          type: string
                        url:
                          type: string
                          format: uri
                          maxLength: 2048
                        headers:
                          type: object
                          additionalProperties: true
                  required:
                    - type
                  properties:
                    type:
                      type: string
                      enum:
                        - inbound_sms
              discriminator:
                propertyName: type
                mapping:
                  graphql: '#/components/schemas/WebhookGraphQL'
                  graphql_deferred: '#/components/schemas/WebhookGraphQLDeferred'
                  scheduled: '#/components/schemas/WebhookScheduled'
                  inbound_sms: '#/components/schemas/WebhookInboundSMS'
        required: true
      tags:
        - Webhooks
  '/webhooks/{id}':
    delete:
      security:
        - Authorization: []
      summary: Delete a webhook
      description: Delete a webhook using the webhook ID.
      operationId: webhooksDelete
      parameters:
        - name: id
          in: path
          description: Identifier of the webhook to delete.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: success
        '403':
          description: If the user is not an administrator.
          content:
            '*/*':
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
                  errorId:
                    type: string
        default:
          description: Error
          content:
            '*/*':
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
                  errorId:
                    type: string
      tags:
        - Webhooks
  /triggered_actions:
    get:
      security:
        - Authorization: []
      summary: Return all active triggered actions
      operationId: triggeredActionsFetch
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                required:
                  - result
                properties:
                  result:
                    type: array
                    items:
                      type: object
                      required:
                        - id
                        - name
                        - trigger
                        - action
                        - created
                        - updated
                        - enabled
                      properties:
                        id:
                          type: string
                          format: uuid
                        name:
                          type: string
                        trigger:
                          oneOf:
                            - allOf:
                                - type: object
                                  required:
                                    - type
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - object_modified
                                        - event
                              type: object
                              required:
                                - schemaName
                                - filter
                              properties:
                                schemaName:
                                  type: string
                                filter:
                                  type: string
                                  description: >-
                                    An EQL filter that has access to the
                                    `Current` and `Previous` values along with
                                    the `Operation`
                                deferred:
                                  description: >-
                                    An optional field to support scheduling the
                                    trigger at a later date based on the object
                                    itself
                                  type: object
                                  required:
                                    - fieldName
                                    - offset
                                  properties:
                                    fieldName:
                                      description: >-
                                        A time field on the schema which
                                        determines when the deferred task will
                                        run
                                      type: string
                                    offset:
                                      oneOf:
                                        - type: integer
                                          format: int64
                                          description: >-
                                            An offset that is applied to the time
                                            field (in milliseconds)
                                        - required:
                                            - fieldName
                                          properties:
                                            fieldName:
                                              type: string
                                              description: >-
                                                The name of a field that has a type of
                                                Int, Decimal or Duration
                                            default:
                                              type: integer
                                              format: int64
                                              description: >-
                                                A default value to use as the offset if
                                                the field has no value
                            - allOf:
                                - type: object
                                  required:
                                    - type
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - object_modified
                                        - event
                              type: object
                              properties:
                                typesFilter:
                                  type: array
                                  items:
                                    type: string
                                    description: Event type name.
                                  description: >-
                                    Legacy event type filter that contains the
                                    list of accepted event types.
                                  deprecated: true
                                filter:
                                  type: string
                                  description: >-
                                    An EQL-like filter that has access to the
                                    top-level fields of the event JSON.


                                    Only equality checks and `AND` expressions
                                    are supported currently (and no
                                    parentheses). Left-hand values are names of
                                    top-level JSON fields, right-hand values
                                    must be valid JSON values, with the
                                    difference that strings are enclosed in
                                    single-quotes and escaping is not supported.


                                    Example filter that checks if the top-level
                                    `type` and `taskType` fields in the event
                                    JSON match the specified values:


                                    `type == 'async_task_completed' AND taskType
                                    == 'apply_schedule_template'`
                          discriminator:
                            propertyName: type
                            mapping:
                              object_modified: '#/components/schemas/TriggerObjectModified'
                              event: '#/components/schemas/TriggerEvent'
                        action:
                          oneOf:
                            - allOf:
                                - type: object
                                  required:
                                    - type
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - call_url
                                        - send_sms
                              type: object
                              required:
                                - url
                                - headers
                                - query
                              properties:
                                url:
                                  type: string
                                  format: uri
                                  maxLength: 2048
                                  description: Must be a HTTPS URL
                                headers:
                                  type: object
                                  additionalProperties:
                                    type: string
                                  description: >-
                                    A map of headers that are sent for each
                                    request
                                  example:
                                    My-Auth-Header: my_secret_token
                                query:
                                  type: string
                                  description: >-
                                    A GraphQL query block that contains the
                                    structure of the data that will be returned
                                  example: |-
                                    {
                                      Name
                                      Contact {
                                        FullName
                                      }
                                    }
                            - allOf:
                                - type: object
                                  required:
                                    - type
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - call_url
                                        - send_sms
                              type: object
                              required:
                                - to
                                - template
                              properties:
                                to:
                                  type: object
                                  properties: {}
                                template:
                                  type: string
                                  description: >-
                                    A mustache template that allows EQL field
                                    names as variables. Values can reference
                                    fields defined on lookups.
                                  example: >-
                                    For a job: {{ Name }} {{
                                    Job.Contact.FullName }}
                          discriminator:
                            propertyName: type
                            mapping:
                              call_url: '#/components/schemas/ActionCallUrl'
                              send_sms: '#/components/schemas/ActionSendSMS'
                        created:
                          type: string
                          format: date-time
                        updated:
                          type: string
                          format: date-time
                        customFields:
                          type: object
                          description: >-
                            Custom fields as key-value pairs; only set for
                            object_modified triggers.
                        enabled:
                          type: boolean
        '403':
          description: If the user is not an administrator
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
                  errorId:
                    type: string
        default:
          description: Error
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
                  errorId:
                    type: string
      tags:
        - Triggered actions
    post:
      security:
        - Authorization: []
      summary: Create a new triggered action
      operationId: triggeredActionCreate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - trigger
                - action
              properties:
                name:
                  type: string
                  maxLength: 255
                trigger:
                  oneOf:
                    - allOf:
                        - type: object
                          required:
                            - type
                          properties:
                            type:
                              type: string
                              enum:
                                - object_modified
                                - event
                      type: object
                      required:
                        - schemaName
                        - filter
                      properties:
                        schemaName:
                          type: string
                        filter:
                          type: string
                          description: >-
                            An EQL filter that has access to the `Current` and
                            `Previous` values along with the `Operation`
                        deferred:
                          description: >-
                            An optional field to support scheduling the trigger
                            at a later date based on the object itself
                          type: object
                          required:
                            - fieldName
                            - offset
                          properties:
                            fieldName:
                              description: >-
                                A time field on the schema which determines when
                                the deferred task will run
                              type: string
                            offset:
                              oneOf:
                                - type: integer
                                  format: int64
                                  description: >-
                                    An offset that is applied to the time field
                                    (in milliseconds)
                                - required:
                                    - fieldName
                                  properties:
                                    fieldName:
                                      type: string
                                      description: >-
                                        The name of a field that has a type of
                                        Int, Decimal or Duration
                                    default:
                                      type: integer
                                      format: int64
                                      description: >-
                                        A default value to use as the offset if
                                        the field has no value
                    - allOf:
                        - type: object
                          required:
                            - type
                          properties:
                            type:
                              type: string
                              enum:
                                - object_modified
                                - event
                      type: object
                      properties:
                        typesFilter:
                          type: array
                          items:
                            type: string
                            description: Event type name.
                          description: >-
                            Legacy event type filter that contains the list of
                            accepted event types.
                          deprecated: true
                        filter:
                          type: string
                          description: >-
                            An EQL-like filter that has access to the top-level
                            fields of the event JSON.


                            Only equality checks and `AND` expressions are
                            supported currently (and no parentheses). Left-hand
                            values are names of top-level JSON fields,
                            right-hand values must be valid JSON values, with
                            the difference that strings are enclosed in
                            single-quotes and escaping is not supported.


                            Example filter that checks if the top-level `type`
                            and `taskType` fields in the event JSON match the
                            specified values:


                            `type == 'async_task_completed' AND taskType ==
                            'apply_schedule_template'`
                  discriminator:
                    propertyName: type
                    mapping:
                      object_modified: '#/components/schemas/TriggerObjectModified'
                      event: '#/components/schemas/TriggerEvent'
                action:
                  oneOf:
                    - allOf:
                        - type: object
                          required:
                            - type
                          properties:
                            type:
                              type: string
                              enum:
                                - call_url
                                - send_sms
                      type: object
                      required:
                        - url
                        - headers
                        - query
                      properties:
                        url:
                          type: string
                          format: uri
                          maxLength: 2048
                          description: Must be a HTTPS URL
                        headers:
                          type: object
                          additionalProperties:
                            type: string
                          description: A map of headers that are sent for each request
                          example:
                            My-Auth-Header: my_secret_token
                        query:
                          type: string
                          description: >-
                            A GraphQL query block that contains the structure of
                            the data that will be returned
                          example: |-
                            {
                              Name
                              Contact {
                                FullName
                              }
                            }
                    - allOf:
                        - type: object
                          required:
                            - type
                          properties:
                            type:
                              type: string
                              enum:
                                - call_url
                                - send_sms
                      type: object
                      required:
                        - to
                        - template
                      properties:
                        to:
                          type: object
                          properties: {}
                        template:
                          type: string
                          description: >-
                            A mustache template that allows EQL field names as
                            variables. Values can reference fields defined on
                            lookups.
                          example: 'For a job: {{ Name }} {{ Job.Contact.FullName }}'
                  discriminator:
                    propertyName: type
                    mapping:
                      call_url: '#/components/schemas/ActionCallUrl'
                      send_sms: '#/components/schemas/ActionSendSMS'
                enabled:
                  type: boolean
        required: true
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                required:
                  - result
                properties:
                  result:
                    type: object
                    required:
                      - id
                      - name
                      - trigger
                      - action
                      - created
                      - updated
                      - enabled
                    properties:
                      id:
                        type: string
                        format: uuid
                      name:
                        type: string
                      trigger:
                        oneOf:
                          - allOf:
                              - type: object
                                required:
                                  - type
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - object_modified
                                      - event
                            type: object
                            required:
                              - schemaName
                              - filter
                            properties:
                              schemaName:
                                type: string
                              filter:
                                type: string
                                description: >-
                                  An EQL filter that has access to the `Current`
                                  and `Previous` values along with the
                                  `Operation`
                              deferred:
                                description: >-
                                  An optional field to support scheduling the
                                  trigger at a later date based on the object
                                  itself
                                type: object
                                required:
                                  - fieldName
                                  - offset
                                properties:
                                  fieldName:
                                    description: >-
                                      A time field on the schema which
                                      determines when the deferred task will run
                                    type: string
                                  offset:
                                    oneOf:
                                      - type: integer
                                        format: int64
                                        description: >-
                                          An offset that is applied to the time
                                          field (in milliseconds)
                                      - required:
                                          - fieldName
                                        properties:
                                          fieldName:
                                            type: string
                                            description: >-
                                              The name of a field that has a type of
                                              Int, Decimal or Duration
                                          default:
                                            type: integer
                                            format: int64
                                            description: >-
                                              A default value to use as the offset if
                                              the field has no value
                          - allOf:
                              - type: object
                                required:
                                  - type
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - object_modified
                                      - event
                            type: object
                            properties:
                              typesFilter:
                                type: array
                                items:
                                  type: string
                                  description: Event type name.
                                description: >-
                                  Legacy event type filter that contains the
                                  list of accepted event types.
                                deprecated: true
                              filter:
                                type: string
                                description: >-
                                  An EQL-like filter that has access to the
                                  top-level fields of the event JSON.


                                  Only equality checks and `AND` expressions are
                                  supported currently (and no parentheses).
                                  Left-hand values are names of top-level JSON
                                  fields, right-hand values must be valid JSON
                                  values, with the difference that strings are
                                  enclosed in single-quotes and escaping is not
                                  supported.


                                  Example filter that checks if the top-level
                                  `type` and `taskType` fields in the event JSON
                                  match the specified values:


                                  `type == 'async_task_completed' AND taskType
                                  == 'apply_schedule_template'`
                        discriminator:
                          propertyName: type
                          mapping:
                            object_modified: '#/components/schemas/TriggerObjectModified'
                            event: '#/components/schemas/TriggerEvent'
                      action:
                        oneOf:
                          - allOf:
                              - type: object
                                required:
                                  - type
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - call_url
                                      - send_sms
                            type: object
                            required:
                              - url
                              - headers
                              - query
                            properties:
                              url:
                                type: string
                                format: uri
                                maxLength: 2048
                                description: Must be a HTTPS URL
                              headers:
                                type: object
                                additionalProperties:
                                  type: string
                                description: >-
                                  A map of headers that are sent for each
                                  request
                                example:
                                  My-Auth-Header: my_secret_token
                              query:
                                type: string
                                description: >-
                                  A GraphQL query block that contains the
                                  structure of the data that will be returned
                                example: |-
                                  {
                                    Name
                                    Contact {
                                      FullName
                                    }
                                  }
                          - allOf:
                              - type: object
                                required:
                                  - type
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - call_url
                                      - send_sms
                            type: object
                            required:
                              - to
                              - template
                            properties:
                              to:
                                type: object
                                properties: {}
                              template:
                                type: string
                                description: >-
                                  A mustache template that allows EQL field
                                  names as variables. Values can reference
                                  fields defined on lookups.
                                example: >-
                                  For a job: {{ Name }} {{ Job.Contact.FullName
                                  }}
                        discriminator:
                          propertyName: type
                          mapping:
                            call_url: '#/components/schemas/ActionCallUrl'
                            send_sms: '#/components/schemas/ActionSendSMS'
                      created:
                        type: string
                        format: date-time
                      updated:
                        type: string
                        format: date-time
                      customFields:
                        type: object
                        description: >-
                          Custom fields as key-value pairs; only set for
                          object_modified triggers.
                      enabled:
                        type: boolean
        '400':
          description: If the changes do not pass validation
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
                  errorId:
                    type: string
        '403':
          description: If the user is not an administrator
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
                  errorId:
                    type: string
        default:
          description: Error
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
                  errorId:
                    type: string
      tags:
        - Triggered actions
  '/triggered_actions/{id}':
    patch:
      security:
        - Authorization: []
      summary: Update an existing triggered action
      description: Note that the type of the trigger and the action cannot be changed.
      operationId: triggeredActionUpdate
      parameters:
        - name: id
          in: path
          description: Identifier of the triggered action to update
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  maxLength: 255
                  nullable: true
                trigger:
                  oneOf:
                    - allOf:
                        - type: object
                          required:
                            - type
                          properties:
                            type:
                              type: string
                              enum:
                                - object_modified
                                - event
                      type: object
                      required:
                        - schemaName
                        - filter
                      properties:
                        schemaName:
                          type: string
                        filter:
                          type: string
                          description: >-
                            An EQL filter that has access to the `Current` and
                            `Previous` values along with the `Operation`
                        deferred:
                          description: >-
                            An optional field to support scheduling the trigger
                            at a later date based on the object itself
                          type: object
                          required:
                            - fieldName
                            - offset
                          properties:
                            fieldName:
                              description: >-
                                A time field on the schema which determines when
                                the deferred task will run
                              type: string
                            offset:
                              oneOf:
                                - type: integer
                                  format: int64
                                  description: >-
                                    An offset that is applied to the time field
                                    (in milliseconds)
                                - required:
                                    - fieldName
                                  properties:
                                    fieldName:
                                      type: string
                                      description: >-
                                        The name of a field that has a type of
                                        Int, Decimal or Duration
                                    default:
                                      type: integer
                                      format: int64
                                      description: >-
                                        A default value to use as the offset if
                                        the field has no value
                    - allOf:
                        - type: object
                          required:
                            - type
                          properties:
                            type:
                              type: string
                              enum:
                                - object_modified
                                - event
                      type: object
                      properties:
                        typesFilter:
                          type: array
                          items:
                            type: string
                            description: Event type name.
                          description: >-
                            Legacy event type filter that contains the list of
                            accepted event types.
                          deprecated: true
                        filter:
                          type: string
                          description: >-
                            An EQL-like filter that has access to the top-level
                            fields of the event JSON.


                            Only equality checks and `AND` expressions are
                            supported currently (and no parentheses). Left-hand
                            values are names of top-level JSON fields,
                            right-hand values must be valid JSON values, with
                            the difference that strings are enclosed in
                            single-quotes and escaping is not supported.


                            Example filter that checks if the top-level `type`
                            and `taskType` fields in the event JSON match the
                            specified values:


                            `type == 'async_task_completed' AND taskType ==
                            'apply_schedule_template'`
                  discriminator:
                    propertyName: type
                    mapping:
                      object_modified: '#/components/schemas/TriggerObjectModified'
                      event: '#/components/schemas/TriggerEvent'
                action:
                  oneOf:
                    - allOf:
                        - type: object
                          required:
                            - type
                          properties:
                            type:
                              type: string
                              enum:
                                - call_url
                                - send_sms
                      type: object
                      required:
                        - url
                        - headers
                        - query
                      properties:
                        url:
                          type: string
                          format: uri
                          maxLength: 2048
                          description: Must be a HTTPS URL
                        headers:
                          type: object
                          additionalProperties:
                            type: string
                          description: A map of headers that are sent for each request
                          example:
                            My-Auth-Header: my_secret_token
                        query:
                          type: string
                          description: >-
                            A GraphQL query block that contains the structure of
                            the data that will be returned
                          example: |-
                            {
                              Name
                              Contact {
                                FullName
                              }
                            }
                    - allOf:
                        - type: object
                          required:
                            - type
                          properties:
                            type:
                              type: string
                              enum:
                                - call_url
                                - send_sms
                      type: object
                      required:
                        - to
                        - template
                      properties:
                        to:
                          type: object
                          properties: {}
                        template:
                          type: string
                          description: >-
                            A mustache template that allows EQL field names as
                            variables. Values can reference fields defined on
                            lookups.
                          example: 'For a job: {{ Name }} {{ Job.Contact.FullName }}'
                  discriminator:
                    propertyName: type
                    mapping:
                      call_url: '#/components/schemas/ActionCallUrl'
                      send_sms: '#/components/schemas/ActionSendSMS'
                enabled:
                  type: boolean
        required: true
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                required:
                  - result
                properties:
                  result:
                    type: object
                    required:
                      - id
                      - name
                      - trigger
                      - action
                      - created
                      - updated
                      - enabled
                    properties:
                      id:
                        type: string
                        format: uuid
                      name:
                        type: string
                      trigger:
                        oneOf:
                          - allOf:
                              - type: object
                                required:
                                  - type
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - object_modified
                                      - event
                            type: object
                            required:
                              - schemaName
                              - filter
                            properties:
                              schemaName:
                                type: string
                              filter:
                                type: string
                                description: >-
                                  An EQL filter that has access to the `Current`
                                  and `Previous` values along with the
                                  `Operation`
                              deferred:
                                description: >-
                                  An optional field to support scheduling the
                                  trigger at a later date based on the object
                                  itself
                                type: object
                                required:
                                  - fieldName
                                  - offset
                                properties:
                                  fieldName:
                                    description: >-
                                      A time field on the schema which
                                      determines when the deferred task will run
                                    type: string
                                  offset:
                                    oneOf:
                                      - type: integer
                                        format: int64
                                        description: >-
                                          An offset that is applied to the time
                                          field (in milliseconds)
                                      - required:
                                          - fieldName
                                        properties:
                                          fieldName:
                                            type: string
                                            description: >-
                                              The name of a field that has a type of
                                              Int, Decimal or Duration
                                          default:
                                            type: integer
                                            format: int64
                                            description: >-
                                              A default value to use as the offset if
                                              the field has no value
                          - allOf:
                              - type: object
                                required:
                                  - type
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - object_modified
                                      - event
                            type: object
                            properties:
                              typesFilter:
                                type: array
                                items:
                                  type: string
                                  description: Event type name.
                                description: >-
                                  Legacy event type filter that contains the
                                  list of accepted event types.
                                deprecated: true
                              filter:
                                type: string
                                description: >-
                                  An EQL-like filter that has access to the
                                  top-level fields of the event JSON.


                                  Only equality checks and `AND` expressions are
                                  supported currently (and no parentheses).
                                  Left-hand values are names of top-level JSON
                                  fields, right-hand values must be valid JSON
                                  values, with the difference that strings are
                                  enclosed in single-quotes and escaping is not
                                  supported.


                                  Example filter that checks if the top-level
                                  `type` and `taskType` fields in the event JSON
                                  match the specified values:


                                  `type == 'async_task_completed' AND taskType
                                  == 'apply_schedule_template'`
                        discriminator:
                          propertyName: type
                          mapping:
                            object_modified: '#/components/schemas/TriggerObjectModified'
                            event: '#/components/schemas/TriggerEvent'
                      action:
                        oneOf:
                          - allOf:
                              - type: object
                                required:
                                  - type
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - call_url
                                      - send_sms
                            type: object
                            required:
                              - url
                              - headers
                              - query
                            properties:
                              url:
                                type: string
                                format: uri
                                maxLength: 2048
                                description: Must be a HTTPS URL
                              headers:
                                type: object
                                additionalProperties:
                                  type: string
                                description: >-
                                  A map of headers that are sent for each
                                  request
                                example:
                                  My-Auth-Header: my_secret_token
                              query:
                                type: string
                                description: >-
                                  A GraphQL query block that contains the
                                  structure of the data that will be returned
                                example: |-
                                  {
                                    Name
                                    Contact {
                                      FullName
                                    }
                                  }
                          - allOf:
                              - type: object
                                required:
                                  - type
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - call_url
                                      - send_sms
                            type: object
                            required:
                              - to
                              - template
                            properties:
                              to:
                                type: object
                                properties: {}
                              template:
                                type: string
                                description: >-
                                  A mustache template that allows EQL field
                                  names as variables. Values can reference
                                  fields defined on lookups.
                                example: >-
                                  For a job: {{ Name }} {{ Job.Contact.FullName
                                  }}
                        discriminator:
                          propertyName: type
                          mapping:
                            call_url: '#/components/schemas/ActionCallUrl'
                            send_sms: '#/components/schemas/ActionSendSMS'
                      created:
                        type: string
                        format: date-time
                      updated:
                        type: string
                        format: date-time
                      customFields:
                        type: object
                        description: >-
                          Custom fields as key-value pairs; only set for
                          object_modified triggers.
                      enabled:
                        type: boolean
        '400':
          description: If the changes do not pass validation
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
                  errorId:
                    type: string
        '403':
          description: If the user is not an administrator
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
                  errorId:
                    type: string
        '404':
          description: If there is no triggered action with the given id
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
                  errorId:
                    type: string
        default:
          description: Error
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
                  errorId:
                    type: string
      tags:
        - Triggered actions
    delete:
      security:
        - Authorization: []
      summary: Delete a triggered action
      operationId: triggeredActionDelete
      parameters:
        - name: id
          in: path
          description: Identifier of the triggered action to delete
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: success
        '403':
          description: If the user is not an administrator
          content:
            '*/*':
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
                  errorId:
                    type: string
        default:
          description: Error
          content:
            '*/*':
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
                  errorId:
                    type: string
      tags:
        - Triggered actions
  /triggered_actions/logs:
    summary: Triggered action logs
    get:
      summary: Fetch triggered action logs
      description: >-
        Return the status and details of webhooks and triggered actions. Results
        are ordered by ascending log ID.
      operationId: triggeredActionLogs
      parameters:
        - name: offset
          in: query
          description: Resultset offset used for pagination
          required: false
          schema:
            type: integer
        - name: limit
          in: query
          description: 'Max number of results to return. Default: 200'
          required: false
          schema:
            type: integer
        - name: sourceId
          in: query
          description: Filter to logs caused by this Webhook ID or Triggered Action ID
          required: false
          schema:
            type: string
            format: uuid
        - name: isWebhook
          in: query
          description: >-
            If true, includes only webhook logs. If false, includes only
            triggered action logs. If omitted, includes logs of both types.
          required: false
          schema:
            type: boolean
        - name: updatedFrom
          in: query
          description: Filter to logs updated after this datetime (inclusive)
          required: false
          schema:
            type: string
            format: date-time
        - name: updatedTo
          in: query
          description: Filter to logs updated before this datetime (inclusive)
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                required:
                  - paging
                  - result
                properties:
                  paging:
                    type: object
                    required:
                      - total
                      - limit
                      - offset
                    properties:
                      total:
                        type: integer
                      limit:
                        type: integer
                      offset:
                        type: integer
                  result:
                    type: array
                    items:
                      type: object
                      oneOf:
                        - allOf:
                            - type: object
                              required:
                                - id
                                - tenantId
                                - sourceId
                                - created
                                - data
                                - retry
                                - status
                              properties:
                                id:
                                  type: integer
                                tenantId:
                                  type: string
                                sourceId:
                                  type: string
                                  format: uuid
                                referenceId:
                                  type: integer
                                data:
                                  type: object
                                created:
                                  type: string
                                  format: date-time
                                retry:
                                  type: integer
                                status:
                                  type: string
                          type: object
                          required:
                            - status
                            - startAfter
                          properties:
                            status:
                              type: string
                              enum:
                                - pending
                            startAfter:
                              type: string
                              format: date-time
                        - allOf:
                            - type: object
                              required:
                                - id
                                - tenantId
                                - sourceId
                                - created
                                - data
                                - retry
                                - status
                              properties:
                                id:
                                  type: integer
                                tenantId:
                                  type: string
                                sourceId:
                                  type: string
                                  format: uuid
                                referenceId:
                                  type: integer
                                data:
                                  type: object
                                created:
                                  type: string
                                  format: date-time
                                retry:
                                  type: integer
                                status:
                                  type: string
                          type: object
                          required:
                            - status
                            - started
                          properties:
                            status:
                              type: string
                              enum:
                                - processing
                            started:
                              type: string
                              format: date-time
                        - allOf:
                            - allOf:
                                - type: object
                                  required:
                                    - id
                                    - tenantId
                                    - sourceId
                                    - created
                                    - data
                                    - retry
                                    - status
                                  properties:
                                    id:
                                      type: integer
                                    tenantId:
                                      type: string
                                    sourceId:
                                      type: string
                                      format: uuid
                                    referenceId:
                                      type: integer
                                    data:
                                      type: object
                                    created:
                                      type: string
                                      format: date-time
                                    retry:
                                      type: integer
                                    status:
                                      type: string
                              type: object
                              required:
                                - attempts
                              properties:
                                attempts:
                                  type: array
                                  items:
                                    type: object
                                    required:
                                      - attempted
                                      - error
                                    properties:
                                      attempted:
                                        type: string
                                        format: date-time
                                      error:
                                        type: object
                          type: object
                          required:
                            - status
                            - started
                            - completed
                          properties:
                            status:
                              type: string
                              enum:
                                - success
                            started:
                              type: string
                              format: date-time
                            completed:
                              type: string
                              format: date-time
                        - allOf:
                            - allOf:
                                - type: object
                                  required:
                                    - id
                                    - tenantId
                                    - sourceId
                                    - created
                                    - data
                                    - retry
                                    - status
                                  properties:
                                    id:
                                      type: integer
                                    tenantId:
                                      type: string
                                    sourceId:
                                      type: string
                                      format: uuid
                                    referenceId:
                                      type: integer
                                    data:
                                      type: object
                                    created:
                                      type: string
                                      format: date-time
                                    retry:
                                      type: integer
                                    status:
                                      type: string
                              type: object
                              required:
                                - attempts
                              properties:
                                attempts:
                                  type: array
                                  items:
                                    type: object
                                    required:
                                      - attempted
                                      - error
                                    properties:
                                      attempted:
                                        type: string
                                        format: date-time
                                      error:
                                        type: object
                          type: object
                          required:
                            - status
                            - started
                            - completed
                            - error
                          properties:
                            status:
                              type: string
                              enum:
                                - error
                            started:
                              type: string
                              format: date-time
                            completed:
                              type: string
                              format: date-time
                            error:
                              type: object
                      discriminator:
                        propertyName: status
                        mapping:
                          pending: '#/components/schemas/PendingLog'
                          processing: '#/components/schemas/ProcessingLog'
                          success: '#/components/schemas/SuccessLog'
                          error: '#/components/schemas/ErrorLog'
                      properties:
                        status:
                          type: string
                          enum:
                            - pending
                            - processing
                            - success
                            - error
        '403':
          description: User is not an administrator
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
                  errorId:
                    type: string
        default:
          description: Error
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
                  errorId:
                    type: string
      tags:
        - Triggered actions
  /availability:
    get:
      summary: Fetch resource availability
      description: Fetch resource availability between a time period.
      operationId: getAvailability
      parameters:
        - name: resource_ids
          in: query
          description: >-
            Comma-separated string of resource IDs. There must be at least one
            ID and at most 200.
          required: true
          schema:
            type: string
        - name: start
          in: query
          description: Instant to fetch from.
          required: true
          schema:
            type: string
            format: date-time
        - name: end
          in: query
          description: 'Instant to fetch to, must be after start and within 375 days of it.'
          required: true
          schema:
            type: string
            format: date-time
        - name: availability
          in: query
          description: Should availability be returned
          required: false
          schema:
            type: boolean
            default: false
        - name: unavailability
          in: query
          description: Should unavailability be returned
          required: false
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    description: Key of resource ID to AvailabilityResult.
                    additionalProperties:
                      description: >-
                        `availability` is only returned when the availability
                        query parameter is set to `true` while `unavailability`
                        is only returned when the unavailability query parameter
                        is set to `true`.
                      type: object
                      required:
                        - available
                        - unavailable
                      properties:
                        available:
                          description: >-
                            A flattened list of intervals when the resource is
                            available to work. This is the inverse of
                            unavailable. This will be constructed from either
                            shifts if they are enabled or availability if they
                            are not.
                          type: array
                          items:
                            type: object
                            required:
                              - start
                              - end
                            properties:
                              start:
                                type: string
                                format: date-time
                              end:
                                type: string
                                format: date-time
                        unavailable:
                          description: >-
                            A flattened list of intervals when the resource is
                            unavailable to work. This is the inverse of
                            available.
                          type: array
                          items:
                            type: object
                            required:
                              - start
                              - end
                            properties:
                              start:
                                type: string
                                format: date-time
                              end:
                                type: string
                                format: date-time
                        availability:
                          type: object
                          required:
                            - records
                            - entries
                          properties:
                            records:
                              description: >-
                                An array containing an array of availabilities.
                                Subsequent arrays have higher priority.
                                Availabilities may overlap with themselves and
                                with unavailabilities. Either templates or
                                patterns are returned (but not both) depending
                                on whether the availabilty patterns feature is
                                enabled.
                              type: array
                              items:
                                type: array
                                items:
                                  oneOf:
                                    - allOf:
                                        - type: object
                                          required:
                                            - type
                                            - start
                                            - end
                                            - name
                                          discriminator:
                                            propertyName: type
                                          properties:
                                            type:
                                              type: string
                                              enum:
                                                - template
                                                - pattern
                                                - holiday
                                                - custom
                                            start:
                                              type: string
                                              format: date-time
                                            end:
                                              type: string
                                              format: date-time
                                            name:
                                              type: string
                                      required:
                                        - id
                                        - entryId
                                      properties:
                                        id:
                                          type: string
                                        entryId:
                                          type: string
                                    - allOf:
                                        - type: object
                                          required:
                                            - type
                                            - start
                                            - end
                                            - name
                                          discriminator:
                                            propertyName: type
                                          properties:
                                            type:
                                              type: string
                                              enum:
                                                - template
                                                - pattern
                                                - holiday
                                                - custom
                                            start:
                                              type: string
                                              format: date-time
                                            end:
                                              type: string
                                              format: date-time
                                            name:
                                              type: string
                                      required:
                                        - patternId
                                        - patternResourceId
                                        - name
                                        - description
                                        - patternType
                                      properties:
                                        patternId:
                                          type: string
                                        patternResourceId:
                                          type: string
                                        name:
                                          type: string
                                        description:
                                          type: string
                                        patternType:
                                          type: string
                                          enum:
                                            - custom
                                            - weekly
                                    - allOf:
                                        - type: object
                                          required:
                                            - type
                                            - start
                                            - end
                                            - name
                                          discriminator:
                                            propertyName: type
                                          properties:
                                            type:
                                              type: string
                                              enum:
                                                - template
                                                - pattern
                                                - holiday
                                                - custom
                                            start:
                                              type: string
                                              format: date-time
                                            end:
                                              type: string
                                              format: date-time
                                            name:
                                              type: string
                                    - allOf:
                                        - type: object
                                          required:
                                            - type
                                            - start
                                            - end
                                            - name
                                          discriminator:
                                            propertyName: type
                                          properties:
                                            type:
                                              type: string
                                              enum:
                                                - template
                                                - pattern
                                                - holiday
                                                - custom
                                            start:
                                              type: string
                                              format: date-time
                                            end:
                                              type: string
                                              format: date-time
                                            name:
                                              type: string
                                  discriminator:
                                    propertyName: type
                                    mapping:
                                      template: >-
                                        #/components/schemas/AvailabilityEntryRecordTemplate
                                      pattern: >-
                                        #/components/schemas/AvailabilityEntryRecordPattern
                                      holiday: >-
                                        #/components/schemas/AvailabilityEntryRecordHoliday
                                      custom: >-
                                        #/components/schemas/AvailabilityEntryRecordCustom
                            entries:
                              description: >-
                                Contains untouched availability entries grouped
                                by type and ID. Availabilities may overlap with
                                themselves and also may overlap with an
                                unavailability. Either templates or patterns are
                                returned (but not both) depending on whether the
                                availabilty patterns feature is enabled.
                              type: object
                              required:
                                - holiday
                                - custom
                              properties:
                                template:
                                  type: object
                                  additionalProperties:
                                    allOf:
                                      - type: object
                                        required:
                                          - name
                                        properties:
                                          description:
                                            type: string
                                          name:
                                            type: string
                                    required:
                                      - entries
                                    properties:
                                      start:
                                        type: string
                                        format: date
                                      end:
                                        type: string
                                        format: date
                                      entries:
                                        type: object
                                        additionalProperties:
                                          type: object
                                          required:
                                            - start
                                            - end
                                          properties:
                                            start:
                                              type: string
                                              format: date-time
                                            end:
                                              type: string
                                              format: date-time
                                            weekday:
                                              description: The days of the week
                                              type: string
                                              enum:
                                                - MON
                                                - TUE
                                                - WED
                                                - THU
                                                - FRI
                                                - SAT
                                                - SUN
                                pattern:
                                  type: object
                                  additionalProperties:
                                    allOf:
                                      - type: object
                                        required:
                                          - name
                                        properties:
                                          description:
                                            type: string
                                          name:
                                            type: string
                                    required:
                                      - patternId
                                      - patternResourceId
                                      - patternType
                                    properties:
                                      patternId:
                                        type: string
                                      patternResourceId:
                                        type: string
                                      patternType:
                                        type: string
                                        enum:
                                          - custom
                                          - weekly
                                holiday:
                                  type: object
                                  additionalProperties:
                                    allOf:
                                      - type: object
                                        required:
                                          - name
                                        properties:
                                          description:
                                            type: string
                                          name:
                                            type: string
                                    required:
                                      - start
                                      - end
                                      - name
                                      - global
                                    properties:
                                      start:
                                        type: string
                                        format: date-time
                                      end:
                                        type: string
                                        format: date-time
                                      name:
                                        type: string
                                      global:
                                        type: boolean
                                custom:
                                  type: object
                                  additionalProperties:
                                    allOf:
                                      - type: object
                                        required:
                                          - name
                                        properties:
                                          description:
                                            type: string
                                          name:
                                            type: string
                                    required:
                                      - start
                                      - end
                                      - notes
                                      - createdDate
                                    properties:
                                      start:
                                        type: string
                                        format: date-time
                                      end:
                                        type: string
                                        format: date-time
                                      notes:
                                        type: string
                                      status:
                                        type: string
                                      availabilityType:
                                        type: string
                                      createdDate:
                                        type: string
                                        format: date-time
                        unavailability:
                          type: object
                          required:
                            - defaults
                            - chunks
                            - records
                            - entries
                          properties:
                            defaults:
                              description: >-
                                Returns the times when a resource is unavailable
                                due to no explicit availability or
                                unavailability. These times will never intersect
                                with unavailability entries or with
                                availabilities.
                              type: array
                              items:
                                type: object
                                required:
                                  - start
                                  - end
                                properties:
                                  start:
                                    type: string
                                    format: date-time
                                  end:
                                    type: string
                                    format: date-time
                            chunks:
                              description: >-
                                An array containing an array of
                                unavailabilities. Subsequent arrays have higher
                                priority. Unavailabilities may overlap with
                                themselves but they will never overlap with an
                                availability. Either templates or patterns are
                                returned (but not both) depending on whether the
                                availabilty patterns feature is enabled.
                              type: array
                              items:
                                type: array
                                items:
                                  oneOf:
                                    - allOf:
                                        - type: object
                                          required:
                                            - type
                                            - start
                                            - end
                                          properties:
                                            type:
                                              type: string
                                              enum:
                                                - template
                                                - pattern
                                                - holiday
                                                - custom
                                            start:
                                              type: string
                                              format: date-time
                                            end:
                                              type: string
                                              format: date-time
                                      required:
                                        - id
                                        - entryId
                                        - name
                                      properties:
                                        id:
                                          type: string
                                        entryId:
                                          type: string
                                        name:
                                          type: string
                                    - allOf:
                                        - type: object
                                          required:
                                            - type
                                            - start
                                            - end
                                          properties:
                                            type:
                                              type: string
                                              enum:
                                                - template
                                                - pattern
                                                - holiday
                                                - custom
                                            start:
                                              type: string
                                              format: date-time
                                            end:
                                              type: string
                                              format: date-time
                                      required:
                                        - patternId
                                        - patternResourceId
                                        - name
                                        - description
                                        - patternType
                                      properties:
                                        patternId:
                                          type: string
                                        patternResourceId:
                                          type: string
                                        name:
                                          type: string
                                        description:
                                          type: string
                                        patternType:
                                          type: string
                                          enum:
                                            - custom
                                            - weekly
                                    - allOf:
                                        - type: object
                                          required:
                                            - type
                                            - start
                                            - end
                                          properties:
                                            type:
                                              type: string
                                              enum:
                                                - template
                                                - pattern
                                                - holiday
                                                - custom
                                            start:
                                              type: string
                                              format: date-time
                                            end:
                                              type: string
                                              format: date-time
                                      required:
                                        - id
                                      properties:
                                        id:
                                          type: string
                                    - allOf:
                                        - allOf:
                                            - type: object
                                              required:
                                                - name
                                              properties:
                                                description:
                                                  type: string
                                                name:
                                                  type: string
                                          required:
                                            - start
                                            - end
                                            - notes
                                            - createdDate
                                          properties:
                                            start:
                                              type: string
                                              format: date-time
                                            end:
                                              type: string
                                              format: date-time
                                            notes:
                                              type: string
                                            status:
                                              type: string
                                            availabilityType:
                                              type: string
                                            createdDate:
                                              type: string
                                              format: date-time
                                      required:
                                        - id
                                      properties:
                                        id:
                                          type: string
                                  discriminator:
                                    propertyName: type
                                    mapping:
                                      template: >-
                                        #/components/schemas/AvailabilityEntryChunkTemplate
                                      pattern: >-
                                        #/components/schemas/AvailabilityEntryChunkPattern
                                      holiday: >-
                                        #/components/schemas/AvailabilityEntryChunkHoliday
                                      custom: >-
                                        #/components/schemas/AvailabilityEntryChunkCustom
                            records:
                              description: >-
                                An array containing an array of
                                unavailabilities. Subsequent arrays have higher
                                priority. Unavailabilities may overlap with
                                themselves and with availabilities. Either
                                templates or patterns are returned (but not
                                both) depending on whether the availabilty
                                patterns feature is enabled.
                              type: array
                              items:
                                type: array
                                items:
                                  oneOf:
                                    - allOf:
                                        - type: object
                                          required:
                                            - type
                                            - start
                                            - end
                                            - name
                                          discriminator:
                                            propertyName: type
                                          properties:
                                            type:
                                              type: string
                                              enum:
                                                - template
                                                - pattern
                                                - holiday
                                                - custom
                                            start:
                                              type: string
                                              format: date-time
                                            end:
                                              type: string
                                              format: date-time
                                            name:
                                              type: string
                                      required:
                                        - id
                                        - entryId
                                      properties:
                                        id:
                                          type: string
                                        entryId:
                                          type: string
                                    - allOf:
                                        - type: object
                                          required:
                                            - type
                                            - start
                                            - end
                                            - name
                                          discriminator:
                                            propertyName: type
                                          properties:
                                            type:
                                              type: string
                                              enum:
                                                - template
                                                - pattern
                                                - holiday
                                                - custom
                                            start:
                                              type: string
                                              format: date-time
                                            end:
                                              type: string
                                              format: date-time
                                            name:
                                              type: string
                                      required:
                                        - patternId
                                        - patternResourceId
                                        - name
                                        - description
                                        - patternType
                                      properties:
                                        patternId:
                                          type: string
                                        patternResourceId:
                                          type: string
                                        name:
                                          type: string
                                        description:
                                          type: string
                                        patternType:
                                          type: string
                                          enum:
                                            - custom
                                            - weekly
                                    - allOf:
                                        - type: object
                                          required:
                                            - type
                                            - start
                                            - end
                                            - name
                                          discriminator:
                                            propertyName: type
                                          properties:
                                            type:
                                              type: string
                                              enum:
                                                - template
                                                - pattern
                                                - holiday
                                                - custom
                                            start:
                                              type: string
                                              format: date-time
                                            end:
                                              type: string
                                              format: date-time
                                            name:
                                              type: string
                                    - allOf:
                                        - type: object
                                          required:
                                            - type
                                            - start
                                            - end
                                            - name
                                          discriminator:
                                            propertyName: type
                                          properties:
                                            type:
                                              type: string
                                              enum:
                                                - template
                                                - pattern
                                                - holiday
                                                - custom
                                            start:
                                              type: string
                                              format: date-time
                                            end:
                                              type: string
                                              format: date-time
                                            name:
                                              type: string
                                  discriminator:
                                    propertyName: type
                                    mapping:
                                      template: >-
                                        #/components/schemas/AvailabilityEntryRecordTemplate
                                      pattern: >-
                                        #/components/schemas/AvailabilityEntryRecordPattern
                                      holiday: >-
                                        #/components/schemas/AvailabilityEntryRecordHoliday
                                      custom: >-
                                        #/components/schemas/AvailabilityEntryRecordCustom
                            entries:
                              description: >-
                                Contains untouched unavailability entries
                                grouped by type and ID. Unavailabilities may
                                overlap with themselves and also may overlap
                                with an availability. Either templates or
                                patterns are returned (but not both) depending
                                on whether the availabilty patterns feature is
                                enabled.
                              type: object
                              required:
                                - template
                                - pattern
                                - holiday
                                - custom
                              properties:
                                template:
                                  type: object
                                  additionalProperties:
                                    allOf:
                                      - type: object
                                        required:
                                          - name
                                        properties:
                                          description:
                                            type: string
                                          name:
                                            type: string
                                    required:
                                      - entries
                                    properties:
                                      start:
                                        type: string
                                        format: date
                                      end:
                                        type: string
                                        format: date
                                      entries:
                                        type: object
                                        additionalProperties:
                                          type: object
                                          required:
                                            - start
                                            - end
                                          properties:
                                            start:
                                              type: string
                                              format: date-time
                                            end:
                                              type: string
                                              format: date-time
                                            weekday:
                                              description: The days of the week
                                              type: string
                                              enum:
                                                - MON
                                                - TUE
                                                - WED
                                                - THU
                                                - FRI
                                                - SAT
                                                - SUN
                                pattern:
                                  type: object
                                  additionalProperties:
                                    allOf:
                                      - type: object
                                        required:
                                          - name
                                        properties:
                                          description:
                                            type: string
                                          name:
                                            type: string
                                    required:
                                      - patternId
                                      - patternResourceId
                                      - patternType
                                    properties:
                                      patternId:
                                        type: string
                                      patternResourceId:
                                        type: string
                                      patternType:
                                        type: string
                                        enum:
                                          - custom
                                          - weekly
                                holiday:
                                  type: object
                                  additionalProperties:
                                    allOf:
                                      - type: object
                                        required:
                                          - name
                                        properties:
                                          description:
                                            type: string
                                          name:
                                            type: string
                                    required:
                                      - start
                                      - end
                                      - name
                                      - global
                                    properties:
                                      start:
                                        type: string
                                        format: date-time
                                      end:
                                        type: string
                                        format: date-time
                                      name:
                                        type: string
                                      global:
                                        type: boolean
                                custom:
                                  type: object
                                  additionalProperties:
                                    allOf:
                                      - type: object
                                        required:
                                          - name
                                        properties:
                                          description:
                                            type: string
                                          name:
                                            type: string
                                    required:
                                      - start
                                      - end
                                      - notes
                                      - createdDate
                                    properties:
                                      start:
                                        type: string
                                        format: date-time
                                      end:
                                        type: string
                                        format: date-time
                                      notes:
                                        type: string
                                      status:
                                        type: string
                                      availabilityType:
                                        type: string
                                      createdDate:
                                        type: string
                                        format: date-time
                        shifts:
                          description: >-
                            A list of shifts for the resource in the requested
                            interval. Draft shifts are excluded.
                          type: array
                          items:
                            type: object
                            required:
                              - UID
                              - start
                              - end
                            properties:
                              UID:
                                type: string
                              start:
                                type: string
                                format: date-time
                              end:
                                type: string
                                format: date-time
                              locationId:
                                type: string
                              regionId:
                                type: string
                              displayName:
                                type: string
                        regions:
                          description: >-
                            A list of the regions that the resource is available
                            in in the request interval.
                          type: array
                          items:
                            type: object
                            required:
                              - start
                              - end
                              - regionIds
                            properties:
                              start:
                                type: string
                                format: date-time
                              end:
                                type: string
                                format: date-time
                              regionIds:
                                type: array
                                items:
                                  description: Region ID
                                  type: string
            result:
              examples:
                response:
                  value:
                    00059b46-320a-440e-979c-a3a657c14276:
                      available:
                        - start: '2018-07-24T23:00:00Z'
                          end: '2018-07-25T07:00:00Z'
                        - start: '2018-07-25T23:00:00Z'
                          end: '2018-07-26T07:00:00Z'
                        - start: '2018-07-26T23:00:00Z'
                          end: '2018-07-27T07:00:00Z'
                      unavailable:
                        - start: '2018-07-25T07:00:00Z'
                          end: '2018-07-25T23:00:00Z'
                        - start: '2018-07-26T07:00:00Z'
                          end: '2018-07-26T23:00:00Z'
                      availability: null
                      unavailability: null
                      shifts: []
                      regions:
                        - start: '2018-07-25T00:00:00Z'
                          end: '2018-07-25T23:00:00Z'
                          regionIds:
                            - 00039112-ce10-4a66-9bcd-4bdbd1ca8162
                            - 00034a75-7945-4011-b45e-e8044bd24b93
                        - start: '2018-07-25T23:00:00Z'
                          end: '2018-07-26T07:00:00Z'
                          regionIds:
                            - 00034a75-7945-4011-b45e-e8044bd24b93
                        - start: '2018-07-26T07:00:00Z'
                          end: '2018-07-27T00:00:00Z'
                          regionIds:
                            - 00039112-ce10-4a66-9bcd-4bdbd1ca8162
                            - 00034a75-7945-4011-b45e-e8044bd24b93
                    0005225f-f228-4309-8fde-50d5138be140:
                      available:
                        - start: '2018-07-24T23:00:00Z'
                          end: '2018-07-25T07:00:00Z'
                        - start: '2018-07-25T23:00:00Z'
                          end: '2018-07-26T07:00:00Z'
                        - start: '2018-07-26T23:00:00Z'
                          end: '2018-07-27T07:00:00Z'
                      unavailable:
                        - start: '2018-07-25T07:00:00Z'
                          end: '2018-07-25T23:00:00Z'
                        - start: '2018-07-26T07:00:00Z'
                          end: '2018-07-26T23:00:00Z'
                      availability: null
                      unavailability: null
                      shifts: []
                      regions:
                        - start: '2018-07-25T00:00:00Z'
                          end: '2018-07-27T00:00:00Z'
                          regionIds:
                            - 00039112-ce10-4a66-9bcd-4bdbd1ca8162
        default:
          description: Error
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
      tags:
        - Availability
      security:
        - Authorization: []
  /availability/simple:
    get:
      summary: Fetch resource availability in a simplified format
      description: >-
        Fetch resource availability between a time period in a simplified
        format.
      operationId: getAvailabilitySimple
      parameters:
        - name: resource_ids
          in: query
          description: >-
            Comma-separated string of resource IDs. There must be at least one
            ID and at most 200.
          required: true
          schema:
            type: string
        - name: start
          in: query
          description: Instant to fetch from.
          required: true
          schema:
            type: string
            format: date-time
        - name: end
          in: query
          description: 'Instant to fetch to, must be after start and within 375 days of it.'
          required: true
          schema:
            type: string
            format: date-time
        - name: mergedAvailabilities
          in: query
          description: >-
            If true, merged availability time intervals are returned with the
            result.
          required: false
          schema:
            type: boolean
            default: false
        - name: entries
          in: query
          description: 'If true or omitted, the list of availability entries is returned.'
          required: false
          schema:
            type: boolean
            default: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    description: >-
                      Array of AvailabilityResultSimple objects, each object
                      corresponds to the availability information of a single
                      resource.
                    items:
                      description: >-
                        Describes the availability information of a single
                        resource. `mergedAvailabilities` is only returned when
                        the mergedAvailabilities query parameter is set to
                        `true`.
                      type: object
                      required:
                        - resourceId
                        - mergedAvailabilities
                        - entries
                      properties:
                        resourceId:
                          description: ID of the resource.
                          type: string
                        mergedAvailabilties:
                          description: >-
                            A flattened list of intervals when the resource is
                            available to work. These intervals are calculated by
                            merging all availability entries together in the
                            given time range according to the predefined
                            precedence rules. This key only contains data if the
                            `mergedAvailabilities` query string parameters was
                            set to `true` in the request, otherwise it's set to
                            null.
                          type: array
                          nullable: true
                          items:
                            type: object
                            required:
                              - start
                              - end
                            properties:
                              start:
                                type: string
                                format: date-time
                              end:
                                type: string
                                format: date-time
                        entries:
                          description: >-
                            The list of various availability entries in the
                            given time interval applicable for the resource.
                            Entries are sorted by the start time in ascending
                            order.
                          type: array
                          nullable: true
                          items:
                            oneOf:
                              - allOf:
                                  - type: object
                                    description: >-
                                      Availability entry object that deterimnes
                                      the resources's availability.
                                    required:
                                      - type
                                      - start
                                      - end
                                      - available
                                    properties:
                                      type:
                                        description: >-
                                          The type of the availability entry.
                                          Valid values are `template`, `pattern`,
                                          `override`, and `holiday`.
                                        type: string
                                      start:
                                        description: >-
                                          The UTC datetime at which the
                                          availability entry beings applying to
                                          the resource (this exact point in time
                                          included).
                                        type: string
                                        format: date-time
                                      end:
                                        description: >-
                                          The UTC datetime at which the
                                          availability entry stops applying to the
                                          resource (this exact point in time
                                          excluded).
                                        type: string
                                        format: date-time
                                      available:
                                        description: >-
                                          Flag indicating whether this is an
                                          availability or unavailability entry.
                                        type: boolean
                                description: >-
                                  Availability entry describing an availability
                                  template entry.
                                required:
                                  - templateId
                                  - templateEntryId
                                  - name
                                properties:
                                  templateId:
                                    description: >-
                                      ID of the availability template this
                                      template entry is part of. Note that there
                                      can be multiple entries in the response
                                      belonging to the same template.
                                    type: string
                                  templateEntryId:
                                    description: >-
                                      ID of the availability template entry.
                                      Template entry IDs are unique.
                                    type: string
                                  name:
                                    description: Name of the availability template entry.
                                    type: string
                              - allOf:
                                  - type: object
                                    description: >-
                                      Availability entry object that deterimnes
                                      the resources's availability.
                                    required:
                                      - type
                                      - start
                                      - end
                                      - available
                                    properties:
                                      type:
                                        description: >-
                                          The type of the availability entry.
                                          Valid values are `template`, `pattern`,
                                          `override`, and `holiday`.
                                        type: string
                                      start:
                                        description: >-
                                          The UTC datetime at which the
                                          availability entry beings applying to
                                          the resource (this exact point in time
                                          included).
                                        type: string
                                        format: date-time
                                      end:
                                        description: >-
                                          The UTC datetime at which the
                                          availability entry stops applying to the
                                          resource (this exact point in time
                                          excluded).
                                        type: string
                                        format: date-time
                                      available:
                                        description: >-
                                          Flag indicating whether this is an
                                          availability or unavailability entry.
                                        type: boolean
                                description: >-
                                  Availability entry describing an availability
                                  pattern entry.
                                required:
                                  - patternId
                                  - patternResourceId
                                  - name
                                  - description
                                  - patternType
                                properties:
                                  patternId:
                                    description: >-
                                      ID of the availability pattern this
                                      pattern entry is part of. Note that there
                                      can be multiple entries in the response
                                      belonging to the same pattern.
                                    type: string
                                  patternResourceId:
                                    description: >-
                                      ID of the availability pattern resource
                                      record (which associates a pattern with a
                                      given resource).
                                    type: string
                                  description:
                                    description: Description of the pattern.
                                    type: string
                                  patternType:
                                    description: >-
                                      Type of the pattern, valid values are
                                      `weekly` and `custom`.
                                    type: string
                              - allOf:
                                  - type: object
                                    description: >-
                                      Availability entry object that deterimnes
                                      the resources's availability.
                                    required:
                                      - type
                                      - start
                                      - end
                                      - available
                                    properties:
                                      type:
                                        description: >-
                                          The type of the availability entry.
                                          Valid values are `template`, `pattern`,
                                          `override`, and `holiday`.
                                        type: string
                                      start:
                                        description: >-
                                          The UTC datetime at which the
                                          availability entry beings applying to
                                          the resource (this exact point in time
                                          included).
                                        type: string
                                        format: date-time
                                      end:
                                        description: >-
                                          The UTC datetime at which the
                                          availability entry stops applying to the
                                          resource (this exact point in time
                                          excluded).
                                        type: string
                                        format: date-time
                                      available:
                                        description: >-
                                          Flag indicating whether this is an
                                          availability or unavailability entry.
                                        type: boolean
                                description: Availability entry describing a holiday entry.
                                required:
                                  - id
                                  - name
                                  - global
                                properties:
                                  id:
                                    description: >-
                                      ID of the holiday entry. Holiday IDs are
                                      unique.
                                    type: string
                                  name:
                                    description: ''
                                    type: string
                                  global:
                                    description: ''
                                    type: boolean
                              - allOf:
                                  - type: object
                                    description: >-
                                      Availability entry object that deterimnes
                                      the resources's availability.
                                    required:
                                      - type
                                      - start
                                      - end
                                      - available
                                    properties:
                                      type:
                                        description: >-
                                          The type of the availability entry.
                                          Valid values are `template`, `pattern`,
                                          `override`, and `holiday`.
                                        type: string
                                      start:
                                        description: >-
                                          The UTC datetime at which the
                                          availability entry beings applying to
                                          the resource (this exact point in time
                                          included).
                                        type: string
                                        format: date-time
                                      end:
                                        description: >-
                                          The UTC datetime at which the
                                          availability entry stops applying to the
                                          resource (this exact point in time
                                          excluded).
                                        type: string
                                        format: date-time
                                      available:
                                        description: >-
                                          Flag indicating whether this is an
                                          availability or unavailability entry.
                                        type: boolean
                                description: >-
                                  Availability entry describing an availability
                                  override.
                                required:
                                  - id
                                  - overrideType
                                  - notes
                                  - status
                                properties:
                                  id:
                                    description: >-
                                      ID of the availability override. Override
                                      IDs are unique.
                                    type: string
                                  overrideType:
                                    description: >-
                                      Type of the override (e.g. `Leave`,
                                      `Occupied`, `Overtime`, `Sick`, etc.)
                                    type: string
                                  notes:
                                    description: User defined notes for this override.
                                    type: string
                                  status:
                                    description: >-
                                      Status of the override, valid values are
                                      `Approved`, `Declined` and `Pending`.
                                    type: string
                            discriminator:
                              propertyName: type
                              mapping:
                                template: >-
                                  #/components/schemas/SimpleTemplateAvailabilityEntry
                                pattern: >-
                                  #/components/schemas/SimplePatternAvailabilityEntry
                                holiday: >-
                                  #/components/schemas/SimpleHolidayAvailabilityEntry
                                override: >-
                                  #/components/schemas/SimpleOverrideAvailabilityEntry
            result:
              examples:
                response:
                  value:
                    - resourceId: 002eb23d-d576-47eb-aa14-80ac23c5d940
                      mergedAvailabilities:
                        - start: '2019-10-14T02:00:00Z'
                          end: '2019-10-14T03:00:00Z'
                        - start: '2019-10-14T05:00:00Z'
                          end: '2019-10-14T07:00:00Z'
                      entries:
                        - type: pattern
                          patternType: weekly
                          patternId: 002d6039-09f1-4dcb-915c-7edfff694999
                          patternResourceId: 002eb23d-d576-47eb-aa14-80ac23c5d940
                          name: Availability Pattern 1
                          description: Test pattern 1
                          start: '2019-10-14T22:00:00Z'
                          end: '2019-10-15T06:00:00Z'
                          available: true
                        - type: template
                          templateId: 000a1903-e8eb-4ca4-8f10-48107d4a1fe8
                          templateEntryId: 000b6dd3-76db-43dd-aef9-627efeeac847
                          name: Availability Template 1
                          end: '2019-10-15T06:00:00Z'
                          start: '2019-10-14T22:00:00Z'
                          available: true
                        - type: override
                          id: 00090d28-b5ab-4979-a8bb-4e87c53a03dc
                          start: '2019-10-20T08:00:00Z'
                          end: '2019-10-21T18:00:00Z'
                          available: true
                          overrideType: Overtime
                          notes: Some notes
                          status: Pending
                        - type: override
                          id: 0009eff1-845c-43f7-a339-0c070f6886dd
                          start: '2019-10-20T12:00:00Z'
                          end: '2019-10-21T16:00:00Z'
                          available: false
                          overrideType: Leave
                          notes: Some notes
                          status: Approved
                        - type: holiday
                          id: 000d1630-d879-4d29-b9fe-29dbcddad61a
                          name: Do Nothing Day
                          global: true
                          start: '2019-10-15T14:00:00Z'
                          end: '2019-10-16T14:00:00Z'
                          available: false
        default:
          description: Error
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
      tags:
        - Availability
      security:
        - Authorization: []
  /availability/resources:
    post:
      summary: Fetch available resources
      description: >-
        Fetch available resources for given criteria in a time period. Must
        specify at least one of `resourceIds` or `regionIds`. Note that the
        `regionIds` filter only restricts the list of resources to query the
        availabilities for; resource availability is global, there is no concept
        of per-region availability in the system.
      operationId: postAvailableResources
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    description: Key of resource ID to AvailabilityResult.
                    additionalProperties:
                      description: >-
                        `availability` is only returned when the availability
                        query parameter is set to `true` while `unavailability`
                        is only returned when the unavailability query parameter
                        is set to `true`.
                      type: object
                      required:
                        - available
                        - unavailable
                      properties:
                        available:
                          description: >-
                            A flattened list of intervals when the resource is
                            available to work. This is the inverse of
                            unavailable. This will be constructed from either
                            shifts if they are enabled or availability if they
                            are not.
                          type: array
                          items:
                            type: object
                            required:
                              - start
                              - end
                            properties:
                              start:
                                type: string
                                format: date-time
                              end:
                                type: string
                                format: date-time
                        unavailable:
                          description: >-
                            A flattened list of intervals when the resource is
                            unavailable to work. This is the inverse of
                            available.
                          type: array
                          items:
                            type: object
                            required:
                              - start
                              - end
                            properties:
                              start:
                                type: string
                                format: date-time
                              end:
                                type: string
                                format: date-time
                        availability:
                          type: object
                          required:
                            - records
                            - entries
                          properties:
                            records:
                              description: >-
                                An array containing an array of availabilities.
                                Subsequent arrays have higher priority.
                                Availabilities may overlap with themselves and
                                with unavailabilities. Either templates or
                                patterns are returned (but not both) depending
                                on whether the availabilty patterns feature is
                                enabled.
                              type: array
                              items:
                                type: array
                                items:
                                  oneOf:
                                    - allOf:
                                        - type: object
                                          required:
                                            - type
                                            - start
                                            - end
                                            - name
                                          discriminator:
                                            propertyName: type
                                          properties:
                                            type:
                                              type: string
                                              enum:
                                                - template
                                                - pattern
                                                - holiday
                                                - custom
                                            start:
                                              type: string
                                              format: date-time
                                            end:
                                              type: string
                                              format: date-time
                                            name:
                                              type: string
                                      required:
                                        - id
                                        - entryId
                                      properties:
                                        id:
                                          type: string
                                        entryId:
                                          type: string
                                    - allOf:
                                        - type: object
                                          required:
                                            - type
                                            - start
                                            - end
                                            - name
                                          discriminator:
                                            propertyName: type
                                          properties:
                                            type:
                                              type: string
                                              enum:
                                                - template
                                                - pattern
                                                - holiday
                                                - custom
                                            start:
                                              type: string
                                              format: date-time
                                            end:
                                              type: string
                                              format: date-time
                                            name:
                                              type: string
                                      required:
                                        - patternId
                                        - patternResourceId
                                        - name
                                        - description
                                        - patternType
                                      properties:
                                        patternId:
                                          type: string
                                        patternResourceId:
                                          type: string
                                        name:
                                          type: string
                                        description:
                                          type: string
                                        patternType:
                                          type: string
                                          enum:
                                            - custom
                                            - weekly
                                    - allOf:
                                        - type: object
                                          required:
                                            - type
                                            - start
                                            - end
                                            - name
                                          discriminator:
                                            propertyName: type
                                          properties:
                                            type:
                                              type: string
                                              enum:
                                                - template
                                                - pattern
                                                - holiday
                                                - custom
                                            start:
                                              type: string
                                              format: date-time
                                            end:
                                              type: string
                                              format: date-time
                                            name:
                                              type: string
                                    - allOf:
                                        - type: object
                                          required:
                                            - type
                                            - start
                                            - end
                                            - name
                                          discriminator:
                                            propertyName: type
                                          properties:
                                            type:
                                              type: string
                                              enum:
                                                - template
                                                - pattern
                                                - holiday
                                                - custom
                                            start:
                                              type: string
                                              format: date-time
                                            end:
                                              type: string
                                              format: date-time
                                            name:
                                              type: string
                                  discriminator:
                                    propertyName: type
                                    mapping:
                                      template: >-
                                        #/components/schemas/AvailabilityEntryRecordTemplate
                                      pattern: >-
                                        #/components/schemas/AvailabilityEntryRecordPattern
                                      holiday: >-
                                        #/components/schemas/AvailabilityEntryRecordHoliday
                                      custom: >-
                                        #/components/schemas/AvailabilityEntryRecordCustom
                            entries:
                              description: >-
                                Contains untouched availability entries grouped
                                by type and ID. Availabilities may overlap with
                                themselves and also may overlap with an
                                unavailability. Either templates or patterns are
                                returned (but not both) depending on whether the
                                availabilty patterns feature is enabled.
                              type: object
                              required:
                                - holiday
                                - custom
                              properties:
                                template:
                                  type: object
                                  additionalProperties:
                                    allOf:
                                      - type: object
                                        required:
                                          - name
                                        properties:
                                          description:
                                            type: string
                                          name:
                                            type: string
                                    required:
                                      - entries
                                    properties:
                                      start:
                                        type: string
                                        format: date
                                      end:
                                        type: string
                                        format: date
                                      entries:
                                        type: object
                                        additionalProperties:
                                          type: object
                                          required:
                                            - start
                                            - end
                                          properties:
                                            start:
                                              type: string
                                              format: date-time
                                            end:
                                              type: string
                                              format: date-time
                                            weekday:
                                              description: The days of the week
                                              type: string
                                              enum:
                                                - MON
                                                - TUE
                                                - WED
                                                - THU
                                                - FRI
                                                - SAT
                                                - SUN
                                pattern:
                                  type: object
                                  additionalProperties:
                                    allOf:
                                      - type: object
                                        required:
                                          - name
                                        properties:
                                          description:
                                            type: string
                                          name:
                                            type: string
                                    required:
                                      - patternId
                                      - patternResourceId
                                      - patternType
                                    properties:
                                      patternId:
                                        type: string
                                      patternResourceId:
                                        type: string
                                      patternType:
                                        type: string
                                        enum:
                                          - custom
                                          - weekly
                                holiday:
                                  type: object
                                  additionalProperties:
                                    allOf:
                                      - type: object
                                        required:
                                          - name
                                        properties:
                                          description:
                                            type: string
                                          name:
                                            type: string
                                    required:
                                      - start
                                      - end
                                      - name
                                      - global
                                    properties:
                                      start:
                                        type: string
                                        format: date-time
                                      end:
                                        type: string
                                        format: date-time
                                      name:
                                        type: string
                                      global:
                                        type: boolean
                                custom:
                                  type: object
                                  additionalProperties:
                                    allOf:
                                      - type: object
                                        required:
                                          - name
                                        properties:
                                          description:
                                            type: string
                                          name:
                                            type: string
                                    required:
                                      - start
                                      - end
                                      - notes
                                      - createdDate
                                    properties:
                                      start:
                                        type: string
                                        format: date-time
                                      end:
                                        type: string
                                        format: date-time
                                      notes:
                                        type: string
                                      status:
                                        type: string
                                      availabilityType:
                                        type: string
                                      createdDate:
                                        type: string
                                        format: date-time
                        unavailability:
                          type: object
                          required:
                            - defaults
                            - chunks
                            - records
                            - entries
                          properties:
                            defaults:
                              description: >-
                                Returns the times when a resource is unavailable
                                due to no explicit availability or
                                unavailability. These times will never intersect
                                with unavailability entries or with
                                availabilities.
                              type: array
                              items:
                                type: object
                                required:
                                  - start
                                  - end
                                properties:
                                  start:
                                    type: string
                                    format: date-time
                                  end:
                                    type: string
                                    format: date-time
                            chunks:
                              description: >-
                                An array containing an array of
                                unavailabilities. Subsequent arrays have higher
                                priority. Unavailabilities may overlap with
                                themselves but they will never overlap with an
                                availability. Either templates or patterns are
                                returned (but not both) depending on whether the
                                availabilty patterns feature is enabled.
                              type: array
                              items:
                                type: array
                                items:
                                  oneOf:
                                    - allOf:
                                        - type: object
                                          required:
                                            - type
                                            - start
                                            - end
                                          properties:
                                            type:
                                              type: string
                                              enum:
                                                - template
                                                - pattern
                                                - holiday
                                                - custom
                                            start:
                                              type: string
                                              format: date-time
                                            end:
                                              type: string
                                              format: date-time
                                      required:
                                        - id
                                        - entryId
                                        - name
                                      properties:
                                        id:
                                          type: string
                                        entryId:
                                          type: string
                                        name:
                                          type: string
                                    - allOf:
                                        - type: object
                                          required:
                                            - type
                                            - start
                                            - end
                                          properties:
                                            type:
                                              type: string
                                              enum:
                                                - template
                                                - pattern
                                                - holiday
                                                - custom
                                            start:
                                              type: string
                                              format: date-time
                                            end:
                                              type: string
                                              format: date-time
                                      required:
                                        - patternId
                                        - patternResourceId
                                        - name
                                        - description
                                        - patternType
                                      properties:
                                        patternId:
                                          type: string
                                        patternResourceId:
                                          type: string
                                        name:
                                          type: string
                                        description:
                                          type: string
                                        patternType:
                                          type: string
                                          enum:
                                            - custom
                                            - weekly
                                    - allOf:
                                        - type: object
                                          required:
                                            - type
                                            - start
                                            - end
                                          properties:
                                            type:
                                              type: string
                                              enum:
                                                - template
                                                - pattern
                                                - holiday
                                                - custom
                                            start:
                                              type: string
                                              format: date-time
                                            end:
                                              type: string
                                              format: date-time
                                      required:
                                        - id
                                      properties:
                                        id:
                                          type: string
                                    - allOf:
                                        - allOf:
                                            - type: object
                                              required:
                                                - name
                                              properties:
                                                description:
                                                  type: string
                                                name:
                                                  type: string
                                          required:
                                            - start
                                            - end
                                            - notes
                                            - createdDate
                                          properties:
                                            start:
                                              type: string
                                              format: date-time
                                            end:
                                              type: string
                                              format: date-time
                                            notes:
                                              type: string
                                            status:
                                              type: string
                                            availabilityType:
                                              type: string
                                            createdDate:
                                              type: string
                                              format: date-time
                                      required:
                                        - id
                                      properties:
                                        id:
                                          type: string
                                  discriminator:
                                    propertyName: type
                                    mapping:
                                      template: >-
                                        #/components/schemas/AvailabilityEntryChunkTemplate
                                      pattern: >-
                                        #/components/schemas/AvailabilityEntryChunkPattern
                                      holiday: >-
                                        #/components/schemas/AvailabilityEntryChunkHoliday
                                      custom: >-
                                        #/components/schemas/AvailabilityEntryChunkCustom
                            records:
                              description: >-
                                An array containing an array of
                                unavailabilities. Subsequent arrays have higher
                                priority. Unavailabilities may overlap with
                                themselves and with availabilities. Either
                                templates or patterns are returned (but not
                                both) depending on whether the availabilty
                                patterns feature is enabled.
                              type: array
                              items:
                                type: array
                                items:
                                  oneOf:
                                    - allOf:
                                        - type: object
                                          required:
                                            - type
                                            - start
                                            - end
                                            - name
                                          discriminator:
                                            propertyName: type
                                          properties:
                                            type:
                                              type: string
                                              enum:
                                                - template
                                                - pattern
                                                - holiday
                                                - custom
                                            start:
                                              type: string
                                              format: date-time
                                            end:
                                              type: string
                                              format: date-time
                                            name:
                                              type: string
                                      required:
                                        - id
                                        - entryId
                                      properties:
                                        id:
                                          type: string
                                        entryId:
                                          type: string
                                    - allOf:
                                        - type: object
                                          required:
                                            - type
                                            - start
                                            - end
                                            - name
                                          discriminator:
                                            propertyName: type
                                          properties:
                                            type:
                                              type: string
                                              enum:
                                                - template
                                                - pattern
                                                - holiday
                                                - custom
                                            start:
                                              type: string
                                              format: date-time
                                            end:
                                              type: string
                                              format: date-time
                                            name:
                                              type: string
                                      required:
                                        - patternId
                                        - patternResourceId
                                        - name
                                        - description
                                        - patternType
                                      properties:
                                        patternId:
                                          type: string
                                        patternResourceId:
                                          type: string
                                        name:
                                          type: string
                                        description:
                                          type: string
                                        patternType:
                                          type: string
                                          enum:
                                            - custom
                                            - weekly
                                    - allOf:
                                        - type: object
                                          required:
                                            - type
                                            - start
                                            - end
                                            - name
                                          discriminator:
                                            propertyName: type
                                          properties:
                                            type:
                                              type: string
                                              enum:
                                                - template
                                                - pattern
                                                - holiday
                                                - custom
                                            start:
                                              type: string
                                              format: date-time
                                            end:
                                              type: string
                                              format: date-time
                                            name:
                                              type: string
                                    - allOf:
                                        - type: object
                                          required:
                                            - type
                                            - start
                                            - end
                                            - name
                                          discriminator:
                                            propertyName: type
                                          properties:
                                            type:
                                              type: string
                                              enum:
                                                - template
                                                - pattern
                                                - holiday
                                                - custom
                                            start:
                                              type: string
                                              format: date-time
                                            end:
                                              type: string
                                              format: date-time
                                            name:
                                              type: string
                                  discriminator:
                                    propertyName: type
                                    mapping:
                                      template: >-
                                        #/components/schemas/AvailabilityEntryRecordTemplate
                                      pattern: >-
                                        #/components/schemas/AvailabilityEntryRecordPattern
                                      holiday: >-
                                        #/components/schemas/AvailabilityEntryRecordHoliday
                                      custom: >-
                                        #/components/schemas/AvailabilityEntryRecordCustom
                            entries:
                              description: >-
                                Contains untouched unavailability entries
                                grouped by type and ID. Unavailabilities may
                                overlap with themselves and also may overlap
                                with an availability. Either templates or
                                patterns are returned (but not both) depending
                                on whether the availabilty patterns feature is
                                enabled.
                              type: object
                              required:
                                - template
                                - pattern
                                - holiday
                                - custom
                              properties:
                                template:
                                  type: object
                                  additionalProperties:
                                    allOf:
                                      - type: object
                                        required:
                                          - name
                                        properties:
                                          description:
                                            type: string
                                          name:
                                            type: string
                                    required:
                                      - entries
                                    properties:
                                      start:
                                        type: string
                                        format: date
                                      end:
                                        type: string
                                        format: date
                                      entries:
                                        type: object
                                        additionalProperties:
                                          type: object
                                          required:
                                            - start
                                            - end
                                          properties:
                                            start:
                                              type: string
                                              format: date-time
                                            end:
                                              type: string
                                              format: date-time
                                            weekday:
                                              description: The days of the week
                                              type: string
                                              enum:
                                                - MON
                                                - TUE
                                                - WED
                                                - THU
                                                - FRI
                                                - SAT
                                                - SUN
                                pattern:
                                  type: object
                                  additionalProperties:
                                    allOf:
                                      - type: object
                                        required:
                                          - name
                                        properties:
                                          description:
                                            type: string
                                          name:
                                            type: string
                                    required:
                                      - patternId
                                      - patternResourceId
                                      - patternType
                                    properties:
                                      patternId:
                                        type: string
                                      patternResourceId:
                                        type: string
                                      patternType:
                                        type: string
                                        enum:
                                          - custom
                                          - weekly
                                holiday:
                                  type: object
                                  additionalProperties:
                                    allOf:
                                      - type: object
                                        required:
                                          - name
                                        properties:
                                          description:
                                            type: string
                                          name:
                                            type: string
                                    required:
                                      - start
                                      - end
                                      - name
                                      - global
                                    properties:
                                      start:
                                        type: string
                                        format: date-time
                                      end:
                                        type: string
                                        format: date-time
                                      name:
                                        type: string
                                      global:
                                        type: boolean
                                custom:
                                  type: object
                                  additionalProperties:
                                    allOf:
                                      - type: object
                                        required:
                                          - name
                                        properties:
                                          description:
                                            type: string
                                          name:
                                            type: string
                                    required:
                                      - start
                                      - end
                                      - notes
                                      - createdDate
                                    properties:
                                      start:
                                        type: string
                                        format: date-time
                                      end:
                                        type: string
                                        format: date-time
                                      notes:
                                        type: string
                                      status:
                                        type: string
                                      availabilityType:
                                        type: string
                                      createdDate:
                                        type: string
                                        format: date-time
                        shifts:
                          description: >-
                            A list of shifts for the resource in the requested
                            interval. Draft shifts are excluded.
                          type: array
                          items:
                            type: object
                            required:
                              - UID
                              - start
                              - end
                            properties:
                              UID:
                                type: string
                              start:
                                type: string
                                format: date-time
                              end:
                                type: string
                                format: date-time
                              locationId:
                                type: string
                              regionId:
                                type: string
                              displayName:
                                type: string
                        regions:
                          description: >-
                            A list of the regions that the resource is available
                            in in the request interval.
                          type: array
                          items:
                            type: object
                            required:
                              - start
                              - end
                              - regionIds
                            properties:
                              start:
                                type: string
                                format: date-time
                              end:
                                type: string
                                format: date-time
                              regionIds:
                                type: array
                                items:
                                  description: Region ID
                                  type: string
        default:
          description: Error
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
      requestBody:
        content:
          application/json:
            schema:
              description: >-
                Criteria by which available resources should be determined. Must
                specify at least one of resourceIds or regionIds.
              required:
                - start
                - end
              properties:
                start:
                  description: Instant to fetch from.
                  type: string
                  format: date-time
                end:
                  description: >-
                    Instant to fetch to, must be after start and within 375 days
                    of it.
                  type: string
                  format: date-time
                resourceIds:
                  description: >-
                    Non-empty array of resource IDs. There is a maximum limit of
                    200. If provided, we only consider resources with these IDs.
                  type: array
                  items:
                    type: string
                regionIds:
                  description: >-
                    Non-empty array of region IDs. There is a maximum limit of
                    50. If provided, we only consider resources with their
                    primary, secondary or temporary regions set to these IDs.
                  type: array
                  items:
                    type: string
                resourceFilter:
                  description: >-
                    EQL filter for resources to be included in this list. Must
                    not contain a region criteria!
                  example: EmploymentType == "Full-time"
                  type: string
                availability:
                  description: Should availability be returned.
                  type: boolean
                  default: false
                unavailability:
                  description: Should unavailability be returned.
                  type: boolean
                  default: false
        required: true
      tags:
        - Availability
      security:
        - Authorization: []
  /availability/patterns:
    post:
      summary: Upsert availability patterns
      description: >-
        This endpoint will validate then create/update availability patterns and
        the related resources.


        If a UID is present on the pattern it will update, otherwise it will
        create.
      requestBody:
        content:
          application/json:
            schema:
              description: The shape of the payload to successfully upsert a pattern.
              type: object
              properties:
                pattern:
                  type: object
                  description: The pattern of availabilities to determine availability.
                  properties:
                    UID:
                      type: string
                      format: uuid
                    name:
                      type: string
                    description:
                      type: string
                    pattern:
                      oneOf:
                        - allOf:
                            - type: object
                              description: >-
                                The shape of the availability patterns that
                                determine a resource's availability.
                              required:
                                - type
                              properties:
                                type:
                                  type: string
                                  enum:
                                    - custom
                                    - weekly
                          description: >-
                            Custom patterns describe patterns that span N-number
                            of days. Not all days have to be specified (there
                            can be holes in the pattern). The pattern repeats
                            after lengthDays number of days.
                          required:
                            - lengthDays
                            - days
                          properties:
                            lengthDays:
                              description: >-
                                The length of the pattern in days, must be a
                                positive integer.
                              type: number
                              example: 5
                            days:
                              type: array
                              description: >-
                                Days that make up the pattern. Days can be
                                specified in any order. A day with the same
                                index cannot appear more than once. It is
                                allowed to have holes in the pattern. The number
                                of days specified must be less than or equal to
                                the lengthDays property.
                              items:
                                type: object
                                properties:
                                  day:
                                    description: >-
                                      The N-th number of day in the pattern. The
                                      index is 1-based (the first day of the
                                      pattern is day 1).
                                    type: number
                                    example: 1
                                  intervals:
                                    type: array
                                    description: >-
                                      A list of time intervals that determine
                                      when a resource is available on the day.
                                      At least one time interval must be
                                      specified for a day; if more intervals are
                                      specified, they must be non-overlapping.
                                      Intervals are half-open (the start time is
                                      included in the interval but the end time
                                      is excluded).
                                    items:
                                      type: object
                                      required:
                                        - startTime
                                        - endTime
                                      properties:
                                        startTime:
                                          type: string
                                          description: >-
                                            Start time of the interval in local time
                                            (24-hour ISO format).
                                          format: 'HH:mm'
                                          example: '08:10'
                                        endTime:
                                          type: string
                                          description: >-
                                            End time of the interval in local time
                                            (24-hour ISO format). Start time must be
                                            before end time, except for full days
                                            are which are represented as
                                            00:00-00:00, and intervals that extend
                                            until the end of the day (e.g.
                                            13:00-00:00).
                                          format: 'HH:mm'
                                          example: '15:00'
                        - allOf:
                            - type: object
                              description: >-
                                The shape of the availability patterns that
                                determine a resource's availability.
                              required:
                                - type
                              properties:
                                type:
                                  type: string
                                  enum:
                                    - custom
                                    - weekly
                          description: >-
                            Weekly patterns describe patterns that span a single
                            calendar week (always from Monday to Sunday).
                            Optionally, there can be any number of empty padding
                            weeks (unavailable all week) after the first week,
                            after which the pattern repeats from the first week.
                          required:
                            - repeatWeeks
                            - days
                          properties:
                            repeatWeeks:
                              description: >-
                                The repeat frequency of a single week pattern,
                                must be a positive integer. The single weekly
                                pattern is applied from the start time (which
                                can be a non-complete week if the start time
                                doesn't fall on a Monday), followed by
                                `repeatWeeks - 1` number of "empty padding
                                weeks" (unavailable all week).
                              type: number
                              example: 3
                            days:
                              type: array
                              description: >-
                                Weekdays that make up the pattern. Weekdays can
                                be specified in any order. Not all weekdays must
                                be specified (there can be holes in the
                                pattern). Each weekday must appear only once in
                                the pattern.
                              items:
                                type: object
                                properties:
                                  weekday:
                                    description: The days of the week
                                    type: string
                                    enum:
                                      - MON
                                      - TUE
                                      - WED
                                      - THU
                                      - FRI
                                      - SAT
                                      - SUN
                                  intervals:
                                    type: array
                                    description: >-
                                      A list of time intervals that determine
                                      when a resource is available on the day.
                                      At least one time interval must be
                                      specified for a day; if more intervals are
                                      specified, they must be non-overlapping.
                                      Intervals are half-open (the start time is
                                      included in the interval but the end time
                                      is excluded).
                                    items:
                                      type: object
                                      required:
                                        - startTime
                                        - endTime
                                      properties:
                                        startTime:
                                          type: string
                                          description: >-
                                            Start time of the interval in local time
                                            (24-hour ISO format).
                                          format: 'HH:mm'
                                          example: '08:10'
                                        endTime:
                                          type: string
                                          description: >-
                                            End time of the interval in local time
                                            (24-hour ISO format). Start time must be
                                            before end time, except for full days
                                            are which are represented as
                                            00:00-00:00, and intervals that extend
                                            until the end of the day (e.g.
                                            13:00-00:00).
                                          format: 'HH:mm'
                                          example: '15:00'
                      discriminator:
                        propertyName: type
                        mapping:
                          custom: '#/components/schemas/AvailabilityPatternDetailCustom'
                          weekly: '#/components/schemas/AvailabilityPatternDetailWeekly'
                resources:
                  type: array
                  items:
                    type: object
                    description: >-
                      A resource has times they will be made available. This
                      contains the period that a resource will have the pattern
                      applied.
                    required:
                      - resourceId
                      - start
                    properties:
                      UID:
                        description: The ID of the Pattern Resource that is to be updated.
                        type: string
                      resourceId:
                        description: The ID of the resource to assign to this pattern.
                        type: string
                      start:
                        description: >-
                          The UTC datetime at which the pattern begins applying
                          to the resource.
                        type: string
                        format: date-time
                      end:
                        description: >-
                          The UTC datetime at which the pattern stops applying
                          to the resource where the pattern stops before this
                          UTC datetime. If not provided, the pattern applies
                          indefinitely.
                        type: string
                        format: date-time
      responses:
        '200':
          description: successful update
          content:
            application/json:
              schema:
                description: The UID of the successfully updated pattern.
                type: object
                properties:
                  result:
                    type: string
                    format: uuid
        '201':
          description: successful insert
          content:
            application/json:
              schema:
                description: The UID of the new pattern created.
                type: object
                properties:
                  created:
                    type: string
                    format: uuid
        default:
          description: Error
          content:
            application/json:
              schema:
                oneOf:
                  - description: If a pattern fails to upsert we will receive this error.
                    type: object
                    required:
                      - error_type
                      - message
                      - pattern
                      - resources
                    properties:
                      error_type:
                        description: The type of the error.
                      message:
                        description: A brief about the error result.
                      pattern:
                        description: A detailed error of what is wrong with the pattern.
                        type: array
                        items:
                          oneOf:
                            - description: >-
                                When a pattern is being updated but does not
                                exist, this error is returned.
                              type: object
                              properties:
                                pattern-not-found:
                                  description: The UID of the missing pattern.
                                  type: string
                            - description: >-
                                When an insert has failed with DB/Salesforce
                                errors.
                              type: object
                              properties:
                                insert-failed:
                                  description: A list of errors
                                  type: array
                                  items:
                                    description: The list of DB/Salesforce errors.
                                    type: object
                                    required:
                                      - code
                                      - message
                                    properties:
                                      code:
                                        description: The error code.
                                        type: string
                                      message:
                                        description: The error message.
                                        type: string
                            - description: >-
                                Returned when we encounter a DB/Salesforce
                                update error.
                              type: object
                              properties:
                                update-failed:
                                  type: object
                                  properties:
                                    errors:
                                      description: >-
                                        A list of errors encountered when
                                        updating.
                                      type: array
                                      items:
                                        description: The list of DB/Salesforce errors.
                                        type: object
                                        required:
                                          - code
                                          - message
                                        properties:
                                          code:
                                            description: The error code.
                                            type: string
                                          message:
                                            description: The error message.
                                            type: string
                                    UID:
                                      description: The UID of the pattern.
                                      type: string
                            - description: >-
                                When updating a pattern, if more than one result
                                is returned from salesforce or postgres, this
                                error is returned.
                              type: object
                              properties:
                                too-many-update-results:
                                  description: Contains the message of the error.
                                  type: string
                      resources:
                        type: array
                        items:
                          oneOf:
                            - description: >-
                                When attempting to save and the pattern-resource
                                relationship couldn't be found.
                              type: object
                              properties:
                                pattern-resource-not-found:
                                  description: >-
                                    The UID of the pattern-resource
                                    relationship.
                                  type: string
                            - description: >-
                                When an insert has failed with DB/Salesforce
                                errors.
                              type: object
                              properties:
                                insert-failed:
                                  type: object
                                  properties:
                                    errors:
                                      description: A list of errors.
                                      type: array
                                      items:
                                        description: The list of DB/Salesforce errors.
                                        type: object
                                        required:
                                          - code
                                          - message
                                        properties:
                                          code:
                                            description: The error code.
                                            type: string
                                          message:
                                            description: The error message.
                                            type: string
                                    resources:
                                      description: >-
                                        The list or resource UIDs the errors
                                        relate to.
                                      type: array
                                      items:
                                        type: string
                            - description: >-
                                Returned when we encounter a DB/Salesforce
                                update error.
                              type: object
                              properties:
                                update-failed:
                                  type: object
                                  properties:
                                    errors:
                                      description: >-
                                        A list of errors encountered when
                                        updating.
                                      type: array
                                      items:
                                        description: The list of DB/Salesforce errors.
                                        type: object
                                        required:
                                          - code
                                          - message
                                        properties:
                                          code:
                                            description: The error code.
                                            type: string
                                          message:
                                            description: The error message.
                                            type: string
                                    UID:
                                      description: The UID of the pattern.
                                      type: string
                            - description: >-
                                Returned when updating a pattern resource
                                details fails.
                              type: object
                              properties:
                                insert-failed:
                                  type: object
                                  properties:
                                    errors:
                                      description: >-
                                        The lis of errors received when attempt
                                        to update pattern resources.
                                      type: array
                                      items:
                                        type: string
                                    UIDs:
                                      description: >-
                                        A list of IDs for the related pattern
                                        resources.
                                      type: array
                                      items:
                                        type: string
                                    resources:
                                      description: >-
                                        A list of resource IDs that were used
                                        during the update.
                                      type: array
                                      items:
                                        type: string
                  - description: >-
                      A pattern's error will contain the error type, brief
                      message and further details.
                    type: array
                    items:
                      type: object
                      properties:
                        errorType:
                          description: A consistent string that contains the type of error.
                          type: string
                          example: pattern_error
                        message:
                          description: Further details about the error that occurred.
                          type: string
                          example: |-
                            Invalid availability pattern JSON:
                              - Monday: Intervals must be provided.
                        path:
                          description: >-
                            When the error is with the parsing the JSON, path is
                            returned with the errored path.
                          type: string
                          example: .pattern
      tags:
        - Availability
      security:
        - Authorization: []
  /availability/migrate_to_patterns/status:
    get:
      summary: >-
        Retrieve information about the status of the Availability Template to
        Pattern migration.
      description: >-
        Retrieve information about the status of the Availability Template to
        Pattern migration. The Availability Patterns feature flag must be
        enabled in the org before calling this endpoint.
      operationId: availabilityMigrationStatus
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      totalTemplates:
                        type: integer
                        description: >-
                          Total number of Availability Template objects in the
                          org.
                      totalTemplateResources:
                        type: integer
                        description: >-
                          Total number of Availability Template Resource objects
                          in the org.
                      unmigratedTemplates:
                        type: integer
                        description: >-
                          Total number of Availability Template objects in the
                          org that have not been migrated to Availability
                          Patterns yet.
                      unmigratedTemplateResources:
                        type: integer
                        description: >-
                          Total number of Availability Template Resource objects
                          in the org that have not been migrated to Availability
                          Pattern Resources yet.
      tags:
        - Availability
      security:
        - Authorization: []
  /availability/migrate_to_patterns/migrate:
    post:
      summary: Migrate all Availability Templates to Patterns in the org.
      description: >-
        Migrate all Availability Template and Availability Template Resource
        objects in the org to Availability Pattern and Availability Pattern
        Resource objects, respectively.


        The Availability Patterns feature flag must be enabled in the org before
        calling this endpoint. No data is deleted by the migration process. The
        operation is idempotent, meaning that calling the endpoint multiple
        times will migrate every object only once. If the operation was
        interrupted or not all objects could be migrated due to some errors, the
        endpoint should be called again to migrate the rest of the data (perhaps
        after fixing some problems manually first).
      operationId: availabilityMigrationMigrate
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      totalTemplates:
                        type: integer
                        description: >-
                          Total number of Availability Template objects in the
                          org.
                      totalTemplateResources:
                        type: integer
                        description: >-
                          Total number of Availability Template Resource objects
                          in the org.
                      unmigratedTemplatesPreMigration:
                        type: integer
                        description: >-
                          Total number of Availability Template objects in the
                          org before the migration that have not been migrated
                          to Availability Patterns yet.
                      unmigratedTemplateResourcesPreMigration:
                        type: integer
                        description: >-
                          Total number of Availability Template Resource objects
                          in the org before the migration that have not been
                          migrated to Availability Pattern Resources yet.
                      unmigratedTemplatesPostMigration:
                        type: integer
                        description: >-
                          Total number of Availability Template objects in the
                          org after the migration that have not been migrated to
                          Availability Patterns yet.
                      unmigratedTemplateResourcesPostMigration:
                        type: integer
                        description: >-
                          Total number of Availability Template Resource objects
                          in the org after the migration that have not been
                          migrated to Availability Pattern Resources yet.
                      errors:
                        type: array
                        description: >-
                          List of errors that occurred during the migration
                          process.
                        items:
                          type: string
                          description: Detailed description of the error.
      tags:
        - Availability
      security:
        - Authorization: []
  /onboarding/provision/standalone/users:
    post:
      security:
        - Authorization: []
      summary: Create users in a Skedulo Platform tenant
      description: >-
        Allows a Skedulo Platform Administrator to create users (and their
        associated resource).


        Each new user created can be sent an invitation email right after they
        are created, which contains a link allowing them to set a password.
      operationId: standaloneUsers
      responses:
        '200':
          description: >-
            Users were created, check the result for any failures. Failures are
            returned keyed by email address.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    required:
                      - inserted
                      - updated
                      - total
                      - failures
                    properties:
                      inserted:
                        type: integer
                      updated:
                        type: integer
                      total:
                        type: integer
                      failures:
                        type: object
                        additionalProperties:
                          type: object
                          required:
                            - code
                            - message
                          properties:
                            code:
                              type: string
                            message:
                              type: string
        '403':
          description: If the user is not an administrator.
        default:
          description: Error
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
                  errorId:
                    type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                required:
                  - email
                  - lastName
                description: >-
                  Provides details of the new user and optionally an associated
                  Resource object. Note that the Resource object definition can
                  include custom fields but the parent user definition cannot.
                properties:
                  email:
                    description: >-
                      This is the unique identifier of the user within this
                      tenant. For standard Skedulo users, the email must be
                      unique across all Skedulo platform tenants. For SSO only
                      users, this email can be used in multiple tenants.
                    type: string
                    format: email
                  firstName:
                    type: string
                  lastName:
                    type: string
                  roles:
                    type: array
                    items:
                      description: A set of roles the user should have.
                      type: string
                      enum:
                        - Administrator
                        - Scheduler
                        - Resource
                  sendInvitation:
                    type: boolean
                    description: >-
                      If true, sends the email invitation immediately. Ignored
                      when adding SSO users to the local database.
                    default: true
                  resource:
                    type: object
                    description: >-
                      Definition of the Resource record to be associated with
                      this user. This object can contain custom fields - note
                      that the case of the field name must match the field
                      definition. If this Resource object is provided, the
                      user's roles must include "Resource". Note that a Resource
                      can also be created at a later date and linked to the user
                      via `/auth/link_resource`.
                    required:
                      - primaryRegionId
                      - isActive
                    properties:
                      primaryRegionId:
                        type: string
                      resourceType:
                        type: string
                      employmentType:
                        type: string
                      isActive:
                        type: boolean
                      category:
                        type: string
                      homeAddress:
                        type: string
                      mobilePhone:
                        type: string
                      countryCode:
                        description: >-
                          The correct country code must be set for each resource
                          so that they can receive SMS.
                        type: string
                        enum:
                          - AU
                          - NZ
                          - US
                          - UK
                      notificationType:
                        type: string
                        description: Default notification method of this resource.
                        enum:
                          - sms
                          - push
                      workingHourType:
                        type: string
                        description: Working hour type of this resource.
                        enum:
                          - Availability
                          - Shift
                      geoLongitude:
                        type: number
                      geoLatitude:
                        type: number
        description: A non-empty array of new users to add.
        required: true
      tags:
        - Onboarding
  /onboarding/provision/standalone/users/bulk:
    post:
      security:
        - Authorization: []
      summary: Create a large number of users (and their associated resource)
      deprecated: true
      description: >-
        This endpoint is deprecated, use the Data Loader in the Skedulo web app
        instead.


        This is run as a background task. 


        Each new user created can be sent an invitation email right after they
        are created, which contains a link allowing them to set a password.
      operationId: standaloneUsersBulk
      responses:
        '200':
          description: The background task has been registered.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    required:
                      - taskId
                      - type
                      - createdAt
                      - success
                    properties:
                      taskId:
                        type: integer
                      type:
                        type: string
                      createdAt:
                        type: string
                        format: date-time
                      lastCheckedInAt:
                        type: string
                        format: date-time
                      completedAt:
                        type: string
                        format: date-time
                      success:
                        type: boolean
                      errorMsg:
                        type: string
        '403':
          description: If the user is not an administrator.
        default:
          description: Error
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
                  errorId:
                    type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                required:
                  - email
                  - lastName
                description: >-
                  Provides details of the new user and optionally an associated
                  Resource object. Note that the Resource object definition can
                  include custom fields but the parent user definition cannot.
                properties:
                  email:
                    description: >-
                      This is the unique identifier of the user within this
                      tenant. For standard Skedulo users, the email must be
                      unique across all Skedulo platform tenants. For SSO only
                      users, this email can be used in multiple tenants.
                    type: string
                    format: email
                  firstName:
                    type: string
                  lastName:
                    type: string
                  roles:
                    type: array
                    items:
                      description: A set of roles the user should have.
                      type: string
                      enum:
                        - Administrator
                        - Scheduler
                        - Resource
                  sendInvitation:
                    type: boolean
                    description: >-
                      If true, sends the email invitation immediately. Ignored
                      when adding SSO users to the local database.
                    default: true
                  resource:
                    type: object
                    description: >-
                      Definition of the Resource record to be associated with
                      this user. This object can contain custom fields - note
                      that the case of the field name must match the field
                      definition. If this Resource object is provided, the
                      user's roles must include "Resource". Note that a Resource
                      can also be created at a later date and linked to the user
                      via `/auth/link_resource`.
                    required:
                      - primaryRegionId
                      - isActive
                    properties:
                      primaryRegionId:
                        type: string
                      resourceType:
                        type: string
                      employmentType:
                        type: string
                      isActive:
                        type: boolean
                      category:
                        type: string
                      homeAddress:
                        type: string
                      mobilePhone:
                        type: string
                      countryCode:
                        description: >-
                          The correct country code must be set for each resource
                          so that they can receive SMS.
                        type: string
                        enum:
                          - AU
                          - NZ
                          - US
                          - UK
                      notificationType:
                        type: string
                        description: Default notification method of this resource.
                        enum:
                          - sms
                          - push
                      workingHourType:
                        type: string
                        description: Working hour type of this resource.
                        enum:
                          - Availability
                          - Shift
                      geoLongitude:
                        type: number
                      geoLatitude:
                        type: number
        description: A non-empty array of new users to add.
        required: true
      tags:
        - Onboarding
  /onboarding/provision/standalone/users/file:
    post:
      security:
        - Authorization: []
      summary: Import users from a CSV or JSON file
      deprecated: true
      description: >-
        This endpoint is deprecated, use the Data Loader in the Skedulo web app
        instead.


        Import CSV or JSON data that is embedded in a multipart/form-data
        document. Accepts one file at a time.
      operationId: standaloneUsersBulkFromFile
      responses:
        '200':
          description: The background task has been registered.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    required:
                      - taskId
                      - type
                      - createdAt
                      - success
                    properties:
                      taskId:
                        type: integer
                      type:
                        type: string
                      createdAt:
                        type: string
                        format: date-time
                      lastCheckedInAt:
                        type: string
                        format: date-time
                      completedAt:
                        type: string
                        format: date-time
                      success:
                        type: boolean
                      errorMsg:
                        type: string
        '400':
          description: Data format error or there was not exactly one file attached.
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
                  errorId:
                    type: string
        '401':
          description: Authentication/Authorization failed
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
                  errorId:
                    type: string
        '403':
          description: If the user is not an administrator.
        default:
          description: Error
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
                  errorId:
                    type: string
      tags:
        - Onboarding
  /onboarding/provision/standalone/users/local:
    post:
      security:
        - Authorization: []
      summary: Add users for access via SSO only.
      description: >-
        Creates users (and their associated resources) in the tenant database
        but does not create corresponding Auth0 user accounts.


        This allows the users to log in using linked SSO accounts with the
        corresponding email addresses. The email addresses can be used in
        multiple tenants when logging in with SSO.
      operationId: standaloneUsersLocal
      responses:
        '200':
          description: >-
            Users were added to the database. Check the result for any failures.
            Failures are returned keyed by email address.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    required:
                      - inserted
                      - updated
                      - total
                      - failures
                    properties:
                      inserted:
                        type: integer
                      updated:
                        type: integer
                      total:
                        type: integer
                      failures:
                        type: object
                        additionalProperties:
                          type: object
                          required:
                            - code
                            - message
                          properties:
                            code:
                              type: string
                            message:
                              type: string
        '403':
          description: If the user is not an Administrator.
        default:
          description: Error
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
                  errorId:
                    type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                required:
                  - email
                  - lastName
                description: >-
                  Provides details of the new user and optionally an associated
                  Resource object. Note that the Resource object definition can
                  include custom fields but the parent user definition cannot.
                properties:
                  email:
                    description: >-
                      This is the unique identifier of the user within this
                      tenant. For standard Skedulo users, the email must be
                      unique across all Skedulo platform tenants. For SSO only
                      users, this email can be used in multiple tenants.
                    type: string
                    format: email
                  firstName:
                    type: string
                  lastName:
                    type: string
                  roles:
                    type: array
                    items:
                      description: A set of roles the user should have.
                      type: string
                      enum:
                        - Administrator
                        - Scheduler
                        - Resource
                  sendInvitation:
                    type: boolean
                    description: >-
                      If true, sends the email invitation immediately. Ignored
                      when adding SSO users to the local database.
                    default: true
                  resource:
                    type: object
                    description: >-
                      Definition of the Resource record to be associated with
                      this user. This object can contain custom fields - note
                      that the case of the field name must match the field
                      definition. If this Resource object is provided, the
                      user's roles must include "Resource". Note that a Resource
                      can also be created at a later date and linked to the user
                      via `/auth/link_resource`.
                    required:
                      - primaryRegionId
                      - isActive
                    properties:
                      primaryRegionId:
                        type: string
                      resourceType:
                        type: string
                      employmentType:
                        type: string
                      isActive:
                        type: boolean
                      category:
                        type: string
                      homeAddress:
                        type: string
                      mobilePhone:
                        type: string
                      countryCode:
                        description: >-
                          The correct country code must be set for each resource
                          so that they can receive SMS.
                        type: string
                        enum:
                          - AU
                          - NZ
                          - US
                          - UK
                      notificationType:
                        type: string
                        description: Default notification method of this resource.
                        enum:
                          - sms
                          - push
                      workingHourType:
                        type: string
                        description: Working hour type of this resource.
                        enum:
                          - Availability
                          - Shift
                      geoLongitude:
                        type: number
                      geoLatitude:
                        type: number
        description: A non-empty array of new users to add.
        required: true
      tags:
        - Onboarding
  /onboarding/provision/standalone/users/local/file:
    post:
      security:
        - Authorization: []
      summary: Add users from a file for access via SSO only.
      description: >-
        See /provision/standalone/users/local. Imports CSV or JSON data that is
        embedded in a multipart/form-data document. Accepts one file at a time.
        Import is run as a background task.
      operationId: standaloneUsersBulkFromFileLocal
      responses:
        '200':
          description: The background task has been registered.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    required:
                      - taskId
                      - type
                      - createdAt
                      - success
                    properties:
                      taskId:
                        type: integer
                      type:
                        type: string
                      createdAt:
                        type: string
                        format: date-time
                      lastCheckedInAt:
                        type: string
                        format: date-time
                      completedAt:
                        type: string
                        format: date-time
                      success:
                        type: boolean
                      errorMsg:
                        type: string
        '400':
          description: Data format error or there was not exactly one file attached.
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
                  errorId:
                    type: string
        '401':
          description: Authentication/Authorization failed
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
                  errorId:
                    type: string
        '403':
          description: If the user is not an Administrator.
        default:
          description: Error
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
                  errorId:
                    type: string
      tags:
        - Onboarding
  '/onboarding/provision/standalone/users/bulk/{taskId}':
    get:
      security:
        - Authorization: []
      summary: Query status of onboarding task
      deprecated: true
      description: >-
        This endpoint is deprecated, use the Data Loader in the Skedulo web app
        instead.


        Allows a Skedulo Platform Administrator to query the status of a
        background task that has been submitted earlier.
      operationId: getProcessedUsers
      parameters:
        - name: taskId
          in: path
          description: ID of the background task to be queried.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: The background task has been registered.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    required:
                      - task
                      - users
                    properties:
                      task:
                        type: object
                        required:
                          - taskId
                          - type
                          - createdAt
                          - success
                        properties:
                          taskId:
                            type: integer
                          type:
                            type: string
                          createdAt:
                            type: string
                            format: date-time
                          lastCheckedInAt:
                            type: string
                            format: date-time
                          completedAt:
                            type: string
                            format: date-time
                          success:
                            type: boolean
                          errorMsg:
                            type: string
                      users:
                        type: array
                        items:
                          type: object
                          required:
                            - email
                            - taskId
                            - lastName
                            - success
                          properties:
                            email:
                              type: string
                              format: email
                            taskId:
                              type: string
                            firstName:
                              type: string
                            lastName:
                              type: string
                            success:
                              type: boolean
                            errorMsg:
                              type: string
        '403':
          description: If the user is not an administrator.
        '404':
          description: Task with taskId not found.
        default:
          description: Error
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
                  errorId:
                    type: string
      tags:
        - Onboarding
  /onboarding/internal/check_tenant_initialized:
    post:
      description: Internal endpoint used to check if a tenant has been initialized.
      operationId: internalCheckTenantInitialized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - tenantId
                - vendor
              properties:
                tenantId:
                  description: >-
                    The tenant ID to create the schema for existing tenantId's
                    will return success but will not be updated.
                  type: string
                  example: sk_ba70ac7072fd4df3a179cce2e2c4e483
                vendor:
                  description: >-
                    The vendor that will serve the tenant's data either skedulo
                    or salesforce
                  type: string
                  enum:
                    - skedulo
                    - salesforce
      responses:
        '200':
          description: Tenant is initialized.
        '404':
          description: Tenant is not initialized.
      tags:
        - Onboarding
  '/config/templates/{schemaName}':
    get:
      security:
        - Authorization: []
      summary: Fetch schema templates
      description: Fetch all templates for a given schema.
      operationId: getTemplates
      parameters:
        - name: schemaName
          in: path
          description: Schema to retrieve templates for.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      type: object
                      required:
                        - id
                        - name
                        - schemaName
                      properties:
                        id:
                          type: string
                          format: uuid
                        name:
                          type: string
                        schemaName:
                          type: string
        default:
          description: Error
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
                  errorId:
                    type: string
      tags:
        - Configurations
  /config/template:
    post:
      security:
        - Authorization: []
      summary: Create template
      description: Create a new template.
      operationId: createTemplate
      responses:
        '200':
          description: The template was created.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      type: object
                      required:
                        - id
                        - name
                        - schemaName
                      properties:
                        id:
                          type: string
                          format: uuid
                        name:
                          type: string
                        schemaName:
                          type: string
        default:
          description: Error
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
                  errorId:
                    type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - schemaName
              properties:
                name:
                  type: string
                schemaName:
                  type: string
        description: New template details.
        required: true
      tags:
        - Configurations
  '/config/template/{template_id}':
    put:
      security:
        - Authorization: []
      summary: Update template
      description: Update an existing template.
      operationId: updateTemplate
      parameters:
        - name: template_id
          in: path
          description: Identifier of the template to update.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: The template was updated.
        default:
          description: Error
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
                  errorId:
                    type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
        description: Updated template details.
        required: true
      tags:
        - Configurations
    delete:
      security:
        - Authorization: []
      summary: Delete template
      description: Delete a template.
      operationId: deleteTemplate
      parameters:
        - name: template_id
          in: path
          description: Identifier of the template to delete.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: The template was deleted.
          content:
            application/json:
              schema:
                type: object
                properties:
                  deleted:
                    type: string
                    format: uuid
        default:
          description: Error
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
                  errorId:
                    type: string
      tags:
        - Configurations
  '/config/template/{template_id}/values':
    get:
      security:
        - Authorization: []
      summary: Template values
      description: Return template values for a template.
      operationId: getValuePairs
      parameters:
        - name: template_id
          in: path
          description: Identifier of the template to retrieve values for.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      type: object
                      required:
                        - id
                        - templateId
                        - rel
                        - field
                        - value
                      properties:
                        id:
                          type: string
                          format: uuid
                        templateId:
                          type: string
                          format: uuid
                        rel:
                          type: string
                        field:
                          type: string
                        value:
                          type: string
        default:
          description: Error
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
                  errorId:
                    type: string
      tags:
        - Configurations
    put:
      security:
        - Authorization: []
      summary: Update template values
      description: >-
        All existing values will removed and the values provided will be
        inserted.
      operationId: overrideTemplateValues
      parameters:
        - name: template_id
          in: path
          description: Identifier of the template to add values for.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: The values were updated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      type: object
                      required:
                        - id
                        - templateId
                        - rel
                        - field
                        - value
                      properties:
                        id:
                          type: string
                          format: uuid
                        templateId:
                          type: string
                          format: uuid
                        rel:
                          type: string
                        field:
                          type: string
                        value:
                          type: string
        default:
          description: Error
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
                  errorId:
                    type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                required:
                  - rel
                  - field
                  - value
                properties:
                  rel:
                    type: string
                  field:
                    type: string
                  value:
                    type: string
        description: Values to use for the template.
        required: true
      tags:
        - Configurations
  '/config/config/layout/{object}':
    get:
      security:
        - Authorization: []
      summary: Default layout for an object
      description: Returns the default layout for the given object.
      operationId: layoutObjectDefault
      parameters:
        - name: object
          in: path
          description: the name of the object
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - result
                properties:
                  result:
                    type: object
                    required:
                      - object
                      - layout
                    properties:
                      object:
                        type: string
                      layout:
                        type: object
                        required:
                          - relatedData
                        properties:
                          relatedData:
                            type: array
                            items:
                              oneOf:
                                - required:
                                    - type
                                    - object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - relatedObjects
                                    reference:
                                      type: string
                                    object:
                                      type: string
                                    label:
                                      type: string
                                    listFields:
                                      type: array
                                      items:
                                        required:
                                          - fieldName
                                        properties:
                                          fieldName:
                                            type: string
                              discriminator:
                                propertyName: type
                                mapping:
                                  relatedObjects: >-
                                    #/components/schemas/LayoutRelatedDataRelatedObject
        default:
          description: Error
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
                  errorId:
                    type: string
      tags:
        - Configurations
  /custom/vocabularies:
    get:
      security:
        - Authorization: []
      summary: >-
        Return all vocabularies keyed on schema name with values keyed on field
        name
      description: ''
      operationId: fetchVocabularies
      parameters:
        - name: names
          in: query
          description: >-
            Names of schemas to fetch vocabularies for in comma separated
            format. If not provided all vocabularies are returned.
          required: false
          schema:
            type: string
        - name: force
          in: query
          description: >-
            If set to true the cache is replaced with a new value. Has no effect
            if 'names' are provided as they are not cached.
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - result
                properties:
                  result:
                    type: object
                    additionalProperties:
                      type: object
                      additionalProperties:
                        type: array
                        items:
                          type: object
                          required:
                            - value
                            - label
                            - active
                            - defaultValue
                            - validFor
                          properties:
                            value:
                              type: string
                            label:
                              type: string
                            active:
                              type: boolean
                            defaultValue:
                              type: boolean
                            controller:
                              type: string
                            controllingField:
                              type: string
                            validFor:
                              type: array
                              items:
                                type: string
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
      tags:
        - Custom fields
  '/custom/vocabulary/{schemaName}/{fieldName}':
    get:
      security:
        - Authorization: []
      summary: Return vocabulary items for a given field
      description: ''
      operationId: vocabularyFetch
      parameters:
        - name: schemaName
          in: path
          description: Name of the schema that the vocabulary field belongs to
          required: true
          schema:
            type: string
        - name: fieldName
          in: path
          description: Name of a vocabulary field
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      type: object
                      required:
                        - label
                        - value
                        - active
                        - defaultValue
                        - validFor
                      properties:
                        label:
                          type: string
                        value:
                          type: string
                        active:
                          type: boolean
                        defaultValue:
                          type: boolean
                        controllingField:
                          type: string
                        validFor:
                          type: array
                          items:
                            type: string
        '400':
          description: If the field does not exist or is not a vocabulary field
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
      tags:
        - Custom fields
    post:
      security:
        - Authorization: []
      summary: Add a vocabulary item to a vocabulary field
      description: You must be an administrator in order to use this endpoint
      operationId: vocabularyCreate
      parameters:
        - name: schemaName
          in: path
          description: Name of the schema that the vocabulary field belongs to
          required: true
          schema:
            type: string
        - name: fieldName
          in: path
          description: Name of a vocabulary field
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The item was added
        '400':
          description: If the field does not exist or is not a vocabulary field
        '403':
          description: If the user is not an administrator
        '409':
          description: An item with that value already exists
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - label
                - value
                - active
                - defaultValue
                - validFor
              properties:
                label:
                  type: string
                value:
                  type: string
                active:
                  type: boolean
                defaultValue:
                  type: boolean
                controllingField:
                  type: string
                validFor:
                  type: array
                  items:
                    type: string
        description: The item to add
        required: true
      tags:
        - Custom fields
  '/custom/vocabulary/{schemaName}/{fieldName}/{value}':
    put:
      security:
        - Authorization: []
      summary: Modify a vocabulary item on a vocabulary field
      description: You must be an administrator in order to use this endpoint
      operationId: vocabularyUpdate
      parameters:
        - name: schemaName
          in: path
          description: Name of the schema that the vocabulary field belongs to
          required: true
          schema:
            type: string
        - name: fieldName
          in: path
          description: Name of a vocabulary field
          required: true
          schema:
            type: string
        - name: value
          in: path
          description: Value of the vocabulary item to modify
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The item was updated
        '400':
          description: If the field does not exist or is not a vocabulary field
        '403':
          description: If the user is not an administrator
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                label:
                  type: string
                value:
                  type: string
                active:
                  type: boolean
                defaultValue:
                  type: boolean
        description: The item to modify
        required: true
      tags:
        - Custom fields
    delete:
      security:
        - Authorization: []
      summary: Deactivate a vocabulary item attached to a vocabulary field
      description: You must be an administrator in order to use this endpoint
      operationId: vocabularyDeactivate
      parameters:
        - name: schemaName
          in: path
          description: Name of the schema that the vocabulary field belongs to
          required: true
          schema:
            type: string
        - name: fieldName
          in: path
          description: Name of a vocabulary field
          required: true
          schema:
            type: string
        - name: value
          in: path
          description: Vocabulary item value to deactivate
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The item was deactivated
        '400':
          description: If the field does not exist or is not a vocabulary field
        '403':
          description: If the user is not an administrator
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
      tags:
        - Custom fields
  /custom/vocabulary/dependency:
    post:
      security:
        - Authorization: []
      summary: >-
        Create or modify the dependency relationship of a picklist field to
        match exactly what was provided
      description: You must be an administrator in order to use this endpoint
      operationId: upsertFieldDependency
      responses:
        '200':
          description: The dependency relationship was created or updated
        '400':
          description: If fields or entries provided were invalid
        '403':
          description: If the user is not an administrator
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - schemaName
                - dependentField
                - controllingField
                - entries
              properties:
                schemaName:
                  type: string
                dependentField:
                  type: string
                controllingField:
                  type: string
                entries:
                  type: array
                  items:
                    type: object
                    required:
                      - dependentValue
                      - controllingValue
                    properties:
                      dependentValue:
                        type: string
                      controllingValue:
                        type: string
        description: The dependency relationship to be created or updated
        required: true
      tags:
        - Custom fields
  /custom/vocabulary/dependency/delete:
    post:
      security:
        - Authorization: []
      summary: Remove the dependency relationship of a picklist field
      description: You must be an administrator in order to use this endpoint
      operationId: deleteFieldDependency
      responses:
        '200':
          description: The dependency relationship was removed
        '400':
          description: If fields provided were invalid
        '403':
          description: If the user is not an administrator
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - schemaName
                - dependentField
                - controllingField
              properties:
                schemaName:
                  type: string
                dependentField:
                  type: string
                controllingField:
                  type: string
        description: The dependency relationship to be removed
        required: true
      tags:
        - Custom fields
  /custom/vocabulary/dependency/entry:
    post:
      security:
        - Authorization: []
      summary: Add a dependency between two picklist values
      description: You must be an administrator in order to use this endpoint
      operationId: addFieldDependencyEntry
      responses:
        '200':
          description: The dependency relationship was created or updated
        '400':
          description: If fields or entry provided were invalid
        '403':
          description: If the user is not an administrator
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - schemaName
                - dependentField
                - controllingField
                - entry
              properties:
                schemaName:
                  type: string
                dependentField:
                  type: string
                controllingField:
                  type: string
                entry:
                  type: object
                  required:
                    - dependentValue
                    - controllingValue
                  properties:
                    dependentValue:
                      type: string
                    controllingValue:
                      type: string
        description: The dependency relationship to be created or updated
        required: true
      tags:
        - Custom fields
  /custom/vocabulary/dependency/entry/delete:
    post:
      security:
        - Authorization: []
      summary: Remove the dependency between two picklist values
      description: You must be an administrator in order to use this endpoint
      operationId: deleteFieldDependencyEntry
      responses:
        '200':
          description: The dependency relationship was removed
        '400':
          description: If fields or entry provided were invalid
        '403':
          description: If the user is not an administrator
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - schemaName
                - dependentField
                - controllingField
              properties:
                schemaName:
                  type: string
                dependentField:
                  type: string
                controllingField:
                  type: string
        description: The dependency relationship to be removed
        required: true
      tags:
        - Custom fields
  /custom/usermetadata:
    get:
      deprecated: true
      security:
        - Authorization: []
      summary: Return the current users metadata
      description: 'Deprecated: use the /auth/metadata/user endpoint instead'
      operationId: userMetadata
      responses:
        '200':
          description: The current users metadata
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    required:
                      - email
                      - fullName
                      - id
                      - isSkeduloAdmin
                      - isSkeduloScheduler
                      - isSkeduloUser
                      - orgId
                      - orgName
                      - profileId
                      - roleId
                      - sfdcDomain
                      - username
                      - userroles
                    properties:
                      id:
                        type: string
                      email:
                        type: string
                      username:
                        type: string
                      fullName:
                        type: string
                      profileId:
                        type: string
                      roleId:
                        type: string
                      orgName:
                        type: string
                      orgId:
                        type: string
                      sfdcDomain:
                        type: string
                      isSkeduloScheduler:
                        type: boolean
                      isSkeduloUser:
                        type: boolean
                      isSkeduloAdmin:
                        type: boolean
                      userroles:
                        type: string
                      smallPhotoUrl:
                        type: string
                      category:
                        type: string
                      resourceId:
                        type: string
                      latitude:
                        type: number
                      longitude:
                        type: number
                      address:
                        type: string
                      timezone:
                        type: string
                      country:
                        type: string
                      teamMetadata:
                        type: object
                        required:
                          - id
                          - name
                          - description
                          - vendor
                          - orgId
                        properties:
                          id:
                            type: string
                          name:
                            type: string
                            description: >-
                              Primary name of the team. This is always the
                              subdomain part of the team's custom Skedulo domain
                          description:
                            type: string
                          vendor:
                            type: string
                            enum:
                              - salesforce
                              - servicenow
                              - skedulo
                          orgId:
                            type: string
                          customer:
                            description: The customer name.
                            type: string
      tags:
        - Custom fields
  '/files/attachment/{fileId}':
    get:
      security:
        - Authorization: []
      summary: Retrieve a file with the given identifier
      description: ''
      operationId: downloadFile
      parameters:
        - name: fileId
          in: path
          description: Identifier of the file to retrieve
          required: true
          schema:
            type: string
        - name: attach
          in: query
          description: >-
            True to force the browser to download the file, false to inline the
            content
          required: false
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: successful operation
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          description: Invalid data supplied
        '404':
          description: Attachment with the given identifier is not found
      tags:
        - Files
    put:
      security:
        - Authorization: []
      summary: Rename a file (implemented for Salesforce only)
      description: ''
      operationId: renameFile
      parameters:
        - name: fileId
          in: path
          description: Identifier of the file to rename
          required: true
          schema:
            type: string
        - name: name
          in: query
          description: The new name of the file
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                  - success
                properties:
                  id:
                    type: string
                  success:
                    type: boolean
        '400':
          description: Invalid data supplied
        '404':
          description: Attachment with the given identifier is not found
      tags:
        - Files
    delete:
      security:
        - Authorization: []
      summary: Find attachments that belong to the parent
      description: ''
      operationId: deleteFile
      parameters:
        - name: fileId
          in: path
          description: Identifier of the attachment to delete
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - deleted
                properties:
                  deleted:
                    type: string
        '400':
          description: Invalid data supplied
        '404':
          description: Attachment with the given identifier is not found
      tags:
        - Files
  /files/attachments:
    get:
      summary: Find attachments that belong to the parent
      description: ''
      operationId: getFiles
      parameters:
        - name: parent_ids
          in: query
          description: >-
            Comma-separated identifiers of the parents to retrieve attachments
            for
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: array
                  items:
                    type: object
                    required:
                      - fileName
                      - filePtr
                      - parentId
                      - uploadDate
                    properties:
                      filePtr:
                        type: string
                      size:
                        type: string
                      contentType:
                        type: string
                      fileName:
                        type: string
                      uploadDate:
                        type: string
                        format: date-time
                      parentId:
                        type: string
                      createdBy:
                        type: string
                      createdById:
                        type: string
                      description:
                        type: string
                      downloadUrl:
                        type: string
        '404':
          description: Resource with parent identifier not found
      tags:
        - Files
  '/files/attachments/{parentId}':
    get:
      summary: Find attachments that belong to the parent
      description: ''
      operationId: getFilesSingle
      parameters:
        - name: parentId
          in: path
          description: Identifier of the parent to retrieve attachments for
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      type: object
                      required:
                        - fileName
                        - filePtr
                        - parentId
                        - uploadDate
                      properties:
                        filePtr:
                          type: string
                        size:
                          type: string
                        contentType:
                          type: string
                        fileName:
                          type: string
                        uploadDate:
                          type: string
                          format: date-time
                        parentId:
                          type: string
                        createdBy:
                          type: string
                        createdById:
                          type: string
                        description:
                          type: string
                        downloadUrl:
                          type: string
        '404':
          description: Resource with parent identifier not found
      tags:
        - Files
    put:
      summary: >-
        Upload an attachment to a parent resource. Content-Length and
        Content-Type are required.
      description: ''
      operationId: uploadReturnOldMeta
      parameters:
        - name: parentId
          in: path
          description: Identifier of the parent to add the attachment to
          required: true
          schema:
            type: string
        - name: X-Skedulo-Name
          in: header
          description: The name of the attachment
          required: true
          schema:
            type: string
        - name: X-Skedulo-Description
          in: header
          description: An optional description of the attachment
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    required:
                      - fileName
                      - filePtr
                      - parentId
                      - uploadDate
                    properties:
                      filePtr:
                        type: string
                      size:
                        type: string
                      contentType:
                        type: string
                      fileName:
                        type: string
                      uploadDate:
                        type: string
                        format: date-time
                      parentId:
                        type: string
                      createdBy:
                        type: string
                      createdById:
                        type: string
                      description:
                        type: string
                      downloadUrl:
                        type: string
        '400':
          description: Invalid data supplied
      tags:
        - Files
    post:
      summary: >-
        Upload an attachment to a parent resource. Content-Length and
        Content-Type are required.
      description: ''
      operationId: uploadReturnNewMeta
      parameters:
        - name: parentId
          in: path
          description: Identifier of the parent to add the attachment to
          required: true
          schema:
            type: string
        - name: X-Skedulo-Name
          in: header
          description: The name of the attachment
          required: true
          schema:
            type: string
        - name: X-Skedulo-Description
          in: header
          description: An optional description of the attachment
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    required:
                      - id
                      - parentId
                      - name
                      - createdById
                      - createdDate
                    properties:
                      id:
                        type: string
                      parentId:
                        type: string
                      contentType:
                        type: string
                      name:
                        type: string
                      createdDate:
                        type: string
                        format: date-time
                      contentLength:
                        type: string
                      createdById:
                        type: string
                      description:
                        type: string
                      downloadUrl:
                        type: string
        '400':
          description: Invalid data supplied
      tags:
        - Files
  /files/avatar:
    get:
      summary: Return a map of (userId -> url) for the given userIds
      description: ''
      operationId: getAvatarFor
      parameters:
        - name: user_ids
          in: query
          description: Comma-separated identifiers of the users to get the avatar urls for
          required: true
          schema:
            type: string
        - name: size_hint
          in: query
          description: >-
            Requested image size. Return thumbnail image for 'small' or
            'thumbnail' input, full image otherwise
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    additionalProperties:
                      type: string
                  errors:
                    type: object
                    additionalProperties:
                      type: object
                      required:
                        - errorType
                        - errorMsg
                      properties:
                        errorType:
                          type: string
                        errorMsg:
                          type: string
                  extra:
                    type: object
                    additionalProperties:
                      type: object
                      required:
                        - signature
                        - expiry
                      properties:
                        signature:
                          type: string
                        expiry:
                          type: string
        '404':
          description: User with the given identifier not found
      tags:
        - Files
  /geoservices/distanceMatrix:
    post:
      security:
        - Authorization: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - origins
                - destinations
              properties:
                origins:
                  type: array
                  description: must be non-empty
                  items:
                    type: object
                    required:
                      - lat
                      - lng
                    properties:
                      lat:
                        description: '-90 <= y <= 90'
                        type: number
                      lng:
                        description: '-180 <= x <= 180'
                        type: number
                destinations:
                  type: array
                  description: must be non-empty
                  items:
                    type: object
                    required:
                      - lat
                      - lng
                    properties:
                      lat:
                        description: '-90 <= y <= 90'
                        type: number
                      lng:
                        description: '-180 <= x <= 180'
                        type: number
              example:
                - origins:
                    - lat: -26.635265
                      lng: 153.067972
                  destinations:
                    - lat: -27.457768
                      lng: 153.03583
        required: true
      summary: Compute the Distance Matrix for origin and destination addresses
      description: >-
        The Distance Matrix endpoint computes travel distance and time for all
        combinations of origin and destination locations, based on the
        recommended route between start and end points.

        It should be noted that there are limits on the total number elements
        that can be requested and that large requests (where origins *
        destinations > 1000) may take several seconds to satisfy. These limits
        may vary depending on your underlying configuration.
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - matrix
                  - vendor
                properties:
                  matrix:
                    type: array
                    items:
                      type: array
                      items:
                        type: object
                        required:
                          - status
                        discriminator:
                          propertyName: status
                        properties:
                          status:
                            type: string
                            enum:
                              - OK
                              - NO_ROUTE
                          duration:
                            type: object
                            required:
                              - durationInSeconds
                            properties:
                              durationInSeconds:
                                type: number
                          distance:
                            type: object
                            required:
                              - distanceInMeters
                            properties:
                              distanceInMeters:
                                type: number
                  vendor:
                    type: string
                    enum:
                      - GOOGLE
                      - GRAPHHOPPER
                      - LINEOFSIGHT
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
      tags:
        - Geoservices
  /geoservices/directions:
    post:
      security:
        - Authorization: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - requests
              properties:
                requests:
                  type: array
                  items:
                    type: object
                    required:
                      - origin
                      - destination
                    properties:
                      origin:
                        type: object
                        required:
                          - lat
                          - lng
                        properties:
                          lat:
                            description: '-90 <= y <= 90'
                            type: number
                          lng:
                            description: '-180 <= x <= 180'
                            type: number
                      destination:
                        type: object
                        required:
                          - lat
                          - lng
                        properties:
                          lat:
                            description: '-90 <= y <= 90'
                            type: number
                          lng:
                            description: '-180 <= x <= 180'
                            type: number
                      waypoints:
                        type: array
                        items:
                          type: object
                          required:
                            - lat
                            - lng
                          properties:
                            lat:
                              description: '-90 <= y <= 90'
                              type: number
                            lng:
                              description: '-180 <= x <= 180'
                              type: number
                avoid:
                  type: array
                  items:
                    type: string
                    enum:
                      - ferry
                      - highway
                      - toll
        required: true
      summary: Find directions between two locations
      description: >-
        The Directions endpoint calculates directions between source and
        destination addresses, possibly including multiple waypoints enroute. It
        returns the recommended travel route (if one can be found), along with
        estimated travel time and distance.
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - routes
                properties:
                  routes:
                    type: array
                    items:
                      type: array
                      items:
                        type: object
                        required:
                          - leg
                          - travelInfo
                        properties:
                          leg:
                            type: object
                            required:
                              - origin
                              - destination
                              - avoid
                            properties:
                              origin:
                                type: object
                                required:
                                  - lat
                                  - lng
                                properties:
                                  lat:
                                    description: '-90 <= y <= 90'
                                    type: number
                                  lng:
                                    description: '-180 <= x <= 180'
                                    type: number
                              destination:
                                type: object
                                required:
                                  - lat
                                  - lng
                                properties:
                                  lat:
                                    description: '-90 <= y <= 90'
                                    type: number
                                  lng:
                                    description: '-180 <= x <= 180'
                                    type: number
                              avoid:
                                type: array
                                items:
                                  type: string
                                  enum:
                                    - ferry
                                    - highway
                                    - toll
                          travelInfo:
                            type: object
                            required:
                              - status
                            discriminator:
                              propertyName: status
                            properties:
                              status:
                                type: string
                                enum:
                                  - OK
                                  - NO_ROUTE
                              duration:
                                type: object
                                required:
                                  - durationInSeconds
                                properties:
                                  durationInSeconds:
                                    type: number
                              distance:
                                type: object
                                required:
                                  - distanceInMeters
                                properties:
                                  distanceInMeters:
                                    type: number
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
      tags:
        - Geoservices
  /geoservices/geocode:
    post:
      security:
        - Authorization: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - addresses
              properties:
                addresses:
                  type: array
                  items:
                    type: string
                language:
                  type: string
                  description: >-
                    Return addresses in the given language. Must be a language
                    code.
        required: true
      summary: Geocode an address
      description: >-
        For a given list of addreseses, returns a list of geocoded `LatLng`, or
        errors.
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      type: object
                      description: >-
                        Either the 'GeocodeSuccess' key or the 'GeocodeFailure'
                        key will be present
                      properties:
                        GeocodeSuccess:
                          required:
                            - address
                            - latlng
                          properties:
                            address:
                              type: string
                            latlng:
                              type: object
                              required:
                                - lat
                                - lng
                              properties:
                                lat:
                                  description: '-90 <= y <= 90'
                                  type: number
                                lng:
                                  description: '-180 <= x <= 180'
                                  type: number
                        GeocodeFailure:
                          required:
                            - address
                            - reason
                          properties:
                            address:
                              type: string
                            reason:
                              type: object
                              required:
                                - msg
                              properties:
                                msg:
                                  type: string
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
      tags:
        - Geoservices
  /geoservices/autocomplete:
    post:
      security:
        - Authorization: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - input
                - sessionId
              properties:
                input:
                  type: string
                sessionId:
                  type: string
                  format: uuid
                  description: >-
                    A caller-generated uuid to signify a session, which consists
                    of multiple autocomplete requests and ends with a place
                    fetch request. A different session should use a different
                    sessionId
                location:
                  type: object
                  required:
                    - lat
                    - lng
                  properties:
                    lat:
                      description: '-90 <= y <= 90'
                      type: number
                    lng:
                      description: '-180 <= x <= 180'
                      type: number
                country:
                  type: string
                  description: 'A two character, ISO 3166-1 Alpha-2 compatible country code'
        required: true
      summary: Address Autocomplete
      description: >-
        For a given input string, return a list of address suggestions, or
        error.
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      type: object
                      required:
                        - predictions
                        - status
                      properties:
                        predictions:
                          type: object
                          required:
                            - description
                            - placeId
                          properties:
                            description:
                              type: string
                            placeId:
                              type: string
                              description: >-
                                Unique id for the suggested place, to be used
                                with fetch place endpoint.
                        status:
                          type: string
                          enum:
                            - OK
                            - ZERO_RESULTS
                        errorMessage:
                          type: string
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
      tags:
        - Geoservices
  /geoservices/place:
    post:
      security:
        - Authorization: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - placeId
                - sessionId
              properties:
                placeId:
                  type: string
                  description: >-
                    Unique id for a place in Google system, obtained from
                    autocomplete endpoint.
                sessionId:
                  type: string
                  format: uuid
                  description: >-
                    A caller-generated uuid that may have been used in an
                    autocomplete session.
        required: true
      summary: Fetch Place Detail
      description: 'For a given place Id, return the detailed information for that place.'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - addressComponents
                  - formattedAddress
                  - geometry
                properties:
                  addressComponents:
                    type: object
                    properties:
                      streetNumber:
                        type: string
                      route:
                        type: string
                      locality:
                        type: string
                      area2:
                        type: string
                      area1:
                        type: string
                      country:
                        type: string
                      postalCode:
                        type: string
                  formattedAddress:
                    type: string
                  geometry:
                    type: object
                    required:
                      - lat
                      - lng
                    properties:
                      lat:
                        description: '-90 <= y <= 90'
                        type: number
                      lng:
                        description: '-180 <= x <= 180'
                        type: number
        '400':
          description: invalid request
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
      tags:
        - Geoservices
  /geoservices/timezone:
    get:
      security:
        - Authorization: []
      parameters:
        - in: query
          name: location
          description: Latitude and Longitude of the location to find the timezone for
          required: true
          explode: false
          schema:
            type: array
            items:
              type: number
            minItems: 2
            maxItems: 2
        - in: query
          name: timestamp
          description: >-
            Seconds since 1970 for the timezone to return (used to compute DST
            offset)
          required: true
          schema:
            type: integer
      summary: Return timezone information for a location
      description: >-
        Given a location and timestamp return the timezone name, the offset and
        Daylight Savings offset.
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  dstOffset:
                    description: >-
                      The Daylight Savings time offset in seconds or 0 if no
                      Daylight Savings time is in effect.
                    type: number
                  rawOffset:
                    description: The offset in seconds from UTC for the given location.
                    type: number
                  timeZoneId:
                    description: >-
                      The id of the time zone, (e.g "Australia/Brisbane" as
                      defined by the Unicode Common Locale Data Repository
                      (CLDR) project.
                    type: string
                example:
                  dstOffset: 0
                  rawOffset: 36000
                  timeZoneId: Australia/Brisbane
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
      tags:
        - Geoservices
  /geoservices/invalidate:
    post:
      security:
        - Authorization: []
      parameters: []
      summary: Invalidate distance matrix vendor cache
      description: >-
        Invalidate the 1 hour TTL cache for distance matrix vendor used for
        distance matrix requests.  In the instance that the distance matrix
        vendor is changed via Org Preferences, this endpoint will make that
        change effective immediately.
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                properties:
                  result:
                    type: object
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
      tags:
        - Geoservices
  /ical/token:
    get:
      security:
        - Authorization: []
      summary: Create or fetch an iCal token for the current user
      description: ''
      operationId: getToken
      responses:
        '200':
          description: Returns the token
          content:
            application/json:
              schema:
                type: object
                required:
                  - result
                properties:
                  result:
                    type: object
                    required:
                      - value
                    properties:
                      value:
                        type: string
        '400':
          description: If the user does not have a resource id attached
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
        default:
          description: Error
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
      tags:
        - iCal token
  '/ical/{token}':
    get:
      summary: Fetch an iCal for the given token
      description: ''
      operationId: getICal
      parameters:
        - name: token
          in: path
          description: The token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Returns the iCal
          content:
            text/icalendar:
              schema:
                type: string
        '400':
          description: If the token is invalid
          content:
            text/icalendar:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
        default:
          description: Error
          content:
            text/icalendar:
              schema:
                type: object
                required:
                  - errorType
                  - message
                properties:
                  errorType:
                    type: string
                  message:
                    type: string
      tags:
        - iCal token
  /schedule/async/copy:
    post:
      deprecated: true
      summary: Make a copy of scheduled work
      description: >-
        This endpoint is deprecated, use `/schedule/copy` instead.


        Jobs, shifts and activities can be copied with their attached
        allocations/resources and other attachments (e.g. tags). EQL filters
        must be provided to specify the jobs, shifts and/or activities to be
        copied. The start and end times of the copied work items will be offset
        (incremented or decremented) by the provided number of days. Executed in
        the background as an asynchronous task.
      tags:
        - Schedule management
      operationId: copyScheduleAsync
      responses:
        '200':
          description: An asynchronous 'copy schedule' task has been scheduled.
          content:
            application/json:
              schema:
                type: object
                required:
                  - result
                properties:
                  result:
                    type: object
                    required:
                      - taskId
                      - totalJobs
                      - totalShifts
                      - totalActivities
                    properties:
                      taskId:
                        type: integer
                        description: >-
                          The ID of the asynchronous task. This ID can be used
                          to retrieve the status and results of the task.
                      totalJobs:
                        type: integer
                        description: The number of jobs that will be created.
                      totalShifts:
                        type: integer
                        description: The number of shifts that will be created.
                      totalActivities:
                        type: integer
                        description: The number of activities that will be created.
        '400':
          description: >-
            The request was badly formed, a copied work item would start in the
            past, or the work items to be copied couldn't be retrieved.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              description: >-
                Parameters required for copying a schedule of work and
                offsetting by a number of days.
              required:
                - offsetDays
              properties:
                jobs:
                  required:
                    - filter
                    - copyAllocations
                  properties:
                    filter:
                      type: string
                      description: >-
                        An EQL filter for the relevant schema that defines the
                        work items to be copied. To copy specific work items by
                        UID, use a filter like "UID IN ['UID1', 'UID2']".
                    copyAllocations:
                      type: boolean
                      description: >-
                        Set to true to copy the allocations or resource
                        assignments on each work item. The start and end times
                        of copied allocations will also be offset. Copied job
                        allocations will be in the Pending Dispatch status.
                        Declined and Deleted allocations will not be copied.
                shifts:
                  required:
                    - filter
                    - copyAllocations
                  properties:
                    filter:
                      type: string
                      description: >-
                        An EQL filter for the relevant schema that defines the
                        work items to be copied. To copy specific work items by
                        UID, use a filter like "UID IN ['UID1', 'UID2']".
                    copyAllocations:
                      type: boolean
                      description: >-
                        Set to true to copy the allocations or resource
                        assignments on each work item. The start and end times
                        of copied allocations will also be offset. Copied job
                        allocations will be in the Pending Dispatch status.
                        Declined and Deleted allocations will not be copied.
                activities:
                  required:
                    - filter
                    - copyAllocations
                  properties:
                    filter:
                      type: string
                      description: >-
                        An EQL filter for the relevant schema that defines the
                        work items to be copied. To copy specific work items by
                        UID, use a filter like "UID IN ['UID1', 'UID2']".
                    copyAllocations:
                      type: boolean
                      description: >-
                        Set to true to copy the allocations or resource
                        assignments on each work item. The start and end times
                        of copied allocations will also be offset. Copied job
                        allocations will be in the Pending Dispatch status.
                        Declined and Deleted allocations will not be copied.
                offsetDays:
                  type: integer
                  description: >-
                    The number of days to offset the start and end times of work
                    items and associated objects. The offset can be positive,
                    zero or negative. If any work item would be offset to start
                    in the past, the request will fail. If the offset is
                    non-zero, all work items must have a start time.
      security:
        - Authorization: []
  /schedule/copy:
    post:
      summary: Make a copy of scheduled work
      description: >-
        Jobs, shifts and activities can be copied with their attached
        allocations/resources and other attachments (e.g. tags). EQL filters
        must be provided to specify the jobs, shifts and/or activities to be
        copied. The start and end times of the copied work items will be offset
        (incremented or decremented) by the provided number of days. Executed in
        the background as an asynchronous task.
      tags:
        - Schedule management
      operationId: copySchedule
      responses:
        '200':
          description: An asynchronous 'copy schedule' task has been scheduled.
          content:
            application/json:
              schema:
                type: object
                required:
                  - result
                properties:
                  result:
                    type: object
                    required:
                      - taskId
                      - totalJobs
                      - totalShifts
                      - totalActivities
                    properties:
                      taskId:
                        type: integer
                        description: >-
                          The ID of the asynchronous task. This ID can be used
                          to retrieve the status and results of the task.
                      totalJobs:
                        type: integer
                        description: The number of jobs that will be created.
                      totalShifts:
                        type: integer
                        description: The number of shifts that will be created.
                      totalActivities:
                        type: integer
                        description: The number of activities that will be created.
        '400':
          description: >-
            The request was badly formed, a copied work item would start in the
            past, or the work items to be copied couldn't be retrieved.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              description: >-
                Parameters required for copying a schedule of work and
                offsetting by a number of days.
              required:
                - offsetDays
              properties:
                jobs:
                  required:
                    - filter
                    - copyAllocations
                  properties:
                    filter:
                      type: string
                      description: >-
                        An EQL filter for the relevant schema that defines the
                        work items to be copied. To copy specific work items by
                        UID, use a filter like "UID IN ['UID1', 'UID2']".
                    copyAllocations:
                      type: boolean
                      description: >-
                        Set to true to copy the allocations or resource
                        assignments on each work item. The start and end times
                        of copied allocations will also be offset. Copied job
                        allocations will be in the Pending Dispatch status.
                        Declined and Deleted allocations will not be copied.
                shifts:
                  required:
                    - filter
                    - copyAllocations
                  properties:
                    filter:
                      type: string
                      description: >-
                        An EQL filter for the relevant schema that defines the
                        work items to be copied. To copy specific work items by
                        UID, use a filter like "UID IN ['UID1', 'UID2']".
                    copyAllocations:
                      type: boolean
                      description: >-
                        Set to true to copy the allocations or resource
                        assignments on each work item. The start and end times
                        of copied allocations will also be offset. Copied job
                        allocations will be in the Pending Dispatch status.
                        Declined and Deleted allocations will not be copied.
                activities:
                  required:
                    - filter
                    - copyAllocations
                  properties:
                    filter:
                      type: string
                      description: >-
                        An EQL filter for the relevant schema that defines the
                        work items to be copied. To copy specific work items by
                        UID, use a filter like "UID IN ['UID1', 'UID2']".
                    copyAllocations:
                      type: boolean
                      description: >-
                        Set to true to copy the allocations or resource
                        assignments on each work item. The start and end times
                        of copied allocations will also be offset. Copied job
                        allocations will be in the Pending Dispatch status.
                        Declined and Deleted allocations will not be copied.
                offsetDays:
                  type: integer
                  description: >-
                    The number of days to offset the start and end times of work
                    items and associated objects. The offset can be positive,
                    zero or negative. If any work item would be offset to start
                    in the past, the request will fail. If the offset is
                    non-zero, all work items must have a start time.
      security:
        - Authorization: []
  '/schedule/async/copy/{taskId}':
    get:
      deprecated: true
      summary: Retrieve the status and results of an asynchronous copy schedule task.
      description: >-
        This endpoint is deprecated, use `/schedule/copy/{taskId}` instead.


        This endpoint can be polled to get the status of the task and the
        results of the operation, if any.
      tags:
        - Schedule management
      operationId: copyScheduleAsyncResults
      parameters:
        - name: taskId
          in: path
          description: ID of the asynchronous task to be queried.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: >-
            The status and results of the copy schedule task. Failed tasks will
            result in a 200 OK with status Failed.
          content:
            application/json:
              schema:
                type: object
                required:
                  - result
                properties:
                  result:
                    type: object
                    description: >-
                      The status of the asynchronous copy operation and
                      optionally the IDs and counts of work items that have been
                      created.
                    required:
                      - taskId
                      - status
                      - requestedTime
                    properties:
                      taskId:
                        type: integer
                      requestedTime:
                        type: string
                        description: The time at which the operation was requested.
                      completedTime:
                        type: string
                        description: >-
                          The time at which the operation completed. Present if
                          the status is not Pending, InProgress or Stalled.
                      status:
                        description: The status of an asychronous task.
                        type: string
                        enum:
                          - Pending
                          - InProgress
                          - Completed
                          - CompletedWithErrors
                          - Stalled
                          - Failed
                      jobs:
                        type: array
                        items:
                          type: object
                          required:
                            - original
                            - copy
                          properties:
                            original:
                              type: string
                              description: The ID of the original work item.
                            copy:
                              type: string
                              description: The ID of the copied work item.
                      shifts:
                        type: array
                        items:
                          type: object
                          required:
                            - original
                            - copy
                          properties:
                            original:
                              type: string
                              description: The ID of the original work item.
                            copy:
                              type: string
                              description: The ID of the copied work item.
                      activities:
                        type: array
                        items:
                          type: object
                          required:
                            - original
                            - copy
                          properties:
                            original:
                              type: string
                              description: The ID of the original work item.
                            copy:
                              type: string
                              description: The ID of the copied work item.
                      errors:
                        type: object
                        required:
                          - item
                          - errors
                        properties:
                          item:
                            type: object
                            required:
                              - schema
                              - operation
                            properties:
                              schema:
                                description: The type of object that was being modified.
                                type: string
                                example: JobAllocations
                              operation:
                                description: The operation that was being performed.
                                type: string
                                example: Insert
                              sourceUID:
                                description: >-
                                  The ID of the source object for this
                                  particular item (e.g. the original object for
                                  copy schedule, or the template object for
                                  apply template).
                                type: string
                          errors:
                            description: >-
                              The errors that occurred when executing the
                              operation.
                            type: array
                            items:
                              description: An error message
                              type: string
        '404':
          description: The task was not found.
      security:
        - Authorization: []
  '/schedule/copy/{taskId}':
    get:
      summary: Retrieve the status of an asynchronous copy schedule task.
      description: >-
        This endpoint can be polled to get the status of the task and the
        results of the operation, if any.
      tags:
        - Schedule management
      operationId: copyScheduleResults
      parameters:
        - name: taskId
          in: path
          description: ID of the asynchronous task to be queried.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: >-
            The status and results of the copy schedule task. Failed tasks will
            result in a 200 OK with status Failed.
          content:
            application/json:
              schema:
                type: object
                required:
                  - result
                properties:
                  result:
                    type: object
                    description: >-
                      The status of the asynchronous copy operation and
                      optionally the IDs and counts of work items that have been
                      created.
                    required:
                      - taskId
                      - status
                      - requestedTime
                    properties:
                      taskId:
                        type: integer
                      requestedTime:
                        type: string
                        description: The time at which the operation was requested.
                      completedTime:
                        type: string
                        description: >-
                          The time at which the operation completed. Present if
                          the status is not Pending, InProgress or Stalled.
                      status:
                        description: The status of an asychronous task.
                        type: string
                        enum:
                          - Pending
                          - InProgress
                          - Completed
                          - CompletedWithErrors
                          - Stalled
                          - Failed
                      jobs:
                        type: array
                        items:
                          type: object
                          required:
                            - original
                            - copy
                          properties:
                            original:
                              type: string
                              description: The ID of the original work item.
                            copy:
                              type: string
                              description: The ID of the copied work item.
                      shifts:
                        type: array
                        items:
                          type: object
                          required:
                            - original
                            - copy
                          properties:
                            original:
                              type: string
                              description: The ID of the original work item.
                            copy:
                              type: string
                              description: The ID of the copied work item.
                      activities:
                        type: array
                        items:
                          type: object
                          required:
                            - original
                            - copy
                          properties:
                            original:
                              type: string
                              description: The ID of the original work item.
                            copy:
                              type: string
                              description: The ID of the copied work item.
                      errors:
                        type: object
                        required:
                          - item
                          - errors
                        properties:
                          item:
                            type: object
                            required:
                              - schema
                              - operation
                            properties:
                              schema:
                                description: The type of object that was being modified.
                                type: string
                                example: JobAllocations
                              operation:
                                description: The operation that was being performed.
                                type: string
                                example: Insert
                              sourceUID:
                                description: >-
                                  The ID of the source object for this
                                  particular item (e.g. the original object for
                                  copy schedule, or the template object for
                                  apply template).
                                type: string
                          errors:
                            description: >-
                              The errors that occurred when executing the
                              operation.
                            type: array
                            items:
                              description: An error message
                              type: string
        '404':
          description: The task was not found.
      security:
        - Authorization: []
  /schedule/sync/dispatch:
    post:
      summary: Dispatch allocated work
      description: >-
        Multiple jobs and shifts can be dispatched/published in one request. EQL
        filters must be provided to specify the jobs and shifts to be
        dispatched. Summary notifications can optionally be sent to each
        resource. Individual notifications will not be sent for each job/shift.
      tags:
        - Schedule management
      operationId: dispatchSchedule
      responses:
        '200':
          description: The operation has completed.
          content:
            application/json:
              schema:
                description: >-
                  A summary of the operations that were executed and any errors
                  that apply to specific work items or resources.
                type: object
                required:
                  - result
                properties:
                  result:
                    type: object
                    required:
                      - jobs
                      - shifts
                      - resources
                      - resourceIds
                      - dispatchErrorDetails
                      - notificationErrors
                      - notificationErrorDetails
                    properties:
                      jobs:
                        type: number
                        description: The number of jobs that had allocations dispatched.
                      shifts:
                        type: number
                        description: The number of shifts that were published.
                      resources:
                        deprecated: true
                        type: number
                        description: >-
                          The number of resources that received a dispatched job
                          or shift. This is deprecated. Use the length of
                          resourceIds instead.
                      resourceIds:
                        type: array
                        description: The IDs of resources that had work items updated.
                        items:
                          type: string
                      dispatchErrorDetails:
                        type: array
                        description: >-
                          Details of any errors that occurred when updating work
                          items.
                        items:
                          description: >-
                            Details of an error that occurred when trying to
                            update a work item for dispatch.
                          required:
                            - errorType
                            - message
                          properties:
                            jobId:
                              type: string
                              description: The ID of the job that could not be updated.
                            shiftId:
                              type: string
                              description: The ID of the shift that could not be updated.
                            errorType:
                              type: string
                              format: uuid
                              description: Identifies the type of error that occurred.
                            message:
                              type: string
                              format: uuid
                              description: A description of the error.
                      notificationErrors:
                        deprecated: true
                        type: number
                        description: >-
                          The number of resources that had an error when
                          attempting to send a notification. This is deprecated.
                          Use the length of notificationErrorDetails instead.
                      notificationErrorDetails:
                        type: array
                        description: >-
                          Details of any errors that occurred when notifying
                          resources about dispatched work items.
                        items:
                          description: >-
                            Details of an error that occurred when trying to
                            notify a resource about a dispatched schedule of
                            work items.
                          required:
                            - resourceId
                            - errorType
                            - message
                          properties:
                            resourceId:
                              type: string
                              description: >-
                                The ID of the resource that could not be
                                notified.
                            errorType:
                              type: string
                              description: Identifies the type of error that occurred.
                            message:
                              type: string
                              description: A description of the error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - notifySummary
              properties:
                jobsFilter:
                  type: string
                  description: An EQL filter for the jobs to be dispatched.
                shifts:
                  type: string
                  description: An EQL filter for the shifts to be dispatched.
                notifySummary:
                  type: boolean
                  description: >-
                    If set to true, a notification will be sent to each resource
                    summarizing the number of jobs and/or shifts that were
                    dispatched.
      security:
        - Authorization: []
  /schedule/template/apply:
    post:
      summary: Apply a template at a point in time.
      description: >-
        A schedule template is converted to real jobs, shifts and activities,
        starting at the given date. Executed in the background as an
        asynchronous task.
      tags:
        - Schedule management
      operationId: applyScheduleTemplate
      responses:
        '200':
          description: An asynchronous 'apply template' task has been scheduled.
          content:
            application/json:
              schema:
                type: object
                required:
                  - result
                properties:
                  result:
                    type: object
                    required:
                      - taskId
                      - totalJobs
                      - totalShifts
                      - totalActivities
                    properties:
                      taskId:
                        type: integer
                        description: >-
                          The ID of the asynchronous task. This ID can be used
                          to retrieve the status and results of the task.
                      totalJobs:
                        type: integer
                        description: The number of jobs that will be created.
                      totalShifts:
                        type: integer
                        description: The number of shifts that will be created.
                      totalActivities:
                        type: integer
                        description: The number of activities that will be created.
        '400':
          description: The request was badly formed.
        '404':
          description: The schedule template was not found.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              description: Parameters required for applying a schedule template.
              required:
                - templateId
                - startDate
              properties:
                templateId:
                  description: The ID of the schedule template to be applied.
                  type: string
                startDate:
                  description: The date from which the template should be applied.
                  format: date
                  type: string
                  example: '2020-06-14'
      security:
        - Authorization: []
  '/schedule/template/apply/{taskId}':
    get:
      summary: >-
        Retrieve the status and results of an asynchronous 'apply template'
        task.
      description: >-
        This endpoint can be polled to get the status of the task and the
        results of the operation, if any.
      tags:
        - Schedule management
      operationId: applyScheduleTemplateResults
      parameters:
        - name: taskId
          in: path
          description: ID of the asynchronous task to be queried.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: >-
            The status and results of the task. Failed tasks will result in a
            200 OK with status Failed.
          content:
            application/json:
              schema:
                type: object
                required:
                  - result
                properties:
                  result:
                    type: object
                    description: >-
                      The status of the asynchronous 'apply template' task and
                      optionally the IDs of work items that have been created.
                    required:
                      - taskId
                      - status
                      - requestedTime
                    properties:
                      taskId:
                        type: integer
                      status:
                        description: The status of an asychronous task.
                        type: string
                        enum:
                          - Pending
                          - InProgress
                          - Completed
                          - CompletedWithErrors
                          - Stalled
                          - Failed
                      templateName:
                        description: The name of the scheduled template.
                        type: string
                      startDate:
                        description: The start date that was requested.
                        format: date
                        type: string
                      endDate:
                        description: >-
                          Not currently supported. The requested end date that
                          the applied template should cover.
                        format: date
                        type: string
                      lastWorkItemDate:
                        description: >-
                          The last date that a work item was scheduled. This may
                          be before `endDate` if there are empty days at the end
                          of the template.
                        format: date
                        type: string
                      periodDays:
                        description: The period of the template in days.
                        type: integer
                      newWorkItems:
                        type: object
                        required:
                          - jobs
                          - shifts
                          - activities
                          - errors
                        properties:
                          jobs:
                            type: array
                            description: The IDs of jobs that have been created.
                            items:
                              type: string
                          shifts:
                            type: array
                            description: The IDs of shifts that have been created.
                            items:
                              type: string
                          activities:
                            type: array
                            description: The IDs of activities that have been created.
                            items:
                              type: string
                          errors:
                            type: array
                            description: >-
                              Details of any errors that occurred when creating
                              new work items.
                            items:
                              type: object
                              required:
                                - item
                                - errors
                              properties:
                                item:
                                  type: object
                                  required:
                                    - schema
                                    - operation
                                  properties:
                                    schema:
                                      description: >-
                                        The type of object that was being
                                        modified.
                                      type: string
                                      example: JobAllocations
                                    operation:
                                      description: The operation that was being performed.
                                      type: string
                                      example: Insert
                                    sourceUID:
                                      description: >-
                                        The ID of the source object for this
                                        particular item (e.g. the original
                                        object for copy schedule, or the
                                        template object for apply template).
                                      type: string
                                errors:
                                  description: >-
                                    The errors that occurred when executing the
                                    operation.
                                  type: array
                                  items:
                                    description: An error message
                                    type: string
                      requestedTime:
                        type: string
                        description: The time at which the operation was requested.
                      completedTime:
                        type: string
                        description: >-
                          The time at which the operation completed. Present if
                          the status is not Pending, InProgress or Stalled.
        '404':
          description: The task was not found.
      security:
        - Authorization: []
  /recurring/schedules:
    get:
      summary: Recurring schedules summaries
      description: Get a list of recurring schedules summaries
      tags:
        - Recurring schedules
      operationId: listRecurringSchedules
      parameters:
        - name: page
          in: query
          description: page number to fetch. Defaults to 1 if not provided.
          schema:
            type: number
        - name: per_page
          in: query
          description: >-
            number of items to fetch per page. Defaults to 20 if not provided.
            Maximum allowed is 50.
          schema:
            type: number
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                type: object
                required:
                  - result
                properties:
                  result:
                    description: List of recurring schedule summaries
                    type: object
                    required:
                      - currentPage
                      - numPages
                      - totalCount
                      - scheduleSummaries
                    properties:
                      currentPage:
                        type: number
                        description: current page. Starts from 1
                      numPages:
                        type: number
                        description: total number of pages
                      totalCount:
                        type: number
                        description: total number of recurring schedules
                      scheduleSummaries:
                        type: array
                        items:
                          type: object
                          required:
                            - id
                            - name
                            - completedJobCount
                            - allJobCount
                          properties:
                            id:
                              type: string
                            name:
                              type: string
                            description:
                              type: string
                            completedJobCount:
                              type: number
                              description: >-
                                Number of jobs in this recurring schedule that
                                have been completed
                            allJobCount:
                              type: number
                              description: >-
                                total number of jobs in this recurring schedule
                                (excluding cancelled jobs)
                            summary:
                              type: string
                            accountId:
                              type: string
                              description: >-
                                Account ID assigned to jobs of this recurring
                                schedule. Note that this is obtained from the
                                first job that has an Account ID
                            contactId:
                              type: string
                              description: >-
                                Contact ID assigned to jobs of this recurring
                                schedule. Note that this is obtained from the
                                first job that has a Contact ID
                            start:
                              type: string
                              format: date-time
                              description: >-
                                First occurence of this recurring schedule
                                (first job)
                            end:
                              type: string
                              format: date-time
                              description: >-
                                Last occurence of this recurring schedule (last
                                job)
      security:
        - Authorization: []
  /recurring/schedules/jobs/existing:
    post:
      summary: Create recurring schedule from an existing job
      description: >-
        Fields and Child relationships can be specified (e.g. Giving created
        jobs the same job tags or allocations). By default, required Job fields
        like Region ID and duration will be propagated even if not specified
      tags:
        - Recurring schedules
      operationId: createRecurringScheduleFromExistingJob
      responses:
        '200':
          description: Recurring jobs created
          content:
            application/json:
              schema:
                type: object
                required:
                  - result
                properties:
                  result:
                    type: string
                    description: ID of the created Recurring Schedule
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - jobId
                - pattern
                - fieldsToPropagate
              properties:
                jobId:
                  type: string
                pattern:
                  type: object
                  required:
                    - type
                    - step
                    - ackAllJobs
                  properties:
                    type:
                      type: string
                      enum:
                        - dates_only
                        - rule
                      description: >-
                        If the type is 'dates_only', Only 'includeDates' will be
                        used to generate job times
                    endOn:
                      description: >-
                        Date the pattern should end on. If using this, do not
                        provide endAfterNumberOccurrences
                      type: string
                      format: date
                      example: '2020-05-13'
                    endAfterNumberOccurrences:
                      description: >
                        Number of occurrence to generate. If using this, do not
                        provide endOn.

                        Note: when repeatMode is 'weekly', this value means the
                        number of week periods to generate the intervals from,

                        So when endAfterNumberOccurrences = 4, only the next 4
                        weeks will be checked (some weeks may not generated an
                        interval due

                        to other rules, leading to less than 4 intervals being
                        generated in total)
                      type: number
                      example: 5
                    repeatMode:
                      description: How occurences are repeated
                      type: string
                      enum:
                        - daily
                        - weekly
                        - monthly_nth_day
                        - yearly
                    step:
                      description: >
                        How many days/months/years between each generated
                        interval. For example, with repeatMode = 'daily' and
                        step = 1, an interval will be generated every day
                      type: number
                    skipOnWeekDays:
                      description: >-
                        days of the week to skip. If an interval falls on this
                        day of the week, it will be skipped
                      type: array
                      items:
                        type: string
                        enum:
                          - mon
                          - tue
                          - wed
                          - thu
                          - fri
                          - sat
                          - sun
                      example:
                        - mon
                        - tue
                    repeatOnWeekDays:
                      description: >-
                        The days of week intervals can occur on. Only applies
                        when repeatMode = 'weekly'.
                      type: array
                      items:
                        type: string
                        enum:
                          - mon
                          - tue
                          - wed
                          - thu
                          - fri
                          - sat
                          - sun
                    skipHolidays:
                      type: boolean
                      description: >-
                        Whether to skip holidays when generating future jobs
                        (Considers both regional and global holidays)
                      default: false
                    ackAllJobs:
                      description: >-
                        If true, job allocations for each job will need to be
                        acknowledged by the resource
                      type: boolean
                    excludeDates:
                      description: A list of dates a recurring job cannot occur on
                      type: array
                      items:
                        type: string
                        format: date
                    includeDates:
                      description: >-
                        A list of dates the job will occur on. This is in
                        addition to all dates generated by the rule and ignores
                        any dates listed in excludeDates
                      type: array
                      items:
                        type: string
                        format: date
                fieldsToPropagate: {}
                recurFrom:
                  type: string
                  format: date-time
                  example: '2017-05-17T03:30:00Z'
                  description: >-
                    Overrides the start time used to generate the jobs. This
                    value is required if the base job does not have a start/end
                    time, and the base job will be updated to have start/end of
                    the first generated interval. If the base job already has a
                    start/end time, its start/end will not be modified.
        required: true
      security:
        - Authorization: []
  '/recurring/schedules/{id}':
    get:
      summary: Summary of a recurring schedule
      description: Get summary of a recurring schedule
      tags:
        - Recurring schedules
      operationId: getSingleRecurringSchedules
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                type: object
                required:
                  - result
                properties:
                  result:
                    description: >-
                      Detailed summary of a recurring schedule, containing
                      information about the jobs in this schedule. Cancelled job
                      are excluded.
                    allOf:
                      - type: object
                        required:
                          - id
                          - name
                          - completedJobCount
                          - allJobCount
                        properties:
                          id:
                            type: string
                          name:
                            type: string
                          description:
                            type: string
                          completedJobCount:
                            type: number
                            description: >-
                              Number of jobs in this recurring schedule that
                              have been completed
                          allJobCount:
                            type: number
                            description: >-
                              total number of jobs in this recurring schedule
                              (excluding cancelled jobs)
                          summary:
                            type: string
                          accountId:
                            type: string
                            description: >-
                              Account ID assigned to jobs of this recurring
                              schedule. Note that this is obtained from the
                              first job that has an Account ID
                          contactId:
                            type: string
                            description: >-
                              Contact ID assigned to jobs of this recurring
                              schedule. Note that this is obtained from the
                              first job that has a Contact ID
                          start:
                            type: string
                            format: date-time
                            description: >-
                              First occurence of this recurring schedule (first
                              job)
                          end:
                            type: string
                            format: date-time
                            description: >-
                              Last occurence of this recurring schedule (last
                              job)
                      - properties:
                          jobs:
                            type: array
                            items:
                              type: object
                              properties:
                                UID:
                                  type: string
                                status:
                                  type: string
                                  enum:
                                    - Queued
                                    - Pending Allocation
                                    - Pending Dispatch
                                    - Dispatched
                                    - Ready
                                    - En Route
                                    - On Site
                                    - In Progress
                                    - Complete
                                start:
                                  type: string
                                  format: date-time
                                end:
                                  type: string
                                  format: date-time
                                account:
                                  type: object
                                  properties:
                                    UID:
                                      type: string
                                    name:
                                      type: string
                                  required:
                                    - UID
                                    - name
                                contact:
                                  type: object
                                  properties:
                                    UID:
                                      type: string
                                    fullName:
                                      type: string
                                    phone:
                                      type: string
                                    email:
                                      type: string
                                  required:
                                    - UID
                                    - fullName
                                region:
                                  type: object
                                  properties:
                                    UID:
                                      type: string
                                    name:
                                      type: string
                                  required:
                                    - UID
                                    - name
                              required:
                                - UID
                                - status
                                - region
                          nextJob:
                            type: string
                            description: ID of the next job
                        required:
                          - jobs
        '404':
          description: Recurring schedule with given ID cannot be found
      security:
        - Authorization: []
  /recurring/schedules/jobs/preview:
    post:
      summary: Preview job recurring schedule
      description: >-
        Preview the intervals that will be generated for a given recurrence
        pattern and job details
      tags:
        - Recurring schedules
      operationId: preview
      responses:
        '200':
          description: Successful result
          content:
            application/json:
              schema:
                type: object
                required:
                  - result
                properties:
                  result:
                    description: >-
                      An array of intervals (start/end) in ISO-8061 format
                      (without millisecond part)
                    type: array
                    items:
                      type: object
                      required:
                        - start
                        - end
                      properties:
                        start:
                          type: string
                          format: date-time
                          example: '2017-05-17T03:30:00Z'
                        end:
                          type: string
                          format: date-time
                          example: '2017-05-17T04:30:00Z'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - pattern
                - baseJob
              properties:
                pattern:
                  type: object
                  required:
                    - type
                    - step
                    - ackAllJobs
                  properties:
                    type:
                      type: string
                      enum:
                        - dates_only
                        - rule
                      description: >-
                        If the type is 'dates_only', Only 'includeDates' will be
                        used to generate job times
                    endOn:
                      description: >-
                        Date the pattern should end on. If using this, do not
                        provide endAfterNumberOccurrences
                      type: string
                      format: date
                      example: '2020-05-13'
                    endAfterNumberOccurrences:
                      description: >
                        Number of occurrence to generate. If using this, do not
                        provide endOn.

                        Note: when repeatMode is 'weekly', this value means the
                        number of week periods to generate the intervals from,

                        So when endAfterNumberOccurrences = 4, only the next 4
                        weeks will be checked (some weeks may not generated an
                        interval due

                        to other rules, leading to less than 4 intervals being
                        generated in total)
                      type: number
                      example: 5
                    repeatMode:
                      description: How occurences are repeated
                      type: string
                      enum:
                        - daily
                        - weekly
                        - monthly_nth_day
                        - yearly
                    step:
                      description: >
                        How many days/months/years between each generated
                        interval. For example, with repeatMode = 'daily' and
                        step = 1, an interval will be generated every day
                      type: number
                    skipOnWeekDays:
                      description: >-
                        days of the week to skip. If an interval falls on this
                        day of the week, it will be skipped
                      type: array
                      items:
                        type: string
                        enum:
                          - mon
                          - tue
                          - wed
                          - thu
                          - fri
                          - sat
                          - sun
                      example:
                        - mon
                        - tue
                    repeatOnWeekDays:
                      description: >-
                        The days of week intervals can occur on. Only applies
                        when repeatMode = 'weekly'.
                      type: array
                      items:
                        type: string
                        enum:
                          - mon
                          - tue
                          - wed
                          - thu
                          - fri
                          - sat
                          - sun
                    skipHolidays:
                      type: boolean
                      description: >-
                        Whether to skip holidays when generating future jobs
                        (Considers both regional and global holidays)
                      default: false
                    ackAllJobs:
                      description: >-
                        If true, job allocations for each job will need to be
                        acknowledged by the resource
                      type: boolean
                    excludeDates:
                      description: A list of dates a recurring job cannot occur on
                      type: array
                      items:
                        type: string
                        format: date
                    includeDates:
                      description: >-
                        A list of dates the job will occur on. This is in
                        addition to all dates generated by the rule and ignores
                        any dates listed in excludeDates
                      type: array
                      items:
                        type: string
                        format: date
                baseJob:
                  type: object
                  description: >
                    The base job field that will be used to create the recurring
                    schedule. Child objects (e.g. has-many relationship such as
                    JobTags) can also be included -- they will be create and
                    linked with their parent job.

                    Only certain default job fields (see example) are be
                    replicated across the created jobs.

                    To replicate a custom field, lookup or child objects, they
                    need to specified in the baseJob object too (see example).
                  required:
                    - Start
                    - Duration
                    - RegionId
                  properties:
                    Start:
                      type: string
                      format: date-time
                      description: >-
                        Start time of the job which is also the base time / date
                        where the pattern starts generating new jobs from. All
                        generated jobs will have the same clock time as the base
                        job (For example if the first job is at 3pm, all future
                        jobs will occur at 3pm as well)
                    Duration:
                      type: number
                    RegionId:
                      type: string
                      description: >-
                        RegionId is used to obtain holidays associated with the
                        region, which are used to avoid creating jobs on
                        regional or global holidays
                  example:
                    Start: '2017-12-23T00:00:00Z'
                    RegionId: a0J28000000TXd3EAG
                    Duration: 30
                    AccountId: 0051I000000hycRQAQ
                    Address: 170 Smith Road
                    CanBeDeclined: true
                    ContactId: 0051I000000hhcRQAQ
                    Description: description of the job
                    GeoLatitude: 100
                    GeoLongitude: 100
                    LocationId: 0051I000000hycRQAQ
                    Locked: false
                    NotesComments: a comment on the job
                    Type: Installation
                    Urgency: Urgent
                    Quantity: 2
                    MyCustomText: hello world
                    JobTags:
                      - TagId: a0B0K00000XR5bPUAT
                        Required: true
        required: true
      security:
        - Authorization: []
  /recurring/schedules/jobs:
    post:
      summary: Create a recurring schedule
      description: Create a recurring schedule from a base job and pattern
      tags:
        - Recurring schedules
      operationId: createRecurringSchedule
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                type: object
                required:
                  - result
                properties:
                  result:
                    description: ID of the created recurring schedule
                    type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - baseJob
                - pattern
              properties:
                baseJob:
                  type: object
                  description: >
                    The base job field that will be used to create the recurring
                    schedule. Child objects (e.g. has-many relationship such as
                    JobTags) can also be included -- they will be create and
                    linked with their parent job.

                    Only certain default job fields (see example) are be
                    replicated across the created jobs.

                    To replicate a custom field, lookup or child objects, they
                    need to specified in the baseJob object too (see example).
                  required:
                    - Start
                    - Duration
                    - RegionId
                  properties:
                    Start:
                      type: string
                      format: date-time
                      description: >-
                        Start time of the job which is also the base time / date
                        where the pattern starts generating new jobs from. All
                        generated jobs will have the same clock time as the base
                        job (For example if the first job is at 3pm, all future
                        jobs will occur at 3pm as well)
                    Duration:
                      type: number
                    RegionId:
                      type: string
                      description: >-
                        RegionId is used to obtain holidays associated with the
                        region, which are used to avoid creating jobs on
                        regional or global holidays
                  example:
                    Start: '2017-12-23T00:00:00Z'
                    RegionId: a0J28000000TXd3EAG
                    Duration: 30
                    AccountId: 0051I000000hycRQAQ
                    Address: 170 Smith Road
                    CanBeDeclined: true
                    ContactId: 0051I000000hhcRQAQ
                    Description: description of the job
                    GeoLatitude: 100
                    GeoLongitude: 100
                    LocationId: 0051I000000hycRQAQ
                    Locked: false
                    NotesComments: a comment on the job
                    Type: Installation
                    Urgency: Urgent
                    Quantity: 2
                    MyCustomText: hello world
                    JobTags:
                      - TagId: a0B0K00000XR5bPUAT
                        Required: true
                pattern:
                  type: object
                  required:
                    - type
                    - step
                    - ackAllJobs
                  properties:
                    type:
                      type: string
                      enum:
                        - dates_only
                        - rule
                      description: >-
                        If the type is 'dates_only', Only 'includeDates' will be
                        used to generate job times
                    endOn:
                      description: >-
                        Date the pattern should end on. If using this, do not
                        provide endAfterNumberOccurrences
                      type: string
                      format: date
                      example: '2020-05-13'
                    endAfterNumberOccurrences:
                      description: >
                        Number of occurrence to generate. If using this, do not
                        provide endOn.

                        Note: when repeatMode is 'weekly', this value means the
                        number of week periods to generate the intervals from,

                        So when endAfterNumberOccurrences = 4, only the next 4
                        weeks will be checked (some weeks may not generated an
                        interval due

                        to other rules, leading to less than 4 intervals being
                        generated in total)
                      type: number
                      example: 5
                    repeatMode:
                      description: How occurences are repeated
                      type: string
                      enum:
                        - daily
                        - weekly
                        - monthly_nth_day
                        - yearly
                    step:
                      description: >
                        How many days/months/years between each generated
                        interval. For example, with repeatMode = 'daily' and
                        step = 1, an interval will be generated every day
                      type: number
                    skipOnWeekDays:
                      description: >-
                        days of the week to skip. If an interval falls on this
                        day of the week, it will be skipped
                      type: array
                      items:
                        type: string
                        enum:
                          - mon
                          - tue
                          - wed
                          - thu
                          - fri
                          - sat
                          - sun
                      example:
                        - mon
                        - tue
                    repeatOnWeekDays:
                      description: >-
                        The days of week intervals can occur on. Only applies
                        when repeatMode = 'weekly'.
                      type: array
                      items:
                        type: string
                        enum:
                          - mon
                          - tue
                          - wed
                          - thu
                          - fri
                          - sat
                          - sun
                    skipHolidays:
                      type: boolean
                      description: >-
                        Whether to skip holidays when generating future jobs
                        (Considers both regional and global holidays)
                      default: false
                    ackAllJobs:
                      description: >-
                        If true, job allocations for each job will need to be
                        acknowledged by the resource
                      type: boolean
                    excludeDates:
                      description: A list of dates a recurring job cannot occur on
                      type: array
                      items:
                        type: string
                        format: date
                    includeDates:
                      description: >-
                        A list of dates the job will occur on. This is in
                        addition to all dates generated by the rule and ignores
                        any dates listed in excludeDates
                      type: array
                      items:
                        type: string
                        format: date
        required: true
      security:
        - Authorization: []
    put:
      summary: Update jobs in a recurring schedule
      description: >-
        Updates the fields and attached objects of jobs in a recurring schedule,
        where the jobs start at or after the provided timestamp. Arrays of
        attached 'HasMany' objects can be provided along with the fields to be
        updated. In this case, all existing attached objects of the same type on
        future jobs will be deleted and replaced with the provided objects. Job
        IDs may be explicitly excluded - this allows the caller to prevent
        modifying the job that they are currently displaying. Jobs that are
        Locked, In Progress, Completed or Cancelled will not be updated.
      tags:
        - Recurring schedules
      operationId: updateJobs
      responses:
        '200':
          description: jobs successfully updated
          content:
            application/json:
              schema:
                type: object
                required:
                  - result
                properties:
                  result:
                    description: >-
                      A list of the jobs that were updated with their fields and
                      'HasMany' object lists. May be an empty array if no jobs
                      were updated due to filtering.
                    type: array
                    items:
                      type: object
                      example:
                        - UID: a0L28000000Ton5EAC
                          Start: '2019-05-27T05:00:00.000Z'
                          Duration: 15
                          Description: new description
                          JobTasks:
                            - Seq: 1
                              Name: Task 1
                              Completed: false
                            - Seq: 2
                              Name: Task 2
                              Completed: false
      requestBody:
        description: Information about how the jobs will be updated.
        content:
          application/json:
            schema:
              type: object
              required:
                - recurringScheduleId
                - from
                - jobFields
              properties:
                recurringScheduleId:
                  type: string
                from:
                  type: string
                  format: date-time
                  description: >-
                    Only apply changes to jobs that start at or after this
                    instant in time.
                  example: '2017-05-17T03:30:00Z'
                start:
                  type: string
                  description: >-
                    Start time for the jobs. For each job the clock time will be
                    adjusted to match this time. The job date will remain the
                    same as before. If this parameter is not provided, job
                    schedules will not be updated.
                  format: time
                  example: '15:00'
                excludeJobIds:
                  type: array
                  description: A list of job IDs that should not be updated.
                  items:
                    type: string
                duration:
                  type: number
                  description: >-
                    The new duration for each job in minutes. Must be provided
                    along with "start" if updating job schedule.
                  example: 15
                jobFields:
                  type: object
                  additionalProperties: true
                  description: >-
                    The fields and values that should be updated on the jobs.
                    Lists of attached 'HasMany' objects can be provided as
                    arrays (e.g. 'JobTasks'). All existing attached objects on
                    future jobs will be deleted and replaced with the provided
                    objects. Any unsupported fields provided (e.g. notifyBy)
                    will not be modified. All custom fields given in this object
                    will be updated.
                  example:
                    Description: new description
                    JobTasks:
                      - Seq: 1
                        Name: Task 1
                        Completed: false
                      - Seq: 2
                        Name: Task 2
                        Completed: false
      security:
        - Authorization: []
  /recurring/schedules/job_allocations:
    post:
      summary: Create/update job allocations for resources
      description: Create or update job allocations for certain resources
      tags:
        - Recurring schedules
      operationId: upsertJobAllocations
      responses:
        '200':
          description: Jobs allocations has been successfully created or updated.
          content:
            application/json:
              schema:
                type: object
                required:
                  - result
                properties:
                  result:
                    description: A list of job allocation IDs that were created or updated.
                    type: object
                    required:
                      - inserted
                      - updated
                    properties:
                      inserted:
                        type: array
                        items:
                          type: string
                      updated:
                        type: array
                        items:
                          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - from
                - recurringScheduleId
                - resourceIds
                - jobAllocBase
              properties:
                from:
                  type: string
                  format: date-time
                  description: >-
                    Only create/update job allocations for jobs that start after
                    this instant in time.
                  example: '2017-05-17T03:30:00Z'
                recurringScheduleId:
                  type: string
                excludeJobIds:
                  type: array
                  description: >-
                    Skip updating any job allocations that are attached to these
                    job identifiers.
                  items:
                    type: string
                resourceIds:
                  type: array
                  description: >-
                    ID of the resources of which job allocations will be created
                    or updated for. Any existing job allocations not belonging
                    to these resources will not be modified.
                  items:
                    type: string
                  example:
                    - res_1
                    - res_2
                jobAllocBase:
                  type: object
                  additionalProperties: true
                  description: >-
                    A JSON object containing fields for the job allocation to
                    create. Existing job allocations will be updated too.
                  example:
                    Hours: 5
                    NotificationType: push
      security:
        - Authorization: []
  /recurring/schedules/job_allocations/delete:
    post:
      summary: Delete job allocation
      description: Delete job allocations for certain resources
      tags:
        - Recurring schedules
      operationId: deleteJobAllocations
      responses:
        '200':
          description: Job allocations deleted
          content:
            application/json:
              schema:
                type: object
                required:
                  - result
                properties:
                  result:
                    description: A list of jobs and their job allocations that were deleted
                    type: object
                    example:
                      job_1:
                        - job_alloc_1
                        - job_alloc_2
                      job_2:
                        - job_alloc_3
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - from
                - recurringScheduleId
                - resourceIds
              properties:
                from:
                  type: string
                  format: date-time
                  description: >-
                    Only delete job allocations for jobs that start after this
                    instant
                  example: '2017-05-17T03:30:00Z'
                recurringScheduleId:
                  type: string
                resourceIds:
                  type: array
                  description: >-
                    ID of the resources of which job allocations will be
                    deleted.
                  items:
                    type: string
                  example:
                    - res_1
                    - res_2
      security:
        - Authorization: []
  /virtualmeeting/meetings:
    post:
      operationId: createMeeting
      summary: Create a virtual meeting hosted by a resource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - type: object
                  properties:
                    topic:
                      type: string
                      description: Topic of the virtual meeting
                    agenda:
                      type: string
                      description: Agenda of the virtual meeting
                    startTime:
                      type: string
                      format: date-time
                      description: Start time of the virtual meeting in ISO8601 format
                    duration:
                      type: integer
                      description: Duration (in minutes) of the virtual meeting
                    password:
                      type: string
                      description: Password of the virtual meeting
                    zoom:
                      type: object
                      description: >-
                        Optional Zoom specific information about the virtual
                        meeting (when Zoom is the meeting provider). Most Zoom
                        meetings can be created without this.
                    teams:
                      type: object
                      description: >-
                        Optional MS Teams specific information about the virtual
                        meeting (when Teams is the meeting provider). Most Teams
                        meetings can be created without this.
                  required:
                    - topic
                    - agenda
                    - startTime
                    - duration
                - type: object
                  properties:
                    hostResourceId:
                      type: string
                      description: >-
                        Resource Id of the resource that hosts the virtual
                        meeting
                  required:
                    - hostResourceId
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      hostUrl:
                        type: string
                        format: uri
                        description: URL for the host to join and start the meeting
                      inviteeUrl:
                        type: string
                        format: uri
                        description: URL for an invitee to join the meeting
                      id:
                        type: string
                        description: Unique Id of the virtual meeting
                      password:
                        type: string
                        description: Password of the virtual meeting
                      zoom:
                        type: object
                        description: >-
                          Zoom specific information about the virtual meeting
                          (when Zoom is the meeting provider)
                      teams:
                        type: object
                        description: >-
                          MS Teams specific information about the virtual
                          meeting (when Teams is the meeting provider)
                    required:
                      - hostUrl
                      - inviteeUrl
                      - id
                required:
                  - result
                example: |
                  {
                    "result": {
                      "hostUrl": "https://skedulo.zoom.us/s/96228647552?zak=eyJ6bV9za20iOiJ6bV9vMm0iLCJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJjbGllbnQiLCJ1aWQiOiJiSVFNaF8tclJTVzZXNDRzQlJBb193IiwiaXNzIjoid2ViIiwic3R5IjoxLCJ3Y2QiOiJhdzEiLCJjbHQiOjAsInN0ayI6IkZiaXM4blNHeENCdlFtMGJGRXJYS25Mb2o1QXR4cmtDSVlBbkFaVlFWaVUuRWdJQUFBRnlCMThQNEFBQUhDQWdiblJHVFdObmRtVlRRMjlUUWpCMlZtSjFlREJGUjBWdlFrZEZOMmwwTjBjQURETkRRa0YxYjJsWlV6TnpQUU5oZHpFIiwiZXhwIjoxNTg5MjY4NzcwLCJpYXQiOjE1ODkyNjE1NzAsImFpZCI6Im9RRjJ6SVQtUV9DLTRGZy1mZ2RQQXciLCJjaWQiOiIifQ.qWPMxnBqCTn-HYryCE1begsYzZEAJOAb-_MyW3q-mRI",
                      "inviteeUrl": "https://skedulo.zoom.us/j/96228647552",
                      "id": "Zoom:96228647552",
                      "zoom": {
                        "uuid": "OI/WyUesTYi7WQUG/GN1AQ==",
                        "id": 96228647552,
                        "host_id": "bIQMh_-rRSW6W44sBRAo_w",
                        "topic": "Skedulo Consultation",
                        "type": 2,
                        "status": "waiting",
                        "start_time": "2020-04-27T13:30:00Z",
                        "duration": 1,
                        "timezone": "Australia/Sydney",
                        "agenda": "[JOB-0006] Consultation with Skedulo Admin",
                        "created_at": "2020-05-12T05:32:49Z",
                        "start_url": "https://skedulo.zoom.us/s/96228647552?zak=eyJ6bV9za20iOiJ6bV9vMm0iLCJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJjbGllbnQiLCJ1aWQiOiJiSVFNaF8tclJTVzZXNDRzQlJBb193IiwiaXNzIjoid2ViIiwic3R5IjoxLCJ3Y2QiOiJhdzEiLCJjbHQiOjAsInN0ayI6IkZiaXM4blNHeENCdlFtMGJGRXJYS25Mb2o1QXR4cmtDSVlBbkFaVlFWaVUuRWdJQUFBRnlCMThQNEFBQUhDQWdiblJHVFdObmRtVlRRMjlUUWpCMlZtSjFlREJGUjBWdlFrZEZOMmwwTjBjQURETkRRa0YxYjJsWlV6TnpQUU5oZHpFIiwiZXhwIjoxNTg5MjY4NzcwLCJpYXQiOjE1ODkyNjE1NzAsImFpZCI6Im9RRjJ6SVQtUV9DLTRGZy1mZ2RQQXciLCJjaWQiOiIifQ.qWPMxnBqCTn-HYryCE1begsYzZEAJOAb-_MyW3q-mRI",
                        "join_url": "https://skedulo.zoom.us/j/96228647552",
                        "settings": {
                          "host_video": false,
                          "participant_video": false,
                          "cn_meeting": false,
                          "in_meeting": false,
                          "join_before_host": true,
                          "mute_upon_entry": false,
                          "watermark": false,
                          "use_pmi": false,
                          "approval_type": 2,
                          "audio": "both",
                          "auto_recording": "none",
                          "enforce_login": false,
                          "enforce_login_domains": "",
                          "alternative_hosts": "",
                          "close_registration": false,
                          "registrants_confirmation_email": true,
                          "waiting_room": false,
                          "global_dial_in_countries": [
                            "AU",
                            "GB",
                            "NZ",
                            "US",
                            "CA"
                          ],
                          "global_dial_in_numbers": [
                            {
                              "country_name": "US",
                              "city": "Houston",
                              "number": "+1 3462487799",
                              "type": "toll",
                              "country": "US"
                            },
                            {
                              "country_name": "US",
                              "city": "San Jose",
                              "number": "+1 6699006833",
                              "type": "toll",
                              "country": "US"
                            },
                            {
                              "country_name": "US",
                              "city": "Tacoma",
                              "number": "+1 2532158782",
                              "type": "toll",
                              "country": "US"
                            },
                            {
                              "country_name": "US",
                              "city": "Chicago",
                              "number": "+1 3126266799",
                              "type": "toll",
                              "country": "US"
                            },
                            {
                              "country_name": "US",
                              "city": "New York",
                              "number": "+1 6465588656",
                              "type": "toll",
                              "country": "US"
                            },
                            {
                              "country_name": "US",
                              "city": "Germantown",
                              "number": "+1 3017158592",
                              "type": "toll",
                              "country": "US"
                            },
                            {
                              "country_name": "US",
                              "city": "",
                              "number": "+1 8773690926",
                              "type": "tollfree",
                              "country": "US"
                            },
                            {
                              "country_name": "US",
                              "city": "",
                              "number": "+1 8778535247",
                              "type": "tollfree",
                              "country": "US"
                            },
                            {
                              "country_name": "Australia",
                              "number": "+61 861193900",
                              "type": "toll",
                              "country": "AU"
                            },
                            {
                              "country_name": "Australia",
                              "number": "+61 871501149",
                              "type": "toll",
                              "country": "AU"
                            },
                            {
                              "country_name": "Australia",
                              "number": "+61 280156011",
                              "type": "toll",
                              "country": "AU"
                            },
                            {
                              "country_name": "Australia",
                              "number": "+61 370182005",
                              "type": "toll",
                              "country": "AU"
                            },
                            {
                              "country_name": "Australia",
                              "number": "+61 731853730",
                              "type": "toll",
                              "country": "AU"
                            },
                            {
                              "country_name": "Australia",
                              "number": "+61 1800893423",
                              "type": "tollfree",
                              "country": "AU"
                            },
                            {
                              "country_name": "New Zealand",
                              "number": "+64 48860026",
                              "type": "toll",
                              "country": "NZ"
                            },
                            {
                              "country_name": "New Zealand",
                              "number": "+64 98846780",
                              "type": "toll",
                              "country": "NZ"
                            },
                            {
                              "country_name": "New Zealand",
                              "number": "+64 800002260",
                              "type": "tollfree",
                              "country": "NZ"
                            },
                            {
                              "country_name": "United Kingdom",
                              "number": "+44 2080806592",
                              "type": "toll",
                              "country": "GB"
                            },
                            {
                              "country_name": "United Kingdom",
                              "number": "+44 3300885830",
                              "type": "toll",
                              "country": "GB"
                            },
                            {
                              "country_name": "United Kingdom",
                              "number": "+44 1314601196",
                              "type": "toll",
                              "country": "GB"
                            },
                            {
                              "country_name": "United Kingdom",
                              "number": "+44 2034815237",
                              "type": "toll",
                              "country": "GB"
                            },
                            {
                              "country_name": "United Kingdom",
                              "number": "+44 2034815240",
                              "type": "toll",
                              "country": "GB"
                            },
                            {
                              "country_name": "United Kingdom",
                              "number": "+44 2080806591",
                              "type": "toll",
                              "country": "GB"
                            },
                            {
                              "country_name": "United Kingdom",
                              "number": "+44 8000315717",
                              "type": "tollfree",
                              "country": "GB"
                            },
                            {
                              "country_name": "Canada",
                              "number": "+1 6475580588",
                              "type": "toll",
                              "country": "CA"
                            },
                            {
                              "country_name": "Canada",
                              "number": "+1 7789072071",
                              "type": "toll",
                              "country": "CA"
                            },
                            {
                              "country_name": "Canada",
                              "number": "+1 4388097799",
                              "type": "toll",
                              "country": "CA"
                            },
                            {
                              "country_name": "Canada",
                              "number": "+1 5873281099",
                              "type": "toll",
                              "country": "CA"
                            },
                            {
                              "country_name": "Canada",
                              "number": "+1 6473744685",
                              "type": "toll",
                              "country": "CA"
                            },
                            {
                              "country_name": "Canada",
                              "number": "+1 8557038985",
                              "type": "tollfree",
                              "country": "CA"
                            }
                          ],
                          "registrants_email_notification": true,
                          "meeting_authentication": false
                        }
                      }
                    }
                  }
        '400':
          description: The hosting resource has no email specified
      tags:
        - Virtual meetings
      security:
        - BearerAuth: []
  '/virtualmeeting/meetings/{id}':
    get:
      operationId: getMeeting
      summary: Fetch information of the virtual meeting specified by the id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            description: Id of the virtual meeting to be fetched
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      hostUrl:
                        type: string
                        format: uri
                        description: URL for the host to join and start the meeting
                      inviteeUrl:
                        type: string
                        format: uri
                        description: URL for an invitee to join the meeting
                      id:
                        type: string
                        description: Unique Id of the virtual meeting
                      password:
                        type: string
                        description: Password of the virtual meeting
                      zoom:
                        type: object
                        description: >-
                          Zoom specific information about the virtual meeting
                          (when Zoom is the meeting provider)
                      teams:
                        type: object
                        description: >-
                          MS Teams specific information about the virtual
                          meeting (when Teams is the meeting provider)
                    required:
                      - hostUrl
                      - inviteeUrl
                      - id
                required:
                  - result
                example: |
                  {
                    "result": {
                      "hostUrl": "https://skedulo.zoom.us/s/96228647552?zak=eyJ6bV9za20iOiJ6bV9vMm0iLCJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJjbGllbnQiLCJ1aWQiOiJiSVFNaF8tclJTVzZXNDRzQlJBb193IiwiaXNzIjoid2ViIiwic3R5IjoxLCJ3Y2QiOiJhdzEiLCJjbHQiOjAsInN0ayI6IkZiaXM4blNHeENCdlFtMGJGRXJYS25Mb2o1QXR4cmtDSVlBbkFaVlFWaVUuRWdJQUFBRnlCMThQNEFBQUhDQWdiblJHVFdObmRtVlRRMjlUUWpCMlZtSjFlREJGUjBWdlFrZEZOMmwwTjBjQURETkRRa0YxYjJsWlV6TnpQUU5oZHpFIiwiZXhwIjoxNTg5MjY4NzcwLCJpYXQiOjE1ODkyNjE1NzAsImFpZCI6Im9RRjJ6SVQtUV9DLTRGZy1mZ2RQQXciLCJjaWQiOiIifQ.qWPMxnBqCTn-HYryCE1begsYzZEAJOAb-_MyW3q-mRI",
                      "inviteeUrl": "https://skedulo.zoom.us/j/96228647552",
                      "id": "Zoom:96228647552",
                      "zoom": {
                        "uuid": "OI/WyUesTYi7WQUG/GN1AQ==",
                        "id": 96228647552,
                        "host_id": "bIQMh_-rRSW6W44sBRAo_w",
                        "topic": "Skedulo Consultation",
                        "type": 2,
                        "status": "waiting",
                        "start_time": "2020-04-27T13:30:00Z",
                        "duration": 1,
                        "timezone": "Australia/Sydney",
                        "agenda": "[JOB-0006] Consultation with Skedulo Admin",
                        "created_at": "2020-05-12T05:32:49Z",
                        "start_url": "https://skedulo.zoom.us/s/96228647552?zak=eyJ6bV9za20iOiJ6bV9vMm0iLCJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJjbGllbnQiLCJ1aWQiOiJiSVFNaF8tclJTVzZXNDRzQlJBb193IiwiaXNzIjoid2ViIiwic3R5IjoxLCJ3Y2QiOiJhdzEiLCJjbHQiOjAsInN0ayI6IkZiaXM4blNHeENCdlFtMGJGRXJYS25Mb2o1QXR4cmtDSVlBbkFaVlFWaVUuRWdJQUFBRnlCMThQNEFBQUhDQWdiblJHVFdObmRtVlRRMjlUUWpCMlZtSjFlREJGUjBWdlFrZEZOMmwwTjBjQURETkRRa0YxYjJsWlV6TnpQUU5oZHpFIiwiZXhwIjoxNTg5MjY4NzcwLCJpYXQiOjE1ODkyNjE1NzAsImFpZCI6Im9RRjJ6SVQtUV9DLTRGZy1mZ2RQQXciLCJjaWQiOiIifQ.qWPMxnBqCTn-HYryCE1begsYzZEAJOAb-_MyW3q-mRI",
                        "join_url": "https://skedulo.zoom.us/j/96228647552",
                        "settings": {
                          "host_video": false,
                          "participant_video": false,
                          "cn_meeting": false,
                          "in_meeting": false,
                          "join_before_host": true,
                          "mute_upon_entry": false,
                          "watermark": false,
                          "use_pmi": false,
                          "approval_type": 2,
                          "audio": "both",
                          "auto_recording": "none",
                          "enforce_login": false,
                          "enforce_login_domains": "",
                          "alternative_hosts": "",
                          "close_registration": false,
                          "registrants_confirmation_email": true,
                          "waiting_room": false,
                          "global_dial_in_countries": [
                            "AU",
                            "GB",
                            "NZ",
                            "US",
                            "CA"
                          ],
                          "global_dial_in_numbers": [
                            {
                              "country_name": "US",
                              "city": "Houston",
                              "number": "+1 3462487799",
                              "type": "toll",
                              "country": "US"
                            },
                            {
                              "country_name": "US",
                              "city": "San Jose",
                              "number": "+1 6699006833",
                              "type": "toll",
                              "country": "US"
                            },
                            {
                              "country_name": "US",
                              "city": "Tacoma",
                              "number": "+1 2532158782",
                              "type": "toll",
                              "country": "US"
                            },
                            {
                              "country_name": "US",
                              "city": "Chicago",
                              "number": "+1 3126266799",
                              "type": "toll",
                              "country": "US"
                            },
                            {
                              "country_name": "US",
                              "city": "New York",
                              "number": "+1 6465588656",
                              "type": "toll",
                              "country": "US"
                            },
                            {
                              "country_name": "US",
                              "city": "Germantown",
                              "number": "+1 3017158592",
                              "type": "toll",
                              "country": "US"
                            },
                            {
                              "country_name": "US",
                              "city": "",
                              "number": "+1 8773690926",
                              "type": "tollfree",
                              "country": "US"
                            },
                            {
                              "country_name": "US",
                              "city": "",
                              "number": "+1 8778535247",
                              "type": "tollfree",
                              "country": "US"
                            },
                            {
                              "country_name": "Australia",
                              "number": "+61 861193900",
                              "type": "toll",
                              "country": "AU"
                            },
                            {
                              "country_name": "Australia",
                              "number": "+61 871501149",
                              "type": "toll",
                              "country": "AU"
                            },
                            {
                              "country_name": "Australia",
                              "number": "+61 280156011",
                              "type": "toll",
                              "country": "AU"
                            },
                            {
                              "country_name": "Australia",
                              "number": "+61 370182005",
                              "type": "toll",
                              "country": "AU"
                            },
                            {
                              "country_name": "Australia",
                              "number": "+61 731853730",
                              "type": "toll",
                              "country": "AU"
                            },
                            {
                              "country_name": "Australia",
                              "number": "+61 1800893423",
                              "type": "tollfree",
                              "country": "AU"
                            },
                            {
                              "country_name": "New Zealand",
                              "number": "+64 48860026",
                              "type": "toll",
                              "country": "NZ"
                            },
                            {
                              "country_name": "New Zealand",
                              "number": "+64 98846780",
                              "type": "toll",
                              "country": "NZ"
                            },
                            {
                              "country_name": "New Zealand",
                              "number": "+64 800002260",
                              "type": "tollfree",
                              "country": "NZ"
                            },
                            {
                              "country_name": "United Kingdom",
                              "number": "+44 2080806592",
                              "type": "toll",
                              "country": "GB"
                            },
                            {
                              "country_name": "United Kingdom",
                              "number": "+44 3300885830",
                              "type": "toll",
                              "country": "GB"
                            },
                            {
                              "country_name": "United Kingdom",
                              "number": "+44 1314601196",
                              "type": "toll",
                              "country": "GB"
                            },
                            {
                              "country_name": "United Kingdom",
                              "number": "+44 2034815237",
                              "type": "toll",
                              "country": "GB"
                            },
                            {
                              "country_name": "United Kingdom",
                              "number": "+44 2034815240",
                              "type": "toll",
                              "country": "GB"
                            },
                            {
                              "country_name": "United Kingdom",
                              "number": "+44 2080806591",
                              "type": "toll",
                              "country": "GB"
                            },
                            {
                              "country_name": "United Kingdom",
                              "number": "+44 8000315717",
                              "type": "tollfree",
                              "country": "GB"
                            },
                            {
                              "country_name": "Canada",
                              "number": "+1 6475580588",
                              "type": "toll",
                              "country": "CA"
                            },
                            {
                              "country_name": "Canada",
                              "number": "+1 7789072071",
                              "type": "toll",
                              "country": "CA"
                            },
                            {
                              "country_name": "Canada",
                              "number": "+1 4388097799",
                              "type": "toll",
                              "country": "CA"
                            },
                            {
                              "country_name": "Canada",
                              "number": "+1 5873281099",
                              "type": "toll",
                              "country": "CA"
                            },
                            {
                              "country_name": "Canada",
                              "number": "+1 6473744685",
                              "type": "toll",
                              "country": "CA"
                            },
                            {
                              "country_name": "Canada",
                              "number": "+1 8557038985",
                              "type": "tollfree",
                              "country": "CA"
                            }
                          ],
                          "registrants_email_notification": true,
                          "meeting_authentication": false
                        }
                      }
                    }
                  }
      tags:
        - Virtual meetings
      security:
        - BearerAuth: []
    put:
      operationId: updateMeeting
      summary: Update the virtual meeting specified by the id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            description: Id of the virtual meeting to be updated
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                topic:
                  type: string
                  description: Topic of the virtual meeting
                agenda:
                  type: string
                  description: Agenda of the virtual meeting
                startTime:
                  type: string
                  format: date-time
                  description: Start time of the virtual meeting in ISO8601 format
                duration:
                  type: integer
                  description: Duration (in minutes) of the virtual meeting
                password:
                  type: string
                  description: Password of the virtual meeting
                zoom:
                  type: object
                  description: >-
                    Optional Zoom specific information about the virtual meeting
                    (when Zoom is the meeting provider). Most Zoom meetings can
                    be created without this.
                teams:
                  type: object
                  description: >-
                    Optional MS Teams specific information about the virtual
                    meeting (when Teams is the meeting provider). Most Teams
                    meetings can be created without this.
              required:
                - topic
                - agenda
                - startTime
                - duration
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      hostUrl:
                        type: string
                        format: uri
                        description: URL for the host to join and start the meeting
                      inviteeUrl:
                        type: string
                        format: uri
                        description: URL for an invitee to join the meeting
                      id:
                        type: string
                        description: Unique Id of the virtual meeting
                      password:
                        type: string
                        description: Password of the virtual meeting
                      zoom:
                        type: object
                        description: >-
                          Zoom specific information about the virtual meeting
                          (when Zoom is the meeting provider)
                      teams:
                        type: object
                        description: >-
                          MS Teams specific information about the virtual
                          meeting (when Teams is the meeting provider)
                    required:
                      - hostUrl
                      - inviteeUrl
                      - id
                required:
                  - result
                example: |
                  {
                    "result": {
                      "hostUrl": "https://skedulo.zoom.us/s/96228647552?zak=eyJ6bV9za20iOiJ6bV9vMm0iLCJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJjbGllbnQiLCJ1aWQiOiJiSVFNaF8tclJTVzZXNDRzQlJBb193IiwiaXNzIjoid2ViIiwic3R5IjoxLCJ3Y2QiOiJhdzEiLCJjbHQiOjAsInN0ayI6IkZiaXM4blNHeENCdlFtMGJGRXJYS25Mb2o1QXR4cmtDSVlBbkFaVlFWaVUuRWdJQUFBRnlCMThQNEFBQUhDQWdiblJHVFdObmRtVlRRMjlUUWpCMlZtSjFlREJGUjBWdlFrZEZOMmwwTjBjQURETkRRa0YxYjJsWlV6TnpQUU5oZHpFIiwiZXhwIjoxNTg5MjY4NzcwLCJpYXQiOjE1ODkyNjE1NzAsImFpZCI6Im9RRjJ6SVQtUV9DLTRGZy1mZ2RQQXciLCJjaWQiOiIifQ.qWPMxnBqCTn-HYryCE1begsYzZEAJOAb-_MyW3q-mRI",
                      "inviteeUrl": "https://skedulo.zoom.us/j/96228647552",
                      "id": "Zoom:96228647552",
                      "zoom": {
                        "uuid": "OI/WyUesTYi7WQUG/GN1AQ==",
                        "id": 96228647552,
                        "host_id": "bIQMh_-rRSW6W44sBRAo_w",
                        "topic": "Skedulo Consultation",
                        "type": 2,
                        "status": "waiting",
                        "start_time": "2020-04-27T13:30:00Z",
                        "duration": 1,
                        "timezone": "Australia/Sydney",
                        "agenda": "[JOB-0006] Consultation with Skedulo Admin",
                        "created_at": "2020-05-12T05:32:49Z",
                        "start_url": "https://skedulo.zoom.us/s/96228647552?zak=eyJ6bV9za20iOiJ6bV9vMm0iLCJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJjbGllbnQiLCJ1aWQiOiJiSVFNaF8tclJTVzZXNDRzQlJBb193IiwiaXNzIjoid2ViIiwic3R5IjoxLCJ3Y2QiOiJhdzEiLCJjbHQiOjAsInN0ayI6IkZiaXM4blNHeENCdlFtMGJGRXJYS25Mb2o1QXR4cmtDSVlBbkFaVlFWaVUuRWdJQUFBRnlCMThQNEFBQUhDQWdiblJHVFdObmRtVlRRMjlUUWpCMlZtSjFlREJGUjBWdlFrZEZOMmwwTjBjQURETkRRa0YxYjJsWlV6TnpQUU5oZHpFIiwiZXhwIjoxNTg5MjY4NzcwLCJpYXQiOjE1ODkyNjE1NzAsImFpZCI6Im9RRjJ6SVQtUV9DLTRGZy1mZ2RQQXciLCJjaWQiOiIifQ.qWPMxnBqCTn-HYryCE1begsYzZEAJOAb-_MyW3q-mRI",
                        "join_url": "https://skedulo.zoom.us/j/96228647552",
                        "settings": {
                          "host_video": false,
                          "participant_video": false,
                          "cn_meeting": false,
                          "in_meeting": false,
                          "join_before_host": true,
                          "mute_upon_entry": false,
                          "watermark": false,
                          "use_pmi": false,
                          "approval_type": 2,
                          "audio": "both",
                          "auto_recording": "none",
                          "enforce_login": false,
                          "enforce_login_domains": "",
                          "alternative_hosts": "",
                          "close_registration": false,
                          "registrants_confirmation_email": true,
                          "waiting_room": false,
                          "global_dial_in_countries": [
                            "AU",
                            "GB",
                            "NZ",
                            "US",
                            "CA"
                          ],
                          "global_dial_in_numbers": [
                            {
                              "country_name": "US",
                              "city": "Houston",
                              "number": "+1 3462487799",
                              "type": "toll",
                              "country": "US"
                            },
                            {
                              "country_name": "US",
                              "city": "San Jose",
                              "number": "+1 6699006833",
                              "type": "toll",
                              "country": "US"
                            },
                            {
                              "country_name": "US",
                              "city": "Tacoma",
                              "number": "+1 2532158782",
                              "type": "toll",
                              "country": "US"
                            },
                            {
                              "country_name": "US",
                              "city": "Chicago",
                              "number": "+1 3126266799",
                              "type": "toll",
                              "country": "US"
                            },
                            {
                              "country_name": "US",
                              "city": "New York",
                              "number": "+1 6465588656",
                              "type": "toll",
                              "country": "US"
                            },
                            {
                              "country_name": "US",
                              "city": "Germantown",
                              "number": "+1 3017158592",
                              "type": "toll",
                              "country": "US"
                            },
                            {
                              "country_name": "US",
                              "city": "",
                              "number": "+1 8773690926",
                              "type": "tollfree",
                              "country": "US"
                            },
                            {
                              "country_name": "US",
                              "city": "",
                              "number": "+1 8778535247",
                              "type": "tollfree",
                              "country": "US"
                            },
                            {
                              "country_name": "Australia",
                              "number": "+61 861193900",
                              "type": "toll",
                              "country": "AU"
                            },
                            {
                              "country_name": "Australia",
                              "number": "+61 871501149",
                              "type": "toll",
                              "country": "AU"
                            },
                            {
                              "country_name": "Australia",
                              "number": "+61 280156011",
                              "type": "toll",
                              "country": "AU"
                            },
                            {
                              "country_name": "Australia",
                              "number": "+61 370182005",
                              "type": "toll",
                              "country": "AU"
                            },
                            {
                              "country_name": "Australia",
                              "number": "+61 731853730",
                              "type": "toll",
                              "country": "AU"
                            },
                            {
                              "country_name": "Australia",
                              "number": "+61 1800893423",
                              "type": "tollfree",
                              "country": "AU"
                            },
                            {
                              "country_name": "New Zealand",
                              "number": "+64 48860026",
                              "type": "toll",
                              "country": "NZ"
                            },
                            {
                              "country_name": "New Zealand",
                              "number": "+64 98846780",
                              "type": "toll",
                              "country": "NZ"
                            },
                            {
                              "country_name": "New Zealand",
                              "number": "+64 800002260",
                              "type": "tollfree",
                              "country": "NZ"
                            },
                            {
                              "country_name": "United Kingdom",
                              "number": "+44 2080806592",
                              "type": "toll",
                              "country": "GB"
                            },
                            {
                              "country_name": "United Kingdom",
                              "number": "+44 3300885830",
                              "type": "toll",
                              "country": "GB"
                            },
                            {
                              "country_name": "United Kingdom",
                              "number": "+44 1314601196",
                              "type": "toll",
                              "country": "GB"
                            },
                            {
                              "country_name": "United Kingdom",
                              "number": "+44 2034815237",
                              "type": "toll",
                              "country": "GB"
                            },
                            {
                              "country_name": "United Kingdom",
                              "number": "+44 2034815240",
                              "type": "toll",
                              "country": "GB"
                            },
                            {
                              "country_name": "United Kingdom",
                              "number": "+44 2080806591",
                              "type": "toll",
                              "country": "GB"
                            },
                            {
                              "country_name": "United Kingdom",
                              "number": "+44 8000315717",
                              "type": "tollfree",
                              "country": "GB"
                            },
                            {
                              "country_name": "Canada",
                              "number": "+1 6475580588",
                              "type": "toll",
                              "country": "CA"
                            },
                            {
                              "country_name": "Canada",
                              "number": "+1 7789072071",
                              "type": "toll",
                              "country": "CA"
                            },
                            {
                              "country_name": "Canada",
                              "number": "+1 4388097799",
                              "type": "toll",
                              "country": "CA"
                            },
                            {
                              "country_name": "Canada",
                              "number": "+1 5873281099",
                              "type": "toll",
                              "country": "CA"
                            },
                            {
                              "country_name": "Canada",
                              "number": "+1 6473744685",
                              "type": "toll",
                              "country": "CA"
                            },
                            {
                              "country_name": "Canada",
                              "number": "+1 8557038985",
                              "type": "tollfree",
                              "country": "CA"
                            }
                          ],
                          "registrants_email_notification": true,
                          "meeting_authentication": false
                        }
                      }
                    }
                  }
      tags:
        - Virtual meetings
      security:
        - BearerAuth: []
    delete:
      operationId: deleteMeeting
      summary: Delete the virtual meeting specified by the id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            description: Id of the virtual meeting to be deleted
      responses:
        '204':
          description: Success
      tags:
        - Virtual meetings
      security:
        - BearerAuth: []
  '/query/v1/data-schema/{resourceId}':
    get:
      summary: Returns the data schema for the given resource id.
      operationId: QueryService_GetDataSchema
      responses:
        '200':
          description: A successful response.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: resourceId
          description: The ID of the resource to get the data schema for.
          in: path
          required: true
          type: string
        - name: depth
          description: How deep to recurse when resolving relationships.
          in: query
          required: false
          type: integer
          format: int32
        - name: generate
          description: True to force regeneration of the data schema.
          in: query
          required: false
          type: boolean
        - name: relationshipResolution.allow
          description: Allowed paths we want to resolve from relationships
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
      tags:
        - Query
    delete:
      summary: Deletes the data schema for the given resource id.
      operationId: QueryService_DeleteDataSchema
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            description: Response message for QueryService.DeleteDataSchema.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: resourceId
          description: The ID of the resource to delete the data schema for.
          in: path
          required: true
          type: string
      tags:
        - Query
  '/query/v1/objects/{resourceId}':
    get:
      summary: Returns a set of objects.
      operationId: QueryService_GetObjects
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              results:
                type: string
                description: The results of the query.
              total:
                type: string
                format: int64
                description: The total number of rows available.
              cursor:
                type: string
                description: The cursor to use to get the next page of results.
            description: Response message for QueryService.GetObjects.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: resourceId
          description: resource_id is the id of the resource to query.
          in: path
          required: true
          type: string
        - name: query
          description: query is the query string we should use to filter the results.
          in: query
          required: false
          type: string
        - name: limit
          description: limit is the number of records to fetch.
          in: query
          required: false
          type: string
          format: int64
        - name: sorting
          description: sorting is a comma separated list of sorting options.
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: cursor
          description: cursor is the cursor to use for scrolling purposes.
          in: query
          required: false
          type: string
        - name: tz
          description: tz is the timezone that will be used for date math within the query.
          in: query
          required: false
          type: string
        - name: depth
          description: depth is the depth we should iterate to when fetching related data.
          in: query
          required: false
          type: string
          format: int64
        - name: relationshipResolution.allow
          description: Allowed paths we want to resolve from relationships
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
      tags:
        - Query
    post:
      summary: Creates an object according to the create data.
      operationId: QueryService_CreateObject
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              uid:
                type: string
            description: Response message for QueryService.CreateObject.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: resourceId
          description: The ID of the resource to create.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              data:
                type: string
                description: The data.
              validation:
                type: string
                description: 'Optional, otherwise use the default validation schema.'
            description: Request message for QueryService.CreateObject.
      tags:
        - Query
  '/query/v1/objects/{resourceId}/{objectId}':
    get:
      summary: Returns a set of objects.
      operationId: QueryService_GetObject
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              result:
                type: string
                description: The result of the query.
            description: Response message for QueryService.GetObject.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: resourceId
          description: resource_id is the id of the resource to query.
          in: path
          required: true
          type: string
        - name: objectId
          description: the id that identifies the single object.
          in: path
          required: true
          type: string
        - name: depth
          description: depth is the depth we should iterate to when fetching related data.
          in: query
          required: false
          type: string
          format: int64
        - name: relationshipResolution.allow
          description: Allowed paths we want to resolve from relationships
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
      tags:
        - Query
    delete:
      summary: Deletes the specified object.
      operationId: QueryService_DeleteObject
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              uid:
                type: string
            description: Response message for QueryService.DeleteObject.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: resourceId
          description: The ID of the resource.
          in: path
          required: true
          type: string
        - name: objectId
          description: The ID of the object to delete.
          in: path
          required: true
          type: string
      tags:
        - Query
    put:
      summary: Updates an object according to the update data.
      operationId: QueryService_UpdateObject
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              uid:
                type: string
            description: Response message for QueryService.UpdateObject.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: resourceId
          description: The ID of the resource.
          in: path
          required: true
          type: string
        - name: objectId
          description: The ID of the object to delete.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              data:
                type: string
                description: The update data.
              validation:
                type: string
                description: 'Optional, otherwise use the default validation schema.'
            description: Request message for QueryService.UpdateObject.
      tags:
        - Query
  '/query/v1/schema/{resourceId}/field/{accessor}':
    get:
      summary: Get Field Schema
      description: Returns schema for a single field in the given resources schema.
      operationId: QueryService_GetFieldSchema
      responses:
        '200':
          description: A successful response.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: resourceId
          description: The ID of the resource
          in: path
          required: true
          type: string
        - name: accessor
          description: A dot seperated path to a field.
          in: path
          required: true
          type: string
      tags:
        - Query
      deprecated: true
  /ui/v1/bulk-action/execute:
    post:
      summary: Execute a bulk action on multiple objects.
      operationId: UIService_ExecuteBulkAction
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              flowId:
                type: string
            description: Response message for UIApi.ExecuteBulkAction.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              action:
                type: string
              resourceId:
                type: string
              objectIds:
                type: array
                items:
                  type: string
            description: Request message for UIApi.ExecuteBulkAction.
      tags:
        - UI
  /ui/v1/clean-up-tenant:
    post:
      summary: CleanUpTenant deletes all configurations for the given tenant.
      operationId: UIService_CleanUpTenant
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            description: Response message for UIApi.CleanUpTenant.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              uid:
                type: string
              only:
                type: array
                items:
                  type: string
                  enum:
                    - RECORD_TYPE_UNSPECIFIED
                    - RESOURCE
                    - LIST
                    - FILTER
                    - VIEW_OVERRIDE
                    - NAV
                    - TEMPLATE
                    - VALIDATION
                    - SCHEMA
                    - DATA_SCHEMA
                  default: RECORD_TYPE_UNSPECIFIED
              tenantRange:
                type: object
                properties:
                  inRegion:
                    type: array
                    items:
                      type: string
                  limit:
                    type: integer
                    format: int32
                  offset:
                    type: integer
                    format: int32
            description: Request message for UIApi.CleanUpTenant.
      tags:
        - UI
  /ui/v1/data-relationship-overlay:
    post:
      operationId: UIService_NewDataRelationshipOverlay
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              uid:
                type: string
                title: uid is the unique id
              userId:
                type: string
                title: userId is the user scoped uid
              tenantId:
                type: string
                title: tenantId is the tenant scoped uid
              resourceName:
                type: string
                title: The name of the resource this overrides
              kind:
                description: Kind is the type of data this field contains.
                type: string
                enum:
                  - RELATIONSHIP_KIND_UNSPECIFIED
                  - ONE_TO_MANY
                  - MANY_TO_ONE
                  - ONE_TO_ONE
                  - MANY_TO_MANY
                default: RELATIONSHIP_KIND_UNSPECIFIED
              fieldName:
                type: string
                title: the name of the field within the resource this overrides
              fieldLabel:
                type: string
                description: Label is the field label.
              localField:
                title: The local field reference
                type: object
                properties:
                  resourceId:
                    type: string
                    description: >-
                      The ID of the resource this field references.

                      If this is empty you should use the resource name to fetch
                      the most appropriate resource.
                  resourceName:
                    type: string
                    description: The name of the resource this field references.
                  fieldName:
                    type: string
                    description: The name of the field in the given resources DataSchema.
                  valueTemplate:
                    type: string
                    description: >-
                      An optional template that can be used to extract a
                      modified value when resolving the relationship.
                description: >-
                  DataFieldReference allows you to make reference to a given
                  field within a resources DataSchema.
              foreignField:
                title: The foreign field reference
                type: object
                properties:
                  resourceId:
                    type: string
                    description: >-
                      The ID of the resource this field references.

                      If this is empty you should use the resource name to fetch
                      the most appropriate resource.
                  resourceName:
                    type: string
                    description: The name of the resource this field references.
                  fieldName:
                    type: string
                    description: The name of the field in the given resources DataSchema.
                  valueTemplate:
                    type: string
                    description: >-
                      An optional template that can be used to extract a
                      modified value when resolving the relationship.
                description: >-
                  DataFieldReference allows you to make reference to a given
                  field within a resources DataSchema.
              isSystemGenerated:
                type: boolean
                description: >-
                  The flag defines the creation type, which is permission
                  controlled.
              createdAt:
                type: string
                format: date-time
                title: createdAt UTC timestamp in rfc3339
              createdBy:
                type: string
                title: createdBy user uid
              updatedAt:
                type: string
                format: date-time
                title: updatedAt UTC timestamp in rfc3339
              updatedBy:
                type: string
                title: updatedBy user uid
              deletedAt:
                type: string
                format: date-time
                title: deletedAt UTC timestamp in rfc3339
              deletedBy:
                type: string
                title: deletedBy user uid
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              overlay:
                type: object
                properties:
                  uid:
                    type: string
                    title: uid is the unique id
                  userId:
                    type: string
                    title: userId is the user scoped uid
                  tenantId:
                    type: string
                    title: tenantId is the tenant scoped uid
                  resourceName:
                    type: string
                    title: The name of the resource this overrides
                  kind:
                    description: Kind is the type of data this field contains.
                    type: string
                    enum:
                      - RELATIONSHIP_KIND_UNSPECIFIED
                      - ONE_TO_MANY
                      - MANY_TO_ONE
                      - ONE_TO_ONE
                      - MANY_TO_MANY
                    default: RELATIONSHIP_KIND_UNSPECIFIED
                  fieldName:
                    type: string
                    title: the name of the field within the resource this overrides
                  fieldLabel:
                    type: string
                    description: Label is the field label.
                  localField:
                    title: The local field reference
                    type: object
                    properties:
                      resourceId:
                        type: string
                        description: >-
                          The ID of the resource this field references.

                          If this is empty you should use the resource name to
                          fetch the most appropriate resource.
                      resourceName:
                        type: string
                        description: The name of the resource this field references.
                      fieldName:
                        type: string
                        description: >-
                          The name of the field in the given resources
                          DataSchema.
                      valueTemplate:
                        type: string
                        description: >-
                          An optional template that can be used to extract a
                          modified value when resolving the relationship.
                    description: >-
                      DataFieldReference allows you to make reference to a given
                      field within a resources DataSchema.
                  foreignField:
                    title: The foreign field reference
                    type: object
                    properties:
                      resourceId:
                        type: string
                        description: >-
                          The ID of the resource this field references.

                          If this is empty you should use the resource name to
                          fetch the most appropriate resource.
                      resourceName:
                        type: string
                        description: The name of the resource this field references.
                      fieldName:
                        type: string
                        description: >-
                          The name of the field in the given resources
                          DataSchema.
                      valueTemplate:
                        type: string
                        description: >-
                          An optional template that can be used to extract a
                          modified value when resolving the relationship.
                    description: >-
                      DataFieldReference allows you to make reference to a given
                      field within a resources DataSchema.
                  isSystemGenerated:
                    type: boolean
                    description: >-
                      The flag defines the creation type, which is permission
                      controlled.
                  createdAt:
                    type: string
                    format: date-time
                    title: createdAt UTC timestamp in rfc3339
                  createdBy:
                    type: string
                    title: createdBy user uid
                  updatedAt:
                    type: string
                    format: date-time
                    title: updatedAt UTC timestamp in rfc3339
                  updatedBy:
                    type: string
                    title: updatedBy user uid
                  deletedAt:
                    type: string
                    format: date-time
                    title: deletedAt UTC timestamp in rfc3339
                  deletedBy:
                    type: string
                    title: deletedBy user uid
      tags:
        - UI
  '/ui/v1/data-relationship-overlay/{overlay.uid}':
    put:
      summary: PutDataRelationshipOverlay update matching overlay by new payload
      operationId: UIService_PutDataRelationshipOverlay
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              uid:
                type: string
                title: uid is the unique id
              userId:
                type: string
                title: userId is the user scoped uid
              tenantId:
                type: string
                title: tenantId is the tenant scoped uid
              resourceName:
                type: string
                title: The name of the resource this overrides
              kind:
                description: Kind is the type of data this field contains.
                type: string
                enum:
                  - RELATIONSHIP_KIND_UNSPECIFIED
                  - ONE_TO_MANY
                  - MANY_TO_ONE
                  - ONE_TO_ONE
                  - MANY_TO_MANY
                default: RELATIONSHIP_KIND_UNSPECIFIED
              fieldName:
                type: string
                title: the name of the field within the resource this overrides
              fieldLabel:
                type: string
                description: Label is the field label.
              localField:
                title: The local field reference
                type: object
                properties:
                  resourceId:
                    type: string
                    description: >-
                      The ID of the resource this field references.

                      If this is empty you should use the resource name to fetch
                      the most appropriate resource.
                  resourceName:
                    type: string
                    description: The name of the resource this field references.
                  fieldName:
                    type: string
                    description: The name of the field in the given resources DataSchema.
                  valueTemplate:
                    type: string
                    description: >-
                      An optional template that can be used to extract a
                      modified value when resolving the relationship.
                description: >-
                  DataFieldReference allows you to make reference to a given
                  field within a resources DataSchema.
              foreignField:
                title: The foreign field reference
                type: object
                properties:
                  resourceId:
                    type: string
                    description: >-
                      The ID of the resource this field references.

                      If this is empty you should use the resource name to fetch
                      the most appropriate resource.
                  resourceName:
                    type: string
                    description: The name of the resource this field references.
                  fieldName:
                    type: string
                    description: The name of the field in the given resources DataSchema.
                  valueTemplate:
                    type: string
                    description: >-
                      An optional template that can be used to extract a
                      modified value when resolving the relationship.
                description: >-
                  DataFieldReference allows you to make reference to a given
                  field within a resources DataSchema.
              isSystemGenerated:
                type: boolean
                description: >-
                  The flag defines the creation type, which is permission
                  controlled.
              createdAt:
                type: string
                format: date-time
                title: createdAt UTC timestamp in rfc3339
              createdBy:
                type: string
                title: createdBy user uid
              updatedAt:
                type: string
                format: date-time
                title: updatedAt UTC timestamp in rfc3339
              updatedBy:
                type: string
                title: updatedBy user uid
              deletedAt:
                type: string
                format: date-time
                title: deletedAt UTC timestamp in rfc3339
              deletedBy:
                type: string
                title: deletedBy user uid
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: overlay.uid
          description: uid is the unique id
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              overlay:
                type: object
                properties:
                  userId:
                    type: string
                    title: userId is the user scoped uid
                  tenantId:
                    type: string
                    title: tenantId is the tenant scoped uid
                  resourceName:
                    type: string
                    title: The name of the resource this overrides
                  kind:
                    description: Kind is the type of data this field contains.
                    type: string
                    enum:
                      - RELATIONSHIP_KIND_UNSPECIFIED
                      - ONE_TO_MANY
                      - MANY_TO_ONE
                      - ONE_TO_ONE
                      - MANY_TO_MANY
                    default: RELATIONSHIP_KIND_UNSPECIFIED
                  fieldName:
                    type: string
                    title: the name of the field within the resource this overrides
                  fieldLabel:
                    type: string
                    description: Label is the field label.
                  localField:
                    title: The local field reference
                    type: object
                    properties:
                      resourceId:
                        type: string
                        description: >-
                          The ID of the resource this field references.

                          If this is empty you should use the resource name to
                          fetch the most appropriate resource.
                      resourceName:
                        type: string
                        description: The name of the resource this field references.
                      fieldName:
                        type: string
                        description: >-
                          The name of the field in the given resources
                          DataSchema.
                      valueTemplate:
                        type: string
                        description: >-
                          An optional template that can be used to extract a
                          modified value when resolving the relationship.
                    description: >-
                      DataFieldReference allows you to make reference to a given
                      field within a resources DataSchema.
                  foreignField:
                    title: The foreign field reference
                    type: object
                    properties:
                      resourceId:
                        type: string
                        description: >-
                          The ID of the resource this field references.

                          If this is empty you should use the resource name to
                          fetch the most appropriate resource.
                      resourceName:
                        type: string
                        description: The name of the resource this field references.
                      fieldName:
                        type: string
                        description: >-
                          The name of the field in the given resources
                          DataSchema.
                      valueTemplate:
                        type: string
                        description: >-
                          An optional template that can be used to extract a
                          modified value when resolving the relationship.
                    description: >-
                      DataFieldReference allows you to make reference to a given
                      field within a resources DataSchema.
                  isSystemGenerated:
                    type: boolean
                    description: >-
                      The flag defines the creation type, which is permission
                      controlled.
                  createdAt:
                    type: string
                    format: date-time
                    title: createdAt UTC timestamp in rfc3339
                  createdBy:
                    type: string
                    title: createdBy user uid
                  updatedAt:
                    type: string
                    format: date-time
                    title: updatedAt UTC timestamp in rfc3339
                  updatedBy:
                    type: string
                    title: updatedBy user uid
                  deletedAt:
                    type: string
                    format: date-time
                    title: deletedAt UTC timestamp in rfc3339
                  deletedBy:
                    type: string
                    title: deletedBy user uid
            title: PutDataRelationshipOverlayRequest type definition
      tags:
        - UI
  '/ui/v1/data-relationship-overlay/{uid}':
    get:
      summary: GetDataRelationshipOverlay return matching overlay by uid
      operationId: UIService_GetDataRelationshipOverlay
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              uid:
                type: string
                title: uid is the unique id
              userId:
                type: string
                title: userId is the user scoped uid
              tenantId:
                type: string
                title: tenantId is the tenant scoped uid
              resourceName:
                type: string
                title: The name of the resource this overrides
              kind:
                description: Kind is the type of data this field contains.
                type: string
                enum:
                  - RELATIONSHIP_KIND_UNSPECIFIED
                  - ONE_TO_MANY
                  - MANY_TO_ONE
                  - ONE_TO_ONE
                  - MANY_TO_MANY
                default: RELATIONSHIP_KIND_UNSPECIFIED
              fieldName:
                type: string
                title: the name of the field within the resource this overrides
              fieldLabel:
                type: string
                description: Label is the field label.
              localField:
                title: The local field reference
                type: object
                properties:
                  resourceId:
                    type: string
                    description: >-
                      The ID of the resource this field references.

                      If this is empty you should use the resource name to fetch
                      the most appropriate resource.
                  resourceName:
                    type: string
                    description: The name of the resource this field references.
                  fieldName:
                    type: string
                    description: The name of the field in the given resources DataSchema.
                  valueTemplate:
                    type: string
                    description: >-
                      An optional template that can be used to extract a
                      modified value when resolving the relationship.
                description: >-
                  DataFieldReference allows you to make reference to a given
                  field within a resources DataSchema.
              foreignField:
                title: The foreign field reference
                type: object
                properties:
                  resourceId:
                    type: string
                    description: >-
                      The ID of the resource this field references.

                      If this is empty you should use the resource name to fetch
                      the most appropriate resource.
                  resourceName:
                    type: string
                    description: The name of the resource this field references.
                  fieldName:
                    type: string
                    description: The name of the field in the given resources DataSchema.
                  valueTemplate:
                    type: string
                    description: >-
                      An optional template that can be used to extract a
                      modified value when resolving the relationship.
                description: >-
                  DataFieldReference allows you to make reference to a given
                  field within a resources DataSchema.
              isSystemGenerated:
                type: boolean
                description: >-
                  The flag defines the creation type, which is permission
                  controlled.
              createdAt:
                type: string
                format: date-time
                title: createdAt UTC timestamp in rfc3339
              createdBy:
                type: string
                title: createdBy user uid
              updatedAt:
                type: string
                format: date-time
                title: updatedAt UTC timestamp in rfc3339
              updatedBy:
                type: string
                title: updatedBy user uid
              deletedAt:
                type: string
                format: date-time
                title: deletedAt UTC timestamp in rfc3339
              deletedBy:
                type: string
                title: deletedBy user uid
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: uid
          in: path
          required: true
          type: string
      tags:
        - UI
    delete:
      summary: DelDataRelationshipOverlay remove matching overlay by uid
      operationId: UIService_DelDataRelationshipOverlay
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              uid:
                type: string
                title: uid is the unique id
              userId:
                type: string
                title: userId is the user scoped uid
              tenantId:
                type: string
                title: tenantId is the tenant scoped uid
              resourceName:
                type: string
                title: The name of the resource this overrides
              kind:
                description: Kind is the type of data this field contains.
                type: string
                enum:
                  - RELATIONSHIP_KIND_UNSPECIFIED
                  - ONE_TO_MANY
                  - MANY_TO_ONE
                  - ONE_TO_ONE
                  - MANY_TO_MANY
                default: RELATIONSHIP_KIND_UNSPECIFIED
              fieldName:
                type: string
                title: the name of the field within the resource this overrides
              fieldLabel:
                type: string
                description: Label is the field label.
              localField:
                title: The local field reference
                type: object
                properties:
                  resourceId:
                    type: string
                    description: >-
                      The ID of the resource this field references.

                      If this is empty you should use the resource name to fetch
                      the most appropriate resource.
                  resourceName:
                    type: string
                    description: The name of the resource this field references.
                  fieldName:
                    type: string
                    description: The name of the field in the given resources DataSchema.
                  valueTemplate:
                    type: string
                    description: >-
                      An optional template that can be used to extract a
                      modified value when resolving the relationship.
                description: >-
                  DataFieldReference allows you to make reference to a given
                  field within a resources DataSchema.
              foreignField:
                title: The foreign field reference
                type: object
                properties:
                  resourceId:
                    type: string
                    description: >-
                      The ID of the resource this field references.

                      If this is empty you should use the resource name to fetch
                      the most appropriate resource.
                  resourceName:
                    type: string
                    description: The name of the resource this field references.
                  fieldName:
                    type: string
                    description: The name of the field in the given resources DataSchema.
                  valueTemplate:
                    type: string
                    description: >-
                      An optional template that can be used to extract a
                      modified value when resolving the relationship.
                description: >-
                  DataFieldReference allows you to make reference to a given
                  field within a resources DataSchema.
              isSystemGenerated:
                type: boolean
                description: >-
                  The flag defines the creation type, which is permission
                  controlled.
              createdAt:
                type: string
                format: date-time
                title: createdAt UTC timestamp in rfc3339
              createdBy:
                type: string
                title: createdBy user uid
              updatedAt:
                type: string
                format: date-time
                title: updatedAt UTC timestamp in rfc3339
              updatedBy:
                type: string
                title: updatedBy user uid
              deletedAt:
                type: string
                format: date-time
                title: deletedAt UTC timestamp in rfc3339
              deletedBy:
                type: string
                title: deletedBy user uid
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: uid
          in: path
          required: true
          type: string
      tags:
        - UI
  /ui/v1/data-schema-field-overlay:
    post:
      operationId: UIService_NewDataSchemaFieldOverlay
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              uid:
                type: string
                title: uid is the unique id
              userId:
                type: string
                title: userId is the user scoped uid
              tenantId:
                type: string
                title: tenantId is the tenant scoped uid
              resourceName:
                type: string
                title: The name of the resource this overrides
              fieldName:
                type: string
                title: the name of the field within the resource this overrides
              fieldLabel:
                type: string
                description: Label is the field label.
              fieldIsList:
                type: boolean
                description: >-
                  Is list is true if this field contains a list of the given
                  kind.
              fieldIsNullable:
                type: boolean
                description: Is nullable is true if this field can be null.
              fieldIsSortable:
                type: boolean
                description: Is sortable is true if you are able to sort on this field.
              fieldIsFilterable:
                type: boolean
                description: Is filterable is true if you are able to filter on this field.
              fieldKind:
                description: Kind is the type of data this field contains.
                type: string
                enum:
                  - DATA_FIELD_KIND_UNSPECIFIED
                  - STRING
                  - BOOL
                  - INT
                  - ENUM
                  - RELATED_OBJECT
                  - DATETIME
                  - TIMESTAMP
                  - DECIMAL
                  - DATE
                  - OBJECT
                default: DATA_FIELD_KIND_UNSPECIFIED
              enum:
                type: object
                properties:
                  values:
                    type: array
                    items:
                      type: object
                      properties:
                        stringValue:
                          type: string
                        boolValue:
                          type: boolean
                        intValue:
                          type: string
                          format: int64
                        isDefault:
                          type: boolean
                        label:
                          type: string
                description: KindDataEnum contains information about the enum.
              decimal:
                type: object
                properties:
                  precision:
                    type: integer
                    format: int32
                    description: The number of numbers within the decimal.
                  scale:
                    type: integer
                    format: int32
                    description: >-
                      The number of numbers to the right of the decimal point in
                      the decimal.
                description: KindDataDecimal contains information about the decimal.
              string:
                type: object
                properties:
                  maxLength:
                    type: integer
                    format: int32
                    description: The max length of the string.
                description: KindDataString contains information about the string.
              int:
                type: object
                properties:
                  precision:
                    type: integer
                    format: int32
                    description: The precision of the int. Either 32 or 64.
                  isDuration:
                    type: boolean
                    description: >-
                      Defines whether or not this int represents a duration.

                      This is important for Skedulo GraphQL datasources since
                      duration types need to be filtered differently.
                description: KindDataString contains information about the string.
              isSystemGenerated:
                type: boolean
                description: >-
                  The flag defines the creation type, which is permission
                  controlled.
              createdAt:
                type: string
                format: date-time
                title: createdAt UTC timestamp in rfc3339
              createdBy:
                type: string
                title: createdBy user uid
              updatedAt:
                type: string
                format: date-time
                title: updatedAt UTC timestamp in rfc3339
              updatedBy:
                type: string
                title: updatedBy user uid
              deletedAt:
                type: string
                format: date-time
                title: deletedAt UTC timestamp in rfc3339
              deletedBy:
                type: string
                title: deletedBy user uid
            description: >-
              DataSchemaFieldOverlay is a overlay to the data schema object
              where multiple DataSchemas can be overridden on

              a system, tenant or user basis. Each item overlays one specific
              field in the DataSchema.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              overlay:
                type: object
                properties:
                  uid:
                    type: string
                    title: uid is the unique id
                  userId:
                    type: string
                    title: userId is the user scoped uid
                  tenantId:
                    type: string
                    title: tenantId is the tenant scoped uid
                  resourceName:
                    type: string
                    title: The name of the resource this overrides
                  fieldName:
                    type: string
                    title: the name of the field within the resource this overrides
                  fieldLabel:
                    type: string
                    description: Label is the field label.
                  fieldIsList:
                    type: boolean
                    description: >-
                      Is list is true if this field contains a list of the given
                      kind.
                  fieldIsNullable:
                    type: boolean
                    description: Is nullable is true if this field can be null.
                  fieldIsSortable:
                    type: boolean
                    description: Is sortable is true if you are able to sort on this field.
                  fieldIsFilterable:
                    type: boolean
                    description: >-
                      Is filterable is true if you are able to filter on this
                      field.
                  fieldKind:
                    description: Kind is the type of data this field contains.
                    type: string
                    enum:
                      - DATA_FIELD_KIND_UNSPECIFIED
                      - STRING
                      - BOOL
                      - INT
                      - ENUM
                      - RELATED_OBJECT
                      - DATETIME
                      - TIMESTAMP
                      - DECIMAL
                      - DATE
                      - OBJECT
                    default: DATA_FIELD_KIND_UNSPECIFIED
                  enum:
                    type: object
                    properties:
                      values:
                        type: array
                        items:
                          type: object
                          properties:
                            stringValue:
                              type: string
                            boolValue:
                              type: boolean
                            intValue:
                              type: string
                              format: int64
                            isDefault:
                              type: boolean
                            label:
                              type: string
                    description: KindDataEnum contains information about the enum.
                  decimal:
                    type: object
                    properties:
                      precision:
                        type: integer
                        format: int32
                        description: The number of numbers within the decimal.
                      scale:
                        type: integer
                        format: int32
                        description: >-
                          The number of numbers to the right of the decimal
                          point in the decimal.
                    description: KindDataDecimal contains information about the decimal.
                  string:
                    type: object
                    properties:
                      maxLength:
                        type: integer
                        format: int32
                        description: The max length of the string.
                    description: KindDataString contains information about the string.
                  int:
                    type: object
                    properties:
                      precision:
                        type: integer
                        format: int32
                        description: The precision of the int. Either 32 or 64.
                      isDuration:
                        type: boolean
                        description: >-
                          Defines whether or not this int represents a duration.

                          This is important for Skedulo GraphQL datasources
                          since duration types need to be filtered differently.
                    description: KindDataString contains information about the string.
                  isSystemGenerated:
                    type: boolean
                    description: >-
                      The flag defines the creation type, which is permission
                      controlled.
                  createdAt:
                    type: string
                    format: date-time
                    title: createdAt UTC timestamp in rfc3339
                  createdBy:
                    type: string
                    title: createdBy user uid
                  updatedAt:
                    type: string
                    format: date-time
                    title: updatedAt UTC timestamp in rfc3339
                  updatedBy:
                    type: string
                    title: updatedBy user uid
                  deletedAt:
                    type: string
                    format: date-time
                    title: deletedAt UTC timestamp in rfc3339
                  deletedBy:
                    type: string
                    title: deletedBy user uid
                description: >-
                  DataSchemaFieldOverlay is a overlay to the data schema object
                  where multiple DataSchemas can be overridden on

                  a system, tenant or user basis. Each item overlays one
                  specific field in the DataSchema.
      tags:
        - UI
  '/ui/v1/data-schema-field-overlay/{overlay.uid}':
    put:
      summary: PutDataRelationshipOverlay update matching overlay by new payload
      operationId: UIService_PutDataSchemaFieldOverlay
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              uid:
                type: string
                title: uid is the unique id
              userId:
                type: string
                title: userId is the user scoped uid
              tenantId:
                type: string
                title: tenantId is the tenant scoped uid
              resourceName:
                type: string
                title: The name of the resource this overrides
              fieldName:
                type: string
                title: the name of the field within the resource this overrides
              fieldLabel:
                type: string
                description: Label is the field label.
              fieldIsList:
                type: boolean
                description: >-
                  Is list is true if this field contains a list of the given
                  kind.
              fieldIsNullable:
                type: boolean
                description: Is nullable is true if this field can be null.
              fieldIsSortable:
                type: boolean
                description: Is sortable is true if you are able to sort on this field.
              fieldIsFilterable:
                type: boolean
                description: Is filterable is true if you are able to filter on this field.
              fieldKind:
                description: Kind is the type of data this field contains.
                type: string
                enum:
                  - DATA_FIELD_KIND_UNSPECIFIED
                  - STRING
                  - BOOL
                  - INT
                  - ENUM
                  - RELATED_OBJECT
                  - DATETIME
                  - TIMESTAMP
                  - DECIMAL
                  - DATE
                  - OBJECT
                default: DATA_FIELD_KIND_UNSPECIFIED
              enum:
                type: object
                properties:
                  values:
                    type: array
                    items:
                      type: object
                      properties:
                        stringValue:
                          type: string
                        boolValue:
                          type: boolean
                        intValue:
                          type: string
                          format: int64
                        isDefault:
                          type: boolean
                        label:
                          type: string
                description: KindDataEnum contains information about the enum.
              decimal:
                type: object
                properties:
                  precision:
                    type: integer
                    format: int32
                    description: The number of numbers within the decimal.
                  scale:
                    type: integer
                    format: int32
                    description: >-
                      The number of numbers to the right of the decimal point in
                      the decimal.
                description: KindDataDecimal contains information about the decimal.
              string:
                type: object
                properties:
                  maxLength:
                    type: integer
                    format: int32
                    description: The max length of the string.
                description: KindDataString contains information about the string.
              int:
                type: object
                properties:
                  precision:
                    type: integer
                    format: int32
                    description: The precision of the int. Either 32 or 64.
                  isDuration:
                    type: boolean
                    description: >-
                      Defines whether or not this int represents a duration.

                      This is important for Skedulo GraphQL datasources since
                      duration types need to be filtered differently.
                description: KindDataString contains information about the string.
              isSystemGenerated:
                type: boolean
                description: >-
                  The flag defines the creation type, which is permission
                  controlled.
              createdAt:
                type: string
                format: date-time
                title: createdAt UTC timestamp in rfc3339
              createdBy:
                type: string
                title: createdBy user uid
              updatedAt:
                type: string
                format: date-time
                title: updatedAt UTC timestamp in rfc3339
              updatedBy:
                type: string
                title: updatedBy user uid
              deletedAt:
                type: string
                format: date-time
                title: deletedAt UTC timestamp in rfc3339
              deletedBy:
                type: string
                title: deletedBy user uid
            description: >-
              DataSchemaFieldOverlay is a overlay to the data schema object
              where multiple DataSchemas can be overridden on

              a system, tenant or user basis. Each item overlays one specific
              field in the DataSchema.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: overlay.uid
          description: uid is the unique id
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              overlay:
                type: object
                properties:
                  userId:
                    type: string
                    title: userId is the user scoped uid
                  tenantId:
                    type: string
                    title: tenantId is the tenant scoped uid
                  resourceName:
                    type: string
                    title: The name of the resource this overrides
                  fieldName:
                    type: string
                    title: the name of the field within the resource this overrides
                  fieldLabel:
                    type: string
                    description: Label is the field label.
                  fieldIsList:
                    type: boolean
                    description: >-
                      Is list is true if this field contains a list of the given
                      kind.
                  fieldIsNullable:
                    type: boolean
                    description: Is nullable is true if this field can be null.
                  fieldIsSortable:
                    type: boolean
                    description: Is sortable is true if you are able to sort on this field.
                  fieldIsFilterable:
                    type: boolean
                    description: >-
                      Is filterable is true if you are able to filter on this
                      field.
                  fieldKind:
                    description: Kind is the type of data this field contains.
                    type: string
                    enum:
                      - DATA_FIELD_KIND_UNSPECIFIED
                      - STRING
                      - BOOL
                      - INT
                      - ENUM
                      - RELATED_OBJECT
                      - DATETIME
                      - TIMESTAMP
                      - DECIMAL
                      - DATE
                      - OBJECT
                    default: DATA_FIELD_KIND_UNSPECIFIED
                  enum:
                    type: object
                    properties:
                      values:
                        type: array
                        items:
                          type: object
                          properties:
                            stringValue:
                              type: string
                            boolValue:
                              type: boolean
                            intValue:
                              type: string
                              format: int64
                            isDefault:
                              type: boolean
                            label:
                              type: string
                    description: KindDataEnum contains information about the enum.
                  decimal:
                    type: object
                    properties:
                      precision:
                        type: integer
                        format: int32
                        description: The number of numbers within the decimal.
                      scale:
                        type: integer
                        format: int32
                        description: >-
                          The number of numbers to the right of the decimal
                          point in the decimal.
                    description: KindDataDecimal contains information about the decimal.
                  string:
                    type: object
                    properties:
                      maxLength:
                        type: integer
                        format: int32
                        description: The max length of the string.
                    description: KindDataString contains information about the string.
                  int:
                    type: object
                    properties:
                      precision:
                        type: integer
                        format: int32
                        description: The precision of the int. Either 32 or 64.
                      isDuration:
                        type: boolean
                        description: >-
                          Defines whether or not this int represents a duration.

                          This is important for Skedulo GraphQL datasources
                          since duration types need to be filtered differently.
                    description: KindDataString contains information about the string.
                  isSystemGenerated:
                    type: boolean
                    description: >-
                      The flag defines the creation type, which is permission
                      controlled.
                  createdAt:
                    type: string
                    format: date-time
                    title: createdAt UTC timestamp in rfc3339
                  createdBy:
                    type: string
                    title: createdBy user uid
                  updatedAt:
                    type: string
                    format: date-time
                    title: updatedAt UTC timestamp in rfc3339
                  updatedBy:
                    type: string
                    title: updatedBy user uid
                  deletedAt:
                    type: string
                    format: date-time
                    title: deletedAt UTC timestamp in rfc3339
                  deletedBy:
                    type: string
                    title: deletedBy user uid
                description: >-
                  DataSchemaFieldOverlay is a overlay to the data schema object
                  where multiple DataSchemas can be overridden on

                  a system, tenant or user basis. Each item overlays one
                  specific field in the DataSchema.
            title: PutDataSchemaFieldOverlayRequest type definition
      tags:
        - UI
  '/ui/v1/data-schema-field-overlay/{uid}':
    get:
      summary: GetDataRelationshipOverlay return matching overlay by uid
      operationId: UIService_GetDataSchemaFieldOverlay
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              uid:
                type: string
                title: uid is the unique id
              userId:
                type: string
                title: userId is the user scoped uid
              tenantId:
                type: string
                title: tenantId is the tenant scoped uid
              resourceName:
                type: string
                title: The name of the resource this overrides
              fieldName:
                type: string
                title: the name of the field within the resource this overrides
              fieldLabel:
                type: string
                description: Label is the field label.
              fieldIsList:
                type: boolean
                description: >-
                  Is list is true if this field contains a list of the given
                  kind.
              fieldIsNullable:
                type: boolean
                description: Is nullable is true if this field can be null.
              fieldIsSortable:
                type: boolean
                description: Is sortable is true if you are able to sort on this field.
              fieldIsFilterable:
                type: boolean
                description: Is filterable is true if you are able to filter on this field.
              fieldKind:
                description: Kind is the type of data this field contains.
                type: string
                enum:
                  - DATA_FIELD_KIND_UNSPECIFIED
                  - STRING
                  - BOOL
                  - INT
                  - ENUM
                  - RELATED_OBJECT
                  - DATETIME
                  - TIMESTAMP
                  - DECIMAL
                  - DATE
                  - OBJECT
                default: DATA_FIELD_KIND_UNSPECIFIED
              enum:
                type: object
                properties:
                  values:
                    type: array
                    items:
                      type: object
                      properties:
                        stringValue:
                          type: string
                        boolValue:
                          type: boolean
                        intValue:
                          type: string
                          format: int64
                        isDefault:
                          type: boolean
                        label:
                          type: string
                description: KindDataEnum contains information about the enum.
              decimal:
                type: object
                properties:
                  precision:
                    type: integer
                    format: int32
                    description: The number of numbers within the decimal.
                  scale:
                    type: integer
                    format: int32
                    description: >-
                      The number of numbers to the right of the decimal point in
                      the decimal.
                description: KindDataDecimal contains information about the decimal.
              string:
                type: object
                properties:
                  maxLength:
                    type: integer
                    format: int32
                    description: The max length of the string.
                description: KindDataString contains information about the string.
              int:
                type: object
                properties:
                  precision:
                    type: integer
                    format: int32
                    description: The precision of the int. Either 32 or 64.
                  isDuration:
                    type: boolean
                    description: >-
                      Defines whether or not this int represents a duration.

                      This is important for Skedulo GraphQL datasources since
                      duration types need to be filtered differently.
                description: KindDataString contains information about the string.
              isSystemGenerated:
                type: boolean
                description: >-
                  The flag defines the creation type, which is permission
                  controlled.
              createdAt:
                type: string
                format: date-time
                title: createdAt UTC timestamp in rfc3339
              createdBy:
                type: string
                title: createdBy user uid
              updatedAt:
                type: string
                format: date-time
                title: updatedAt UTC timestamp in rfc3339
              updatedBy:
                type: string
                title: updatedBy user uid
              deletedAt:
                type: string
                format: date-time
                title: deletedAt UTC timestamp in rfc3339
              deletedBy:
                type: string
                title: deletedBy user uid
            description: >-
              DataSchemaFieldOverlay is a overlay to the data schema object
              where multiple DataSchemas can be overridden on

              a system, tenant or user basis. Each item overlays one specific
              field in the DataSchema.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: uid
          in: path
          required: true
          type: string
      tags:
        - UI
    delete:
      summary: DelDataRelationshipOverlay remove matching overlay by uid
      operationId: UIService_DelDataSchemaFieldOverlay
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              uid:
                type: string
                title: uid is the unique id
              userId:
                type: string
                title: userId is the user scoped uid
              tenantId:
                type: string
                title: tenantId is the tenant scoped uid
              resourceName:
                type: string
                title: The name of the resource this overrides
              fieldName:
                type: string
                title: the name of the field within the resource this overrides
              fieldLabel:
                type: string
                description: Label is the field label.
              fieldIsList:
                type: boolean
                description: >-
                  Is list is true if this field contains a list of the given
                  kind.
              fieldIsNullable:
                type: boolean
                description: Is nullable is true if this field can be null.
              fieldIsSortable:
                type: boolean
                description: Is sortable is true if you are able to sort on this field.
              fieldIsFilterable:
                type: boolean
                description: Is filterable is true if you are able to filter on this field.
              fieldKind:
                description: Kind is the type of data this field contains.
                type: string
                enum:
                  - DATA_FIELD_KIND_UNSPECIFIED
                  - STRING
                  - BOOL
                  - INT
                  - ENUM
                  - RELATED_OBJECT
                  - DATETIME
                  - TIMESTAMP
                  - DECIMAL
                  - DATE
                  - OBJECT
                default: DATA_FIELD_KIND_UNSPECIFIED
              enum:
                type: object
                properties:
                  values:
                    type: array
                    items:
                      type: object
                      properties:
                        stringValue:
                          type: string
                        boolValue:
                          type: boolean
                        intValue:
                          type: string
                          format: int64
                        isDefault:
                          type: boolean
                        label:
                          type: string
                description: KindDataEnum contains information about the enum.
              decimal:
                type: object
                properties:
                  precision:
                    type: integer
                    format: int32
                    description: The number of numbers within the decimal.
                  scale:
                    type: integer
                    format: int32
                    description: >-
                      The number of numbers to the right of the decimal point in
                      the decimal.
                description: KindDataDecimal contains information about the decimal.
              string:
                type: object
                properties:
                  maxLength:
                    type: integer
                    format: int32
                    description: The max length of the string.
                description: KindDataString contains information about the string.
              int:
                type: object
                properties:
                  precision:
                    type: integer
                    format: int32
                    description: The precision of the int. Either 32 or 64.
                  isDuration:
                    type: boolean
                    description: >-
                      Defines whether or not this int represents a duration.

                      This is important for Skedulo GraphQL datasources since
                      duration types need to be filtered differently.
                description: KindDataString contains information about the string.
              isSystemGenerated:
                type: boolean
                description: >-
                  The flag defines the creation type, which is permission
                  controlled.
              createdAt:
                type: string
                format: date-time
                title: createdAt UTC timestamp in rfc3339
              createdBy:
                type: string
                title: createdBy user uid
              updatedAt:
                type: string
                format: date-time
                title: updatedAt UTC timestamp in rfc3339
              updatedBy:
                type: string
                title: updatedBy user uid
              deletedAt:
                type: string
                format: date-time
                title: deletedAt UTC timestamp in rfc3339
              deletedBy:
                type: string
                title: deletedBy user uid
            description: >-
              DataSchemaFieldOverlay is a overlay to the data schema object
              where multiple DataSchemas can be overridden on

              a system, tenant or user basis. Each item overlays one specific
              field in the DataSchema.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: uid
          in: path
          required: true
          type: string
      tags:
        - UI
  /ui/v1/data-schema-overlay:
    get:
      summary: >-
        Returns a set of field and relationship overlays for a data schema
        matching the given request
      operationId: UIService_GetDataSchemaOverlays
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              fieldOverlays:
                type: array
                items:
                  type: object
                  properties:
                    uid:
                      type: string
                      title: uid is the unique id
                    userId:
                      type: string
                      title: userId is the user scoped uid
                    tenantId:
                      type: string
                      title: tenantId is the tenant scoped uid
                    resourceName:
                      type: string
                      title: The name of the resource this overrides
                    fieldName:
                      type: string
                      title: the name of the field within the resource this overrides
                    fieldLabel:
                      type: string
                      description: Label is the field label.
                    fieldIsList:
                      type: boolean
                      description: >-
                        Is list is true if this field contains a list of the
                        given kind.
                    fieldIsNullable:
                      type: boolean
                      description: Is nullable is true if this field can be null.
                    fieldIsSortable:
                      type: boolean
                      description: >-
                        Is sortable is true if you are able to sort on this
                        field.
                    fieldIsFilterable:
                      type: boolean
                      description: >-
                        Is filterable is true if you are able to filter on this
                        field.
                    fieldKind:
                      description: Kind is the type of data this field contains.
                      type: string
                      enum:
                        - DATA_FIELD_KIND_UNSPECIFIED
                        - STRING
                        - BOOL
                        - INT
                        - ENUM
                        - RELATED_OBJECT
                        - DATETIME
                        - TIMESTAMP
                        - DECIMAL
                        - DATE
                        - OBJECT
                      default: DATA_FIELD_KIND_UNSPECIFIED
                    enum:
                      type: object
                      properties:
                        values:
                          type: array
                          items:
                            type: object
                            properties:
                              stringValue:
                                type: string
                              boolValue:
                                type: boolean
                              intValue:
                                type: string
                                format: int64
                              isDefault:
                                type: boolean
                              label:
                                type: string
                      description: KindDataEnum contains information about the enum.
                    decimal:
                      type: object
                      properties:
                        precision:
                          type: integer
                          format: int32
                          description: The number of numbers within the decimal.
                        scale:
                          type: integer
                          format: int32
                          description: >-
                            The number of numbers to the right of the decimal
                            point in the decimal.
                      description: KindDataDecimal contains information about the decimal.
                    string:
                      type: object
                      properties:
                        maxLength:
                          type: integer
                          format: int32
                          description: The max length of the string.
                      description: KindDataString contains information about the string.
                    int:
                      type: object
                      properties:
                        precision:
                          type: integer
                          format: int32
                          description: The precision of the int. Either 32 or 64.
                        isDuration:
                          type: boolean
                          description: >-
                            Defines whether or not this int represents a
                            duration.

                            This is important for Skedulo GraphQL datasources
                            since duration types need to be filtered
                            differently.
                      description: KindDataString contains information about the string.
                    isSystemGenerated:
                      type: boolean
                      description: >-
                        The flag defines the creation type, which is permission
                        controlled.
                    createdAt:
                      type: string
                      format: date-time
                      title: createdAt UTC timestamp in rfc3339
                    createdBy:
                      type: string
                      title: createdBy user uid
                    updatedAt:
                      type: string
                      format: date-time
                      title: updatedAt UTC timestamp in rfc3339
                    updatedBy:
                      type: string
                      title: updatedBy user uid
                    deletedAt:
                      type: string
                      format: date-time
                      title: deletedAt UTC timestamp in rfc3339
                    deletedBy:
                      type: string
                      title: deletedBy user uid
                  description: >-
                    DataSchemaFieldOverlay is a overlay to the data schema
                    object where multiple DataSchemas can be overridden on

                    a system, tenant or user basis. Each item overlays one
                    specific field in the DataSchema.
              relationshipOverlays:
                type: array
                items:
                  type: object
                  properties:
                    uid:
                      type: string
                      title: uid is the unique id
                    userId:
                      type: string
                      title: userId is the user scoped uid
                    tenantId:
                      type: string
                      title: tenantId is the tenant scoped uid
                    resourceName:
                      type: string
                      title: The name of the resource this overrides
                    kind:
                      description: Kind is the type of data this field contains.
                      type: string
                      enum:
                        - RELATIONSHIP_KIND_UNSPECIFIED
                        - ONE_TO_MANY
                        - MANY_TO_ONE
                        - ONE_TO_ONE
                        - MANY_TO_MANY
                      default: RELATIONSHIP_KIND_UNSPECIFIED
                    fieldName:
                      type: string
                      title: the name of the field within the resource this overrides
                    fieldLabel:
                      type: string
                      description: Label is the field label.
                    localField:
                      title: The local field reference
                      type: object
                      properties:
                        resourceId:
                          type: string
                          description: >-
                            The ID of the resource this field references.

                            If this is empty you should use the resource name to
                            fetch the most appropriate resource.
                        resourceName:
                          type: string
                          description: The name of the resource this field references.
                        fieldName:
                          type: string
                          description: >-
                            The name of the field in the given resources
                            DataSchema.
                        valueTemplate:
                          type: string
                          description: >-
                            An optional template that can be used to extract a
                            modified value when resolving the relationship.
                      description: >-
                        DataFieldReference allows you to make reference to a
                        given field within a resources DataSchema.
                    foreignField:
                      title: The foreign field reference
                      type: object
                      properties:
                        resourceId:
                          type: string
                          description: >-
                            The ID of the resource this field references.

                            If this is empty you should use the resource name to
                            fetch the most appropriate resource.
                        resourceName:
                          type: string
                          description: The name of the resource this field references.
                        fieldName:
                          type: string
                          description: >-
                            The name of the field in the given resources
                            DataSchema.
                        valueTemplate:
                          type: string
                          description: >-
                            An optional template that can be used to extract a
                            modified value when resolving the relationship.
                      description: >-
                        DataFieldReference allows you to make reference to a
                        given field within a resources DataSchema.
                    isSystemGenerated:
                      type: boolean
                      description: >-
                        The flag defines the creation type, which is permission
                        controlled.
                    createdAt:
                      type: string
                      format: date-time
                      title: createdAt UTC timestamp in rfc3339
                    createdBy:
                      type: string
                      title: createdBy user uid
                    updatedAt:
                      type: string
                      format: date-time
                      title: updatedAt UTC timestamp in rfc3339
                    updatedBy:
                      type: string
                      title: updatedBy user uid
                    deletedAt:
                      type: string
                      format: date-time
                      title: deletedAt UTC timestamp in rfc3339
                    deletedBy:
                      type: string
                      title: deletedBy user uid
            title: GetDataSchemasResponse type definition
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: userId.strategy
          description: |-
            Required. The strategy to use when matching the value.

             - MATCH_STRATEGY_UNSPECIFIED: Not specified. This value should be never used.
             - MATCH_EXACT: Match the value exactly.
             - MATCH_EXACT_AND_NULL: Match the value exactly, or where the value is null or empty.
             - MATCH_NULL_ONLY: Match null or empty only.
             - MATCH_ANY: Match any value.
          in: query
          required: false
          type: string
          enum:
            - MATCH_STRATEGY_UNSPECIFIED
            - MATCH_EXACT
            - MATCH_EXACT_AND_NULL
            - MATCH_NULL_ONLY
            - MATCH_ANY
          default: MATCH_STRATEGY_UNSPECIFIED
        - name: userId.value
          description: The value to be matched.
          in: query
          required: false
          type: string
        - name: tenantId.strategy
          description: |-
            Required. The strategy to use when matching the value.

             - MATCH_STRATEGY_UNSPECIFIED: Not specified. This value should be never used.
             - MATCH_EXACT: Match the value exactly.
             - MATCH_EXACT_AND_NULL: Match the value exactly, or where the value is null or empty.
             - MATCH_NULL_ONLY: Match null or empty only.
             - MATCH_ANY: Match any value.
          in: query
          required: false
          type: string
          enum:
            - MATCH_STRATEGY_UNSPECIFIED
            - MATCH_EXACT
            - MATCH_EXACT_AND_NULL
            - MATCH_NULL_ONLY
            - MATCH_ANY
          default: MATCH_STRATEGY_UNSPECIFIED
        - name: tenantId.value
          description: The value to be matched.
          in: query
          required: false
          type: string
        - name: domainId.strategy
          description: |-
            Required. The strategy to use when matching the value.

             - MATCH_STRATEGY_UNSPECIFIED: Not specified. This value should be never used.
             - MATCH_EXACT: Match the value exactly.
             - MATCH_EXACT_AND_NULL: Match the value exactly, or where the value is null or empty.
             - MATCH_NULL_ONLY: Match null or empty only.
             - MATCH_ANY: Match any value.
          in: query
          required: false
          type: string
          enum:
            - MATCH_STRATEGY_UNSPECIFIED
            - MATCH_EXACT
            - MATCH_EXACT_AND_NULL
            - MATCH_NULL_ONLY
            - MATCH_ANY
          default: MATCH_STRATEGY_UNSPECIFIED
        - name: domainId.value
          description: The value to be matched.
          in: query
          required: false
          type: string
        - name: resourceName
          in: query
          required: false
          type: string
        - name: limit
          in: query
          required: false
          type: integer
          format: int32
        - name: page
          in: query
          required: false
          type: integer
          format: int32
      tags:
        - UI
  /ui/v1/destination:
    get:
      operationId: UIService_GetDestinations
      responses:
        '200':
          description: A successful response.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: destination
          description: |2-
             - DESTINATION_UNSPECIFIED: Not specified. This value should be never used.
             - NOOP: Does nothing.
             - PLATFORM: Links to a Platform Page slug.
             - LINK: Links to a URI. The path can be absolute or relative.
             - PAGE: Links to a Phoenix page. The path should be relative.
             - WEBX: Links to a WebExtension. The path should be relative.
          in: query
          required: false
          type: string
          enum:
            - DESTINATION_UNSPECIFIED
            - NOOP
            - PLATFORM
            - LINK
            - PAGE
            - WEBX
          default: DESTINATION_UNSPECIFIED
      tags:
        - UI
  /ui/v1/filter:
    get:
      summary: Lists the set of Filters matching the request.
      operationId: UIService_GetFilters
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              filters:
                type: array
                items:
                  type: object
                  properties:
                    uid:
                      type: string
                      description: Output only. The unique ID of the filter.
                      readOnly: true
                    name:
                      type: string
                      description: Required. The human readable name of the filter.
                      required:
                        - name
                    resourceId:
                      type: string
                    userId:
                      type: string
                      description: The ID of the user this filter is used for.
                    tenantId:
                      type: string
                      description: The ID of the tenant this filter is used for.
                    domainId:
                      type: string
                      description: Deprecated.
                    query:
                      type: string
                    sorting:
                      type: array
                      items:
                        type: string
                    depth:
                      type: integer
                      format: int32
                      description: >-
                        The maximum depth used when querying relational
                        structures.
                    isSystemGenerated:
                      type: boolean
                      description: >-
                        The flag defines the creation type, which is permission
                        controlled.
                    createdAt:
                      type: string
                      description: Creation timestamp in RFC3339 text format.
                      readOnly: true
                    createdBy:
                      type: string
                      description: The UID of the User who created this configuration.
                      readOnly: true
                    updatedAt:
                      type: string
                      description: Updated timestamp in RFC3339 text format.
                      readOnly: true
                    updatedBy:
                      type: string
                      description: The UID of the User who last updated this configuration.
                      readOnly: true
                    deletedAt:
                      type: string
                      description: Deletion timestamp in RFC3339 text format.
                      readOnly: true
                    deletedBy:
                      type: string
                      description: The UID of the User who deleted this configuration.
                      readOnly: true
                  title: >-
                    Filter to represent a registered Filter component
                    configuration

                    {
                      "uid": "1111",
                      "name": "Jobs Filter Config A",
                      "resource_id": "0101",
                      "user_id": "some-user",
                      "tenant_id": "some-tenant",
                      "domain_id": "some-domain",
                      "query": "status: completed",
                      "sorting": ["name", "-resource_id"]
                    }
                  required:
                    - name
                description: >-
                  The Filters that matched the request.  This may be less than
                  total_count if limit was set.
              totalCount:
                type: integer
                format: int32
                description: The total number of Filters that matched the request.
            description: Response message for UIApi.GetFilters.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: resourceId.strategy
          description: |-
            Required. The strategy to use when matching the value.

             - MATCH_STRATEGY_UNSPECIFIED: Not specified. This value should be never used.
             - MATCH_EXACT: Match the value exactly.
             - MATCH_EXACT_AND_NULL: Match the value exactly, or where the value is null or empty.
             - MATCH_NULL_ONLY: Match null or empty only.
             - MATCH_ANY: Match any value.
          in: query
          required: false
          type: string
          enum:
            - MATCH_STRATEGY_UNSPECIFIED
            - MATCH_EXACT
            - MATCH_EXACT_AND_NULL
            - MATCH_NULL_ONLY
            - MATCH_ANY
          default: MATCH_STRATEGY_UNSPECIFIED
        - name: resourceId.value
          description: The value to be matched.
          in: query
          required: false
          type: string
        - name: userId.strategy
          description: |-
            Required. The strategy to use when matching the value.

             - MATCH_STRATEGY_UNSPECIFIED: Not specified. This value should be never used.
             - MATCH_EXACT: Match the value exactly.
             - MATCH_EXACT_AND_NULL: Match the value exactly, or where the value is null or empty.
             - MATCH_NULL_ONLY: Match null or empty only.
             - MATCH_ANY: Match any value.
          in: query
          required: false
          type: string
          enum:
            - MATCH_STRATEGY_UNSPECIFIED
            - MATCH_EXACT
            - MATCH_EXACT_AND_NULL
            - MATCH_NULL_ONLY
            - MATCH_ANY
          default: MATCH_STRATEGY_UNSPECIFIED
        - name: userId.value
          description: The value to be matched.
          in: query
          required: false
          type: string
        - name: tenantId.strategy
          description: |-
            Required. The strategy to use when matching the value.

             - MATCH_STRATEGY_UNSPECIFIED: Not specified. This value should be never used.
             - MATCH_EXACT: Match the value exactly.
             - MATCH_EXACT_AND_NULL: Match the value exactly, or where the value is null or empty.
             - MATCH_NULL_ONLY: Match null or empty only.
             - MATCH_ANY: Match any value.
          in: query
          required: false
          type: string
          enum:
            - MATCH_STRATEGY_UNSPECIFIED
            - MATCH_EXACT
            - MATCH_EXACT_AND_NULL
            - MATCH_NULL_ONLY
            - MATCH_ANY
          default: MATCH_STRATEGY_UNSPECIFIED
        - name: tenantId.value
          description: The value to be matched.
          in: query
          required: false
          type: string
        - name: domainId.strategy
          description: |-
            Required. The strategy to use when matching the value.

             - MATCH_STRATEGY_UNSPECIFIED: Not specified. This value should be never used.
             - MATCH_EXACT: Match the value exactly.
             - MATCH_EXACT_AND_NULL: Match the value exactly, or where the value is null or empty.
             - MATCH_NULL_ONLY: Match null or empty only.
             - MATCH_ANY: Match any value.
          in: query
          required: false
          type: string
          enum:
            - MATCH_STRATEGY_UNSPECIFIED
            - MATCH_EXACT
            - MATCH_EXACT_AND_NULL
            - MATCH_NULL_ONLY
            - MATCH_ANY
          default: MATCH_STRATEGY_UNSPECIFIED
        - name: domainId.value
          description: The value to be matched.
          in: query
          required: false
          type: string
        - name: limit
          description: The maximum number of items to return. Zero returns everything.
          in: query
          required: false
          type: integer
          format: int32
        - name: name
          description: Filter results which match name.
          in: query
          required: false
          type: string
        - name: page
          description: The page number to fetch. Used with limit.
          in: query
          required: false
          type: integer
          format: int32
      tags:
        - UI
    post:
      summary: Creates a Filter and returns the new Filter.
      operationId: UIService_NewFilter
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              uid:
                type: string
                description: Output only. The unique ID of the filter.
                readOnly: true
              name:
                type: string
                description: Required. The human readable name of the filter.
                required:
                  - name
              resourceId:
                type: string
              userId:
                type: string
                description: The ID of the user this filter is used for.
              tenantId:
                type: string
                description: The ID of the tenant this filter is used for.
              domainId:
                type: string
                description: Deprecated.
              query:
                type: string
              sorting:
                type: array
                items:
                  type: string
              depth:
                type: integer
                format: int32
                description: The maximum depth used when querying relational structures.
              isSystemGenerated:
                type: boolean
                description: >-
                  The flag defines the creation type, which is permission
                  controlled.
              createdAt:
                type: string
                description: Creation timestamp in RFC3339 text format.
                readOnly: true
              createdBy:
                type: string
                description: The UID of the User who created this configuration.
                readOnly: true
              updatedAt:
                type: string
                description: Updated timestamp in RFC3339 text format.
                readOnly: true
              updatedBy:
                type: string
                description: The UID of the User who last updated this configuration.
                readOnly: true
              deletedAt:
                type: string
                description: Deletion timestamp in RFC3339 text format.
                readOnly: true
              deletedBy:
                type: string
                description: The UID of the User who deleted this configuration.
                readOnly: true
            title: |-
              Filter to represent a registered Filter component configuration
              {
                "uid": "1111",
                "name": "Jobs Filter Config A",
                "resource_id": "0101",
                "user_id": "some-user",
                "tenant_id": "some-tenant",
                "domain_id": "some-domain",
                "query": "status: completed",
                "sorting": ["name", "-resource_id"]
              }
            required:
              - name
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              filter:
                description: Required. The Filter to create.
                type: object
                properties:
                  uid:
                    type: string
                    description: Output only. The unique ID of the filter.
                    readOnly: true
                  name:
                    type: string
                    description: Required. The human readable name of the filter.
                    required:
                      - name
                  resourceId:
                    type: string
                  userId:
                    type: string
                    description: The ID of the user this filter is used for.
                  tenantId:
                    type: string
                    description: The ID of the tenant this filter is used for.
                  domainId:
                    type: string
                    description: Deprecated.
                  query:
                    type: string
                  sorting:
                    type: array
                    items:
                      type: string
                  depth:
                    type: integer
                    format: int32
                    description: >-
                      The maximum depth used when querying relational
                      structures.
                  isSystemGenerated:
                    type: boolean
                    description: >-
                      The flag defines the creation type, which is permission
                      controlled.
                  createdAt:
                    type: string
                    description: Creation timestamp in RFC3339 text format.
                    readOnly: true
                  createdBy:
                    type: string
                    description: The UID of the User who created this configuration.
                    readOnly: true
                  updatedAt:
                    type: string
                    description: Updated timestamp in RFC3339 text format.
                    readOnly: true
                  updatedBy:
                    type: string
                    description: The UID of the User who last updated this configuration.
                    readOnly: true
                  deletedAt:
                    type: string
                    description: Deletion timestamp in RFC3339 text format.
                    readOnly: true
                  deletedBy:
                    type: string
                    description: The UID of the User who deleted this configuration.
                    readOnly: true
                title: >-
                  Filter to represent a registered Filter component
                  configuration

                  {
                    "uid": "1111",
                    "name": "Jobs Filter Config A",
                    "resource_id": "0101",
                    "user_id": "some-user",
                    "tenant_id": "some-tenant",
                    "domain_id": "some-domain",
                    "query": "status: completed",
                    "sorting": ["name", "-resource_id"]
                  }
                required:
                  - name
            description: Request message for UIApi.NewFilter.
      tags:
        - UI
  '/ui/v1/filter/relevant/{resourceId}':
    get:
      operationId: UIService_GetRelevantFilter
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              uid:
                type: string
                description: Output only. The unique ID of the filter.
                readOnly: true
              name:
                type: string
                description: Required. The human readable name of the filter.
                required:
                  - name
              resourceId:
                type: string
              userId:
                type: string
                description: The ID of the user this filter is used for.
              tenantId:
                type: string
                description: The ID of the tenant this filter is used for.
              domainId:
                type: string
                description: Deprecated.
              query:
                type: string
              sorting:
                type: array
                items:
                  type: string
              depth:
                type: integer
                format: int32
                description: The maximum depth used when querying relational structures.
              isSystemGenerated:
                type: boolean
                description: >-
                  The flag defines the creation type, which is permission
                  controlled.
              createdAt:
                type: string
                description: Creation timestamp in RFC3339 text format.
                readOnly: true
              createdBy:
                type: string
                description: The UID of the User who created this configuration.
                readOnly: true
              updatedAt:
                type: string
                description: Updated timestamp in RFC3339 text format.
                readOnly: true
              updatedBy:
                type: string
                description: The UID of the User who last updated this configuration.
                readOnly: true
              deletedAt:
                type: string
                description: Deletion timestamp in RFC3339 text format.
                readOnly: true
              deletedBy:
                type: string
                description: The UID of the User who deleted this configuration.
                readOnly: true
            title: |-
              Filter to represent a registered Filter component configuration
              {
                "uid": "1111",
                "name": "Jobs Filter Config A",
                "resource_id": "0101",
                "user_id": "some-user",
                "tenant_id": "some-tenant",
                "domain_id": "some-domain",
                "query": "status: completed",
                "sorting": ["name", "-resource_id"]
              }
            required:
              - name
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: resourceId
          in: path
          required: true
          type: string
        - name: userId
          in: query
          required: false
          type: string
        - name: tenantId
          in: query
          required: false
          type: string
        - name: domainId
          in: query
          required: false
          type: string
      tags:
        - UI
  '/ui/v1/filter/{filter.uid}':
    put:
      summary: Updates a Filter and returns the updated Filter.
      operationId: UIService_PutFilter
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              uid:
                type: string
                description: Output only. The unique ID of the filter.
                readOnly: true
              name:
                type: string
                description: Required. The human readable name of the filter.
                required:
                  - name
              resourceId:
                type: string
              userId:
                type: string
                description: The ID of the user this filter is used for.
              tenantId:
                type: string
                description: The ID of the tenant this filter is used for.
              domainId:
                type: string
                description: Deprecated.
              query:
                type: string
              sorting:
                type: array
                items:
                  type: string
              depth:
                type: integer
                format: int32
                description: The maximum depth used when querying relational structures.
              isSystemGenerated:
                type: boolean
                description: >-
                  The flag defines the creation type, which is permission
                  controlled.
              createdAt:
                type: string
                description: Creation timestamp in RFC3339 text format.
                readOnly: true
              createdBy:
                type: string
                description: The UID of the User who created this configuration.
                readOnly: true
              updatedAt:
                type: string
                description: Updated timestamp in RFC3339 text format.
                readOnly: true
              updatedBy:
                type: string
                description: The UID of the User who last updated this configuration.
                readOnly: true
              deletedAt:
                type: string
                description: Deletion timestamp in RFC3339 text format.
                readOnly: true
              deletedBy:
                type: string
                description: The UID of the User who deleted this configuration.
                readOnly: true
            title: |-
              Filter to represent a registered Filter component configuration
              {
                "uid": "1111",
                "name": "Jobs Filter Config A",
                "resource_id": "0101",
                "user_id": "some-user",
                "tenant_id": "some-tenant",
                "domain_id": "some-domain",
                "query": "status: completed",
                "sorting": ["name", "-resource_id"]
              }
            required:
              - name
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: filter.uid
          description: Output only. The unique ID of the filter.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              filter:
                type: object
                properties:
                  name:
                    type: string
                    description: Required. The human readable name of the filter.
                    required:
                      - name
                  resourceId:
                    type: string
                  userId:
                    type: string
                    description: The ID of the user this filter is used for.
                  tenantId:
                    type: string
                    description: The ID of the tenant this filter is used for.
                  domainId:
                    type: string
                    description: Deprecated.
                  query:
                    type: string
                  sorting:
                    type: array
                    items:
                      type: string
                  depth:
                    type: integer
                    format: int32
                    description: >-
                      The maximum depth used when querying relational
                      structures.
                  isSystemGenerated:
                    type: boolean
                    description: >-
                      The flag defines the creation type, which is permission
                      controlled.
                  createdAt:
                    type: string
                    description: Creation timestamp in RFC3339 text format.
                    readOnly: true
                  createdBy:
                    type: string
                    description: The UID of the User who created this configuration.
                    readOnly: true
                  updatedAt:
                    type: string
                    description: Updated timestamp in RFC3339 text format.
                    readOnly: true
                  updatedBy:
                    type: string
                    description: The UID of the User who last updated this configuration.
                    readOnly: true
                  deletedAt:
                    type: string
                    description: Deletion timestamp in RFC3339 text format.
                    readOnly: true
                  deletedBy:
                    type: string
                    description: The UID of the User who deleted this configuration.
                    readOnly: true
                description: The Filter to update.
                title: The Filter to update.
                required:
                  - name
            description: Request message for UIApi.PutFilter.
            required:
              - name
      tags:
        - UI
  '/ui/v1/filter/{uid}':
    get:
      summary: Gets a Filter by UID.
      operationId: UIService_GetFilter
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              uid:
                type: string
                description: Output only. The unique ID of the filter.
                readOnly: true
              name:
                type: string
                description: Required. The human readable name of the filter.
                required:
                  - name
              resourceId:
                type: string
              userId:
                type: string
                description: The ID of the user this filter is used for.
              tenantId:
                type: string
                description: The ID of the tenant this filter is used for.
              domainId:
                type: string
                description: Deprecated.
              query:
                type: string
              sorting:
                type: array
                items:
                  type: string
              depth:
                type: integer
                format: int32
                description: The maximum depth used when querying relational structures.
              isSystemGenerated:
                type: boolean
                description: >-
                  The flag defines the creation type, which is permission
                  controlled.
              createdAt:
                type: string
                description: Creation timestamp in RFC3339 text format.
                readOnly: true
              createdBy:
                type: string
                description: The UID of the User who created this configuration.
                readOnly: true
              updatedAt:
                type: string
                description: Updated timestamp in RFC3339 text format.
                readOnly: true
              updatedBy:
                type: string
                description: The UID of the User who last updated this configuration.
                readOnly: true
              deletedAt:
                type: string
                description: Deletion timestamp in RFC3339 text format.
                readOnly: true
              deletedBy:
                type: string
                description: The UID of the User who deleted this configuration.
                readOnly: true
            title: |-
              Filter to represent a registered Filter component configuration
              {
                "uid": "1111",
                "name": "Jobs Filter Config A",
                "resource_id": "0101",
                "user_id": "some-user",
                "tenant_id": "some-tenant",
                "domain_id": "some-domain",
                "query": "status: completed",
                "sorting": ["name", "-resource_id"]
              }
            required:
              - name
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: uid
          description: The UID of the Filter.
          in: path
          required: true
          type: string
      tags:
        - UI
    delete:
      summary: Deletes a Filter by UID and returns the deleted Filter.
      operationId: UIService_DelFilter
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              uid:
                type: string
                description: Output only. The unique ID of the filter.
                readOnly: true
              name:
                type: string
                description: Required. The human readable name of the filter.
                required:
                  - name
              resourceId:
                type: string
              userId:
                type: string
                description: The ID of the user this filter is used for.
              tenantId:
                type: string
                description: The ID of the tenant this filter is used for.
              domainId:
                type: string
                description: Deprecated.
              query:
                type: string
              sorting:
                type: array
                items:
                  type: string
              depth:
                type: integer
                format: int32
                description: The maximum depth used when querying relational structures.
              isSystemGenerated:
                type: boolean
                description: >-
                  The flag defines the creation type, which is permission
                  controlled.
              createdAt:
                type: string
                description: Creation timestamp in RFC3339 text format.
                readOnly: true
              createdBy:
                type: string
                description: The UID of the User who created this configuration.
                readOnly: true
              updatedAt:
                type: string
                description: Updated timestamp in RFC3339 text format.
                readOnly: true
              updatedBy:
                type: string
                description: The UID of the User who last updated this configuration.
                readOnly: true
              deletedAt:
                type: string
                description: Deletion timestamp in RFC3339 text format.
                readOnly: true
              deletedBy:
                type: string
                description: The UID of the User who deleted this configuration.
                readOnly: true
            title: |-
              Filter to represent a registered Filter component configuration
              {
                "uid": "1111",
                "name": "Jobs Filter Config A",
                "resource_id": "0101",
                "user_id": "some-user",
                "tenant_id": "some-tenant",
                "domain_id": "some-domain",
                "query": "status: completed",
                "sorting": ["name", "-resource_id"]
              }
            required:
              - name
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: uid
          description: The UID of the Filter.
          in: path
          required: true
          type: string
      tags:
        - UI
  /ui/v1/list:
    get:
      summary: Lists the set of Lists matching the request.
      operationId: UIService_GetLists
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              lists:
                type: array
                items:
                  type: object
                  properties:
                    uid:
                      type: string
                      description: Output only. The unique ID of the list.
                      readOnly: true
                    name:
                      type: string
                      description: Required. The human readable name of the list.
                      required:
                        - name
                    resourceId:
                      type: string
                      description: The ID of the resource this list is associated with.
                    userId:
                      type: string
                      description: The ID of the user this list belongs to.
                    tenantId:
                      type: string
                      description: The ID of the tenant this list belongs to.
                    domainId:
                      type: string
                      description: Deprecated. The ID of the domain this list belongs to.
                    columns:
                      type: object
                      additionalProperties:
                        type: object
                        properties:
                          title:
                            type: string
                            description: Required. The column header shown to the user.
                            required:
                              - title
                          template:
                            type: string
                            description: Required. The template for the column entries.
                            required:
                              - template
                        title: >-
                          Column to represent an embedded column component
                          configuration

                          {
                            "title": "Job name",
                            "template": "{{ .Name }} {{ .Description }}"
                          }
                        required:
                          - title
                          - template
                      description: The columns in the list.
                    ordering:
                      type: array
                      items:
                        type: string
                      description: >-
                        The order in which to display the columns in this list.
                        The entries in this list must match the keys in
                        `columns`.
                    depth:
                      type: integer
                      format: int32
                      description: >-
                        The maximum depth used when querying relational
                        structures.
                    isSystemGenerated:
                      type: boolean
                      description: >-
                        The flag defines the creation type, which is permission
                        controlled.
                    relationshipResolution:
                      description: >-
                        Indicates the relationships or partial relationships
                        that should be resolved.
                      type: object
                      properties:
                        allow:
                          type: array
                          items:
                            type: string
                          title: Allowed paths we want to resolve from relationships
                    createdAt:
                      type: string
                      description: Creation timestamp in RFC3339 text format.
                      readOnly: true
                    createdBy:
                      type: string
                      description: The UID of the User who created this configuration.
                      readOnly: true
                    updatedAt:
                      type: string
                      description: Updated timestamp in RFC3339 text format.
                      readOnly: true
                    updatedBy:
                      type: string
                      description: The UID of the User who last updated this configuration.
                      readOnly: true
                    deletedAt:
                      type: string
                      description: Deletion timestamp in RFC3339 text format.
                      readOnly: true
                    deletedBy:
                      type: string
                      description: The UID of the User who deleted this configuration.
                      readOnly: true
                  title: |-
                    List to represent a registered List component configuration
                    {
                      "uid": "1111",
                      "name": "Jobs List Config A",
                      "resource_id": "0101",
                      "user_id": "some-user",
                      "tenant_id": "some-tenant",
                      "domain_id": "some-domain",
                      "columns": {
                        "0": {
                          "title": "Job name",
                          "template": "{{ .name }} {{ .description }}"
                        },
                        "1": {
                          "title": "Manage",
                          "template": "<a href=\"skedulo.com/manage/job/{{ .id }}\">Manage</a>"
                        }
                      },
                      "ordering": ["0", "1"]
                    }
                  required:
                    - name
                description: >-
                  The Lists that matched the request.  This may be less than
                  total_count if limit was set.
              totalCount:
                type: integer
                format: int32
                description: The total number of Lists that matched the request.
            description: Response message for UIApi.GetLists.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: resourceId.strategy
          description: |-
            Required. The strategy to use when matching the value.

             - MATCH_STRATEGY_UNSPECIFIED: Not specified. This value should be never used.
             - MATCH_EXACT: Match the value exactly.
             - MATCH_EXACT_AND_NULL: Match the value exactly, or where the value is null or empty.
             - MATCH_NULL_ONLY: Match null or empty only.
             - MATCH_ANY: Match any value.
          in: query
          required: false
          type: string
          enum:
            - MATCH_STRATEGY_UNSPECIFIED
            - MATCH_EXACT
            - MATCH_EXACT_AND_NULL
            - MATCH_NULL_ONLY
            - MATCH_ANY
          default: MATCH_STRATEGY_UNSPECIFIED
        - name: resourceId.value
          description: The value to be matched.
          in: query
          required: false
          type: string
        - name: userId.strategy
          description: |-
            Required. The strategy to use when matching the value.

             - MATCH_STRATEGY_UNSPECIFIED: Not specified. This value should be never used.
             - MATCH_EXACT: Match the value exactly.
             - MATCH_EXACT_AND_NULL: Match the value exactly, or where the value is null or empty.
             - MATCH_NULL_ONLY: Match null or empty only.
             - MATCH_ANY: Match any value.
          in: query
          required: false
          type: string
          enum:
            - MATCH_STRATEGY_UNSPECIFIED
            - MATCH_EXACT
            - MATCH_EXACT_AND_NULL
            - MATCH_NULL_ONLY
            - MATCH_ANY
          default: MATCH_STRATEGY_UNSPECIFIED
        - name: userId.value
          description: The value to be matched.
          in: query
          required: false
          type: string
        - name: tenantId.strategy
          description: |-
            Required. The strategy to use when matching the value.

             - MATCH_STRATEGY_UNSPECIFIED: Not specified. This value should be never used.
             - MATCH_EXACT: Match the value exactly.
             - MATCH_EXACT_AND_NULL: Match the value exactly, or where the value is null or empty.
             - MATCH_NULL_ONLY: Match null or empty only.
             - MATCH_ANY: Match any value.
          in: query
          required: false
          type: string
          enum:
            - MATCH_STRATEGY_UNSPECIFIED
            - MATCH_EXACT
            - MATCH_EXACT_AND_NULL
            - MATCH_NULL_ONLY
            - MATCH_ANY
          default: MATCH_STRATEGY_UNSPECIFIED
        - name: tenantId.value
          description: The value to be matched.
          in: query
          required: false
          type: string
        - name: domainId.strategy
          description: |-
            Required. The strategy to use when matching the value.

             - MATCH_STRATEGY_UNSPECIFIED: Not specified. This value should be never used.
             - MATCH_EXACT: Match the value exactly.
             - MATCH_EXACT_AND_NULL: Match the value exactly, or where the value is null or empty.
             - MATCH_NULL_ONLY: Match null or empty only.
             - MATCH_ANY: Match any value.
          in: query
          required: false
          type: string
          enum:
            - MATCH_STRATEGY_UNSPECIFIED
            - MATCH_EXACT
            - MATCH_EXACT_AND_NULL
            - MATCH_NULL_ONLY
            - MATCH_ANY
          default: MATCH_STRATEGY_UNSPECIFIED
        - name: domainId.value
          description: The value to be matched.
          in: query
          required: false
          type: string
        - name: limit
          description: The maximum number of items to return. Zero returns everything.
          in: query
          required: false
          type: integer
          format: int32
        - name: name
          description: Filter results which match name.
          in: query
          required: false
          type: string
        - name: page
          description: The page number to fetch. Used with limit.
          in: query
          required: false
          type: integer
          format: int32
      tags:
        - UI
    post:
      summary: Creates a List and returns the new List.
      operationId: UIService_NewList
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              uid:
                type: string
                description: Output only. The unique ID of the list.
                readOnly: true
              name:
                type: string
                description: Required. The human readable name of the list.
                required:
                  - name
              resourceId:
                type: string
                description: The ID of the resource this list is associated with.
              userId:
                type: string
                description: The ID of the user this list belongs to.
              tenantId:
                type: string
                description: The ID of the tenant this list belongs to.
              domainId:
                type: string
                description: Deprecated. The ID of the domain this list belongs to.
              columns:
                type: object
                additionalProperties:
                  type: object
                  properties:
                    title:
                      type: string
                      description: Required. The column header shown to the user.
                      required:
                        - title
                    template:
                      type: string
                      description: Required. The template for the column entries.
                      required:
                        - template
                  title: >-
                    Column to represent an embedded column component
                    configuration

                    {
                      "title": "Job name",
                      "template": "{{ .Name }} {{ .Description }}"
                    }
                  required:
                    - title
                    - template
                description: The columns in the list.
              ordering:
                type: array
                items:
                  type: string
                description: >-
                  The order in which to display the columns in this list. The
                  entries in this list must match the keys in `columns`.
              depth:
                type: integer
                format: int32
                description: The maximum depth used when querying relational structures.
              isSystemGenerated:
                type: boolean
                description: >-
                  The flag defines the creation type, which is permission
                  controlled.
              relationshipResolution:
                description: >-
                  Indicates the relationships or partial relationships that
                  should be resolved.
                type: object
                properties:
                  allow:
                    type: array
                    items:
                      type: string
                    title: Allowed paths we want to resolve from relationships
              createdAt:
                type: string
                description: Creation timestamp in RFC3339 text format.
                readOnly: true
              createdBy:
                type: string
                description: The UID of the User who created this configuration.
                readOnly: true
              updatedAt:
                type: string
                description: Updated timestamp in RFC3339 text format.
                readOnly: true
              updatedBy:
                type: string
                description: The UID of the User who last updated this configuration.
                readOnly: true
              deletedAt:
                type: string
                description: Deletion timestamp in RFC3339 text format.
                readOnly: true
              deletedBy:
                type: string
                description: The UID of the User who deleted this configuration.
                readOnly: true
            title: |-
              List to represent a registered List component configuration
              {
                "uid": "1111",
                "name": "Jobs List Config A",
                "resource_id": "0101",
                "user_id": "some-user",
                "tenant_id": "some-tenant",
                "domain_id": "some-domain",
                "columns": {
                  "0": {
                    "title": "Job name",
                    "template": "{{ .name }} {{ .description }}"
                  },
                  "1": {
                    "title": "Manage",
                    "template": "<a href=\"skedulo.com/manage/job/{{ .id }}\">Manage</a>"
                  }
                },
                "ordering": ["0", "1"]
              }
            required:
              - name
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              list:
                description: Required. The list to create.
                type: object
                properties:
                  uid:
                    type: string
                    description: Output only. The unique ID of the list.
                    readOnly: true
                  name:
                    type: string
                    description: Required. The human readable name of the list.
                    required:
                      - name
                  resourceId:
                    type: string
                    description: The ID of the resource this list is associated with.
                  userId:
                    type: string
                    description: The ID of the user this list belongs to.
                  tenantId:
                    type: string
                    description: The ID of the tenant this list belongs to.
                  domainId:
                    type: string
                    description: Deprecated. The ID of the domain this list belongs to.
                  columns:
                    type: object
                    additionalProperties:
                      type: object
                      properties:
                        title:
                          type: string
                          description: Required. The column header shown to the user.
                          required:
                            - title
                        template:
                          type: string
                          description: Required. The template for the column entries.
                          required:
                            - template
                      title: >-
                        Column to represent an embedded column component
                        configuration

                        {
                          "title": "Job name",
                          "template": "{{ .Name }} {{ .Description }}"
                        }
                      required:
                        - title
                        - template
                    description: The columns in the list.
                  ordering:
                    type: array
                    items:
                      type: string
                    description: >-
                      The order in which to display the columns in this list.
                      The entries in this list must match the keys in `columns`.
                  depth:
                    type: integer
                    format: int32
                    description: >-
                      The maximum depth used when querying relational
                      structures.
                  isSystemGenerated:
                    type: boolean
                    description: >-
                      The flag defines the creation type, which is permission
                      controlled.
                  relationshipResolution:
                    description: >-
                      Indicates the relationships or partial relationships that
                      should be resolved.
                    type: object
                    properties:
                      allow:
                        type: array
                        items:
                          type: string
                        title: Allowed paths we want to resolve from relationships
                  createdAt:
                    type: string
                    description: Creation timestamp in RFC3339 text format.
                    readOnly: true
                  createdBy:
                    type: string
                    description: The UID of the User who created this configuration.
                    readOnly: true
                  updatedAt:
                    type: string
                    description: Updated timestamp in RFC3339 text format.
                    readOnly: true
                  updatedBy:
                    type: string
                    description: The UID of the User who last updated this configuration.
                    readOnly: true
                  deletedAt:
                    type: string
                    description: Deletion timestamp in RFC3339 text format.
                    readOnly: true
                  deletedBy:
                    type: string
                    description: The UID of the User who deleted this configuration.
                    readOnly: true
                title: |-
                  List to represent a registered List component configuration
                  {
                    "uid": "1111",
                    "name": "Jobs List Config A",
                    "resource_id": "0101",
                    "user_id": "some-user",
                    "tenant_id": "some-tenant",
                    "domain_id": "some-domain",
                    "columns": {
                      "0": {
                        "title": "Job name",
                        "template": "{{ .name }} {{ .description }}"
                      },
                      "1": {
                        "title": "Manage",
                        "template": "<a href=\"skedulo.com/manage/job/{{ .id }}\">Manage</a>"
                      }
                    },
                    "ordering": ["0", "1"]
                  }
                required:
                  - name
            description: Request message for UIApi.NewList.
      tags:
        - UI
  '/ui/v1/list/relevant/{resourceId}':
    get:
      summary: GetRelevantList returns the most relevant List
      operationId: UIService_GetRelevantList
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              uid:
                type: string
                description: Output only. The unique ID of the list.
                readOnly: true
              name:
                type: string
                description: Required. The human readable name of the list.
                required:
                  - name
              resourceId:
                type: string
                description: The ID of the resource this list is associated with.
              userId:
                type: string
                description: The ID of the user this list belongs to.
              tenantId:
                type: string
                description: The ID of the tenant this list belongs to.
              domainId:
                type: string
                description: Deprecated. The ID of the domain this list belongs to.
              columns:
                type: object
                additionalProperties:
                  type: object
                  properties:
                    title:
                      type: string
                      description: Required. The column header shown to the user.
                      required:
                        - title
                    template:
                      type: string
                      description: Required. The template for the column entries.
                      required:
                        - template
                  title: >-
                    Column to represent an embedded column component
                    configuration

                    {
                      "title": "Job name",
                      "template": "{{ .Name }} {{ .Description }}"
                    }
                  required:
                    - title
                    - template
                description: The columns in the list.
              ordering:
                type: array
                items:
                  type: string
                description: >-
                  The order in which to display the columns in this list. The
                  entries in this list must match the keys in `columns`.
              depth:
                type: integer
                format: int32
                description: The maximum depth used when querying relational structures.
              isSystemGenerated:
                type: boolean
                description: >-
                  The flag defines the creation type, which is permission
                  controlled.
              relationshipResolution:
                description: >-
                  Indicates the relationships or partial relationships that
                  should be resolved.
                type: object
                properties:
                  allow:
                    type: array
                    items:
                      type: string
                    title: Allowed paths we want to resolve from relationships
              createdAt:
                type: string
                description: Creation timestamp in RFC3339 text format.
                readOnly: true
              createdBy:
                type: string
                description: The UID of the User who created this configuration.
                readOnly: true
              updatedAt:
                type: string
                description: Updated timestamp in RFC3339 text format.
                readOnly: true
              updatedBy:
                type: string
                description: The UID of the User who last updated this configuration.
                readOnly: true
              deletedAt:
                type: string
                description: Deletion timestamp in RFC3339 text format.
                readOnly: true
              deletedBy:
                type: string
                description: The UID of the User who deleted this configuration.
                readOnly: true
            title: |-
              List to represent a registered List component configuration
              {
                "uid": "1111",
                "name": "Jobs List Config A",
                "resource_id": "0101",
                "user_id": "some-user",
                "tenant_id": "some-tenant",
                "domain_id": "some-domain",
                "columns": {
                  "0": {
                    "title": "Job name",
                    "template": "{{ .name }} {{ .description }}"
                  },
                  "1": {
                    "title": "Manage",
                    "template": "<a href=\"skedulo.com/manage/job/{{ .id }}\">Manage</a>"
                  }
                },
                "ordering": ["0", "1"]
              }
            required:
              - name
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: resourceId
          in: path
          required: true
          type: string
        - name: userId
          in: query
          required: false
          type: string
        - name: tenantId
          in: query
          required: false
          type: string
        - name: domainId
          in: query
          required: false
          type: string
      tags:
        - UI
  '/ui/v1/list/{list.uid}':
    put:
      summary: Updates a List and returns the updated List.
      operationId: UIService_PutList
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              uid:
                type: string
                description: Output only. The unique ID of the list.
                readOnly: true
              name:
                type: string
                description: Required. The human readable name of the list.
                required:
                  - name
              resourceId:
                type: string
                description: The ID of the resource this list is associated with.
              userId:
                type: string
                description: The ID of the user this list belongs to.
              tenantId:
                type: string
                description: The ID of the tenant this list belongs to.
              domainId:
                type: string
                description: Deprecated. The ID of the domain this list belongs to.
              columns:
                type: object
                additionalProperties:
                  type: object
                  properties:
                    title:
                      type: string
                      description: Required. The column header shown to the user.
                      required:
                        - title
                    template:
                      type: string
                      description: Required. The template for the column entries.
                      required:
                        - template
                  title: >-
                    Column to represent an embedded column component
                    configuration

                    {
                      "title": "Job name",
                      "template": "{{ .Name }} {{ .Description }}"
                    }
                  required:
                    - title
                    - template
                description: The columns in the list.
              ordering:
                type: array
                items:
                  type: string
                description: >-
                  The order in which to display the columns in this list. The
                  entries in this list must match the keys in `columns`.
              depth:
                type: integer
                format: int32
                description: The maximum depth used when querying relational structures.
              isSystemGenerated:
                type: boolean
                description: >-
                  The flag defines the creation type, which is permission
                  controlled.
              relationshipResolution:
                description: >-
                  Indicates the relationships or partial relationships that
                  should be resolved.
                type: object
                properties:
                  allow:
                    type: array
                    items:
                      type: string
                    title: Allowed paths we want to resolve from relationships
              createdAt:
                type: string
                description: Creation timestamp in RFC3339 text format.
                readOnly: true
              createdBy:
                type: string
                description: The UID of the User who created this configuration.
                readOnly: true
              updatedAt:
                type: string
                description: Updated timestamp in RFC3339 text format.
                readOnly: true
              updatedBy:
                type: string
                description: The UID of the User who last updated this configuration.
                readOnly: true
              deletedAt:
                type: string
                description: Deletion timestamp in RFC3339 text format.
                readOnly: true
              deletedBy:
                type: string
                description: The UID of the User who deleted this configuration.
                readOnly: true
            title: |-
              List to represent a registered List component configuration
              {
                "uid": "1111",
                "name": "Jobs List Config A",
                "resource_id": "0101",
                "user_id": "some-user",
                "tenant_id": "some-tenant",
                "domain_id": "some-domain",
                "columns": {
                  "0": {
                    "title": "Job name",
                    "template": "{{ .name }} {{ .description }}"
                  },
                  "1": {
                    "title": "Manage",
                    "template": "<a href=\"skedulo.com/manage/job/{{ .id }}\">Manage</a>"
                  }
                },
                "ordering": ["0", "1"]
              }
            required:
              - name
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: list.uid
          description: Output only. The unique ID of the list.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              list:
                type: object
                properties:
                  name:
                    type: string
                    description: Required. The human readable name of the list.
                    required:
                      - name
                  resourceId:
                    type: string
                    description: The ID of the resource this list is associated with.
                  userId:
                    type: string
                    description: The ID of the user this list belongs to.
                  tenantId:
                    type: string
                    description: The ID of the tenant this list belongs to.
                  domainId:
                    type: string
                    description: Deprecated. The ID of the domain this list belongs to.
                  columns:
                    type: object
                    additionalProperties:
                      type: object
                      properties:
                        title:
                          type: string
                          description: Required. The column header shown to the user.
                          required:
                            - title
                        template:
                          type: string
                          description: Required. The template for the column entries.
                          required:
                            - template
                      title: >-
                        Column to represent an embedded column component
                        configuration

                        {
                          "title": "Job name",
                          "template": "{{ .Name }} {{ .Description }}"
                        }
                      required:
                        - title
                        - template
                    description: The columns in the list.
                  ordering:
                    type: array
                    items:
                      type: string
                    description: >-
                      The order in which to display the columns in this list.
                      The entries in this list must match the keys in `columns`.
                  depth:
                    type: integer
                    format: int32
                    description: >-
                      The maximum depth used when querying relational
                      structures.
                  isSystemGenerated:
                    type: boolean
                    description: >-
                      The flag defines the creation type, which is permission
                      controlled.
                  relationshipResolution:
                    description: >-
                      Indicates the relationships or partial relationships that
                      should be resolved.
                    type: object
                    properties:
                      allow:
                        type: array
                        items:
                          type: string
                        title: Allowed paths we want to resolve from relationships
                  createdAt:
                    type: string
                    description: Creation timestamp in RFC3339 text format.
                    readOnly: true
                  createdBy:
                    type: string
                    description: The UID of the User who created this configuration.
                    readOnly: true
                  updatedAt:
                    type: string
                    description: Updated timestamp in RFC3339 text format.
                    readOnly: true
                  updatedBy:
                    type: string
                    description: The UID of the User who last updated this configuration.
                    readOnly: true
                  deletedAt:
                    type: string
                    description: Deletion timestamp in RFC3339 text format.
                    readOnly: true
                  deletedBy:
                    type: string
                    description: The UID of the User who deleted this configuration.
                    readOnly: true
                description: Required. The list to update.
                title: Required. The list to update.
                required:
                  - name
            description: Request message for UIApi.PutList.
            required:
              - name
      tags:
        - UI
  '/ui/v1/list/{uid}':
    get:
      summary: Gets a List by UID.
      operationId: UIService_GetList
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              uid:
                type: string
                description: Output only. The unique ID of the list.
                readOnly: true
              name:
                type: string
                description: Required. The human readable name of the list.
                required:
                  - name
              resourceId:
                type: string
                description: The ID of the resource this list is associated with.
              userId:
                type: string
                description: The ID of the user this list belongs to.
              tenantId:
                type: string
                description: The ID of the tenant this list belongs to.
              domainId:
                type: string
                description: Deprecated. The ID of the domain this list belongs to.
              columns:
                type: object
                additionalProperties:
                  type: object
                  properties:
                    title:
                      type: string
                      description: Required. The column header shown to the user.
                      required:
                        - title
                    template:
                      type: string
                      description: Required. The template for the column entries.
                      required:
                        - template
                  title: >-
                    Column to represent an embedded column component
                    configuration

                    {
                      "title": "Job name",
                      "template": "{{ .Name }} {{ .Description }}"
                    }
                  required:
                    - title
                    - template
                description: The columns in the list.
              ordering:
                type: array
                items:
                  type: string
                description: >-
                  The order in which to display the columns in this list. The
                  entries in this list must match the keys in `columns`.
              depth:
                type: integer
                format: int32
                description: The maximum depth used when querying relational structures.
              isSystemGenerated:
                type: boolean
                description: >-
                  The flag defines the creation type, which is permission
                  controlled.
              relationshipResolution:
                description: >-
                  Indicates the relationships or partial relationships that
                  should be resolved.
                type: object
                properties:
                  allow:
                    type: array
                    items:
                      type: string
                    title: Allowed paths we want to resolve from relationships
              createdAt:
                type: string
                description: Creation timestamp in RFC3339 text format.
                readOnly: true
              createdBy:
                type: string
                description: The UID of the User who created this configuration.
                readOnly: true
              updatedAt:
                type: string
                description: Updated timestamp in RFC3339 text format.
                readOnly: true
              updatedBy:
                type: string
                description: The UID of the User who last updated this configuration.
                readOnly: true
              deletedAt:
                type: string
                description: Deletion timestamp in RFC3339 text format.
                readOnly: true
              deletedBy:
                type: string
                description: The UID of the User who deleted this configuration.
                readOnly: true
            title: |-
              List to represent a registered List component configuration
              {
                "uid": "1111",
                "name": "Jobs List Config A",
                "resource_id": "0101",
                "user_id": "some-user",
                "tenant_id": "some-tenant",
                "domain_id": "some-domain",
                "columns": {
                  "0": {
                    "title": "Job name",
                    "template": "{{ .name }} {{ .description }}"
                  },
                  "1": {
                    "title": "Manage",
                    "template": "<a href=\"skedulo.com/manage/job/{{ .id }}\">Manage</a>"
                  }
                },
                "ordering": ["0", "1"]
              }
            required:
              - name
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: uid
          description: Required. The UID of the List.
          in: path
          required: true
          type: string
      tags:
        - UI
    delete:
      summary: Deletes a List by UID and returns the deleted List.
      operationId: UIService_DelList
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              uid:
                type: string
                description: Output only. The unique ID of the list.
                readOnly: true
              name:
                type: string
                description: Required. The human readable name of the list.
                required:
                  - name
              resourceId:
                type: string
                description: The ID of the resource this list is associated with.
              userId:
                type: string
                description: The ID of the user this list belongs to.
              tenantId:
                type: string
                description: The ID of the tenant this list belongs to.
              domainId:
                type: string
                description: Deprecated. The ID of the domain this list belongs to.
              columns:
                type: object
                additionalProperties:
                  type: object
                  properties:
                    title:
                      type: string
                      description: Required. The column header shown to the user.
                      required:
                        - title
                    template:
                      type: string
                      description: Required. The template for the column entries.
                      required:
                        - template
                  title: >-
                    Column to represent an embedded column component
                    configuration

                    {
                      "title": "Job name",
                      "template": "{{ .Name }} {{ .Description }}"
                    }
                  required:
                    - title
                    - template
                description: The columns in the list.
              ordering:
                type: array
                items:
                  type: string
                description: >-
                  The order in which to display the columns in this list. The
                  entries in this list must match the keys in `columns`.
              depth:
                type: integer
                format: int32
                description: The maximum depth used when querying relational structures.
              isSystemGenerated:
                type: boolean
                description: >-
                  The flag defines the creation type, which is permission
                  controlled.
              relationshipResolution:
                description: >-
                  Indicates the relationships or partial relationships that
                  should be resolved.
                type: object
                properties:
                  allow:
                    type: array
                    items:
                      type: string
                    title: Allowed paths we want to resolve from relationships
              createdAt:
                type: string
                description: Creation timestamp in RFC3339 text format.
                readOnly: true
              createdBy:
                type: string
                description: The UID of the User who created this configuration.
                readOnly: true
              updatedAt:
                type: string
                description: Updated timestamp in RFC3339 text format.
                readOnly: true
              updatedBy:
                type: string
                description: The UID of the User who last updated this configuration.
                readOnly: true
              deletedAt:
                type: string
                description: Deletion timestamp in RFC3339 text format.
                readOnly: true
              deletedBy:
                type: string
                description: The UID of the User who deleted this configuration.
                readOnly: true
            title: |-
              List to represent a registered List component configuration
              {
                "uid": "1111",
                "name": "Jobs List Config A",
                "resource_id": "0101",
                "user_id": "some-user",
                "tenant_id": "some-tenant",
                "domain_id": "some-domain",
                "columns": {
                  "0": {
                    "title": "Job name",
                    "template": "{{ .name }} {{ .description }}"
                  },
                  "1": {
                    "title": "Manage",
                    "template": "<a href=\"skedulo.com/manage/job/{{ .id }}\">Manage</a>"
                  }
                },
                "ordering": ["0", "1"]
              }
            required:
              - name
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: uid
          description: Required. The UID of the List.
          in: path
          required: true
          type: string
      tags:
        - UI
  /ui/v1/nav:
    get:
      summary: >-
        Lists the set of Navs matching the request.

        If feature permissions are in use, the resources may be restricted by
        the user's roles.
      operationId: UIService_GetNavs
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              navs:
                type: array
                items:
                  type: object
                  properties:
                    uid:
                      type: string
                      description: Output only. The unique ID of the nav.
                      readOnly: true
                    name:
                      type: string
                      description: Required. The human readable name of the nav.
                      required:
                        - name
                    userId:
                      type: string
                      description: The ID of the user this nav is used for.
                    tenantId:
                      type: string
                      description: The ID of the tenant this nav is used for.
                    domainId:
                      type: string
                      description: Deprecated.
                    nodes:
                      type: array
                      items:
                        type: object
                        properties:
                          destination:
                            description: The destination this NavNode links to.
                            type: string
                            enum:
                              - DESTINATION_UNSPECIFIED
                              - NOOP
                              - PLATFORM
                              - LINK
                              - PAGE
                              - WEBX
                            default: DESTINATION_UNSPECIFIED
                          ref:
                            type: string
                            description: >-
                              The link for this NavNode. The format depends on
                              the value in `destination`.
                          label:
                            type: string
                            description: >-
                              The label to display in the frontend for this
                              NavNode.
                          nodes:
                            type: array
                            items: {}
                            description: A list of child NavNodes.
                          grantToRoleIds:
                            type: array
                            items:
                              type: string
                            description: >-
                              A list of the Role IDs that are able to view this
                              NavNode.
                        description: A individual node within a Nav.
                      description: A list of child NavNodes.
                    isSystemGenerated:
                      type: boolean
                      description: >-
                        The flag defines the creation type, which is permission
                        controlled.
                    createdAt:
                      type: string
                      description: Creation timestamp in RFC3339 text format.
                      readOnly: true
                    createdBy:
                      type: string
                      description: The UID of the User who created this configuration.
                      readOnly: true
                    updatedAt:
                      type: string
                      description: Updated timestamp in RFC3339 text format.
                      readOnly: true
                    updatedBy:
                      type: string
                      description: The UID of the User who last updated this configuration.
                      readOnly: true
                    deletedAt:
                      type: string
                      description: Deletion timestamp in RFC3339 text format.
                      readOnly: true
                    deletedBy:
                      type: string
                      description: The UID of the User who deleted this configuration.
                      readOnly: true
                  title: >-
                    Nav type definition

                    A typical 3 sections nav can be constructed as below,
                    ignoring metadata:

                    +-------+-----------+----------+

                    | List  | Manage    | More     |

                    +-------+-----------+----------+--------+

                    | Jobs  | Accounts  | External | Google |

                    +-------+-----------+----------+--------+

                    | Wines |

                    +-------+

                    In JSON representation:

                    {
                      "nav" : {
                        "name": "Main",
                        "nodes" : [
                          { "ref": "List", "label": "List", "destination": "NOOP",
                            "nodes": [
                              {"ref": "jobs-list", "label": "Jobs", "destination": "PLATFORM"},
                              {"ref": "wines-list", "label": "Wines", "destination": "PLATFORM"}
                            ]
                          },
                          {
                            "ref": "/manage-page-path", "label": "Manage", "destination": "PAGE",
                            "nodes": [
                              {"ref": "accounts-list", "label": "Accounts", "destination": "PLATFORM"}
                            ]
                          },
                          {
                            "ref": "More", "label": "More", "destination": "NOOP",
                            "nodes": [
                              { "ref": "Externals", "label": "Externals", "destination": "NOOP",
                                "nodes": [
                                  {"ref": "https://google.co.uk", "label": "Google", "destination": "LINK",
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    }
                  required:
                    - name
                description: >-
                  The Navs that matched the request. This may be less than
                  total_count if limit was set.
              totalCount:
                type: integer
                format: int32
                description: The total number of Navs that matched the request.
            title: Response message for UIApi.GetNavs
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: userId.strategy
          description: |-
            Required. The strategy to use when matching the value.

             - MATCH_STRATEGY_UNSPECIFIED: Not specified. This value should be never used.
             - MATCH_EXACT: Match the value exactly.
             - MATCH_EXACT_AND_NULL: Match the value exactly, or where the value is null or empty.
             - MATCH_NULL_ONLY: Match null or empty only.
             - MATCH_ANY: Match any value.
          in: query
          required: false
          type: string
          enum:
            - MATCH_STRATEGY_UNSPECIFIED
            - MATCH_EXACT
            - MATCH_EXACT_AND_NULL
            - MATCH_NULL_ONLY
            - MATCH_ANY
          default: MATCH_STRATEGY_UNSPECIFIED
        - name: userId.value
          description: The value to be matched.
          in: query
          required: false
          type: string
        - name: tenantId.strategy
          description: |-
            Required. The strategy to use when matching the value.

             - MATCH_STRATEGY_UNSPECIFIED: Not specified. This value should be never used.
             - MATCH_EXACT: Match the value exactly.
             - MATCH_EXACT_AND_NULL: Match the value exactly, or where the value is null or empty.
             - MATCH_NULL_ONLY: Match null or empty only.
             - MATCH_ANY: Match any value.
          in: query
          required: false
          type: string
          enum:
            - MATCH_STRATEGY_UNSPECIFIED
            - MATCH_EXACT
            - MATCH_EXACT_AND_NULL
            - MATCH_NULL_ONLY
            - MATCH_ANY
          default: MATCH_STRATEGY_UNSPECIFIED
        - name: tenantId.value
          description: The value to be matched.
          in: query
          required: false
          type: string
        - name: domainId.strategy
          description: |-
            Required. The strategy to use when matching the value.

             - MATCH_STRATEGY_UNSPECIFIED: Not specified. This value should be never used.
             - MATCH_EXACT: Match the value exactly.
             - MATCH_EXACT_AND_NULL: Match the value exactly, or where the value is null or empty.
             - MATCH_NULL_ONLY: Match null or empty only.
             - MATCH_ANY: Match any value.
          in: query
          required: false
          type: string
          enum:
            - MATCH_STRATEGY_UNSPECIFIED
            - MATCH_EXACT
            - MATCH_EXACT_AND_NULL
            - MATCH_NULL_ONLY
            - MATCH_ANY
          default: MATCH_STRATEGY_UNSPECIFIED
        - name: domainId.value
          description: The value to be matched.
          in: query
          required: false
          type: string
        - name: name
          description: Filter results which matching name.
          in: query
          required: false
          type: string
        - name: limit
          description: The maximum number of items to return. Zero returns everything.
          in: query
          required: false
          type: integer
          format: int32
        - name: page
          description: The page number to fetch. Used with limit.
          in: query
          required: false
          type: integer
          format: int32
      tags:
        - UI
    post:
      summary: Creates a Nav and returns the new Nav.
      operationId: UIService_NewNav
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              uid:
                type: string
                description: Output only. The unique ID of the nav.
                readOnly: true
              name:
                type: string
                description: Required. The human readable name of the nav.
                required:
                  - name
              userId:
                type: string
                description: The ID of the user this nav is used for.
              tenantId:
                type: string
                description: The ID of the tenant this nav is used for.
              domainId:
                type: string
                description: Deprecated.
              nodes:
                type: array
                items:
                  type: object
                  properties:
                    destination:
                      description: The destination this NavNode links to.
                      type: string
                      enum:
                        - DESTINATION_UNSPECIFIED
                        - NOOP
                        - PLATFORM
                        - LINK
                        - PAGE
                        - WEBX
                      default: DESTINATION_UNSPECIFIED
                    ref:
                      type: string
                      description: >-
                        The link for this NavNode. The format depends on the
                        value in `destination`.
                    label:
                      type: string
                      description: The label to display in the frontend for this NavNode.
                    nodes:
                      type: array
                      items: {}
                      description: A list of child NavNodes.
                    grantToRoleIds:
                      type: array
                      items:
                        type: string
                      description: >-
                        A list of the Role IDs that are able to view this
                        NavNode.
                  description: A individual node within a Nav.
                description: A list of child NavNodes.
              isSystemGenerated:
                type: boolean
                description: >-
                  The flag defines the creation type, which is permission
                  controlled.
              createdAt:
                type: string
                description: Creation timestamp in RFC3339 text format.
                readOnly: true
              createdBy:
                type: string
                description: The UID of the User who created this configuration.
                readOnly: true
              updatedAt:
                type: string
                description: Updated timestamp in RFC3339 text format.
                readOnly: true
              updatedBy:
                type: string
                description: The UID of the User who last updated this configuration.
                readOnly: true
              deletedAt:
                type: string
                description: Deletion timestamp in RFC3339 text format.
                readOnly: true
              deletedBy:
                type: string
                description: The UID of the User who deleted this configuration.
                readOnly: true
            title: >-
              Nav type definition

              A typical 3 sections nav can be constructed as below, ignoring
              metadata:

              +-------+-----------+----------+

              | List  | Manage    | More     |

              +-------+-----------+----------+--------+

              | Jobs  | Accounts  | External | Google |

              +-------+-----------+----------+--------+

              | Wines |

              +-------+

              In JSON representation:

              {
                "nav" : {
                  "name": "Main",
                  "nodes" : [
                    { "ref": "List", "label": "List", "destination": "NOOP",
                      "nodes": [
                        {"ref": "jobs-list", "label": "Jobs", "destination": "PLATFORM"},
                        {"ref": "wines-list", "label": "Wines", "destination": "PLATFORM"}
                      ]
                    },
                    {
                      "ref": "/manage-page-path", "label": "Manage", "destination": "PAGE",
                      "nodes": [
                        {"ref": "accounts-list", "label": "Accounts", "destination": "PLATFORM"}
                      ]
                    },
                    {
                      "ref": "More", "label": "More", "destination": "NOOP",
                      "nodes": [
                        { "ref": "Externals", "label": "Externals", "destination": "NOOP",
                          "nodes": [
                            {"ref": "https://google.co.uk", "label": "Google", "destination": "LINK",
                          ]
                        }
                      ]
                    }
                  ]
                }
              }
            required:
              - name
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              nav:
                description: Required. The Nav to create.
                type: object
                properties:
                  uid:
                    type: string
                    description: Output only. The unique ID of the nav.
                    readOnly: true
                  name:
                    type: string
                    description: Required. The human readable name of the nav.
                    required:
                      - name
                  userId:
                    type: string
                    description: The ID of the user this nav is used for.
                  tenantId:
                    type: string
                    description: The ID of the tenant this nav is used for.
                  domainId:
                    type: string
                    description: Deprecated.
                  nodes:
                    type: array
                    items:
                      type: object
                      properties:
                        destination:
                          description: The destination this NavNode links to.
                          type: string
                          enum:
                            - DESTINATION_UNSPECIFIED
                            - NOOP
                            - PLATFORM
                            - LINK
                            - PAGE
                            - WEBX
                          default: DESTINATION_UNSPECIFIED
                        ref:
                          type: string
                          description: >-
                            The link for this NavNode. The format depends on the
                            value in `destination`.
                        label:
                          type: string
                          description: >-
                            The label to display in the frontend for this
                            NavNode.
                        nodes:
                          type: array
                          items: {}
                          description: A list of child NavNodes.
                        grantToRoleIds:
                          type: array
                          items:
                            type: string
                          description: >-
                            A list of the Role IDs that are able to view this
                            NavNode.
                      description: A individual node within a Nav.
                    description: A list of child NavNodes.
                  isSystemGenerated:
                    type: boolean
                    description: >-
                      The flag defines the creation type, which is permission
                      controlled.
                  createdAt:
                    type: string
                    description: Creation timestamp in RFC3339 text format.
                    readOnly: true
                  createdBy:
                    type: string
                    description: The UID of the User who created this configuration.
                    readOnly: true
                  updatedAt:
                    type: string
                    description: Updated timestamp in RFC3339 text format.
                    readOnly: true
                  updatedBy:
                    type: string
                    description: The UID of the User who last updated this configuration.
                    readOnly: true
                  deletedAt:
                    type: string
                    description: Deletion timestamp in RFC3339 text format.
                    readOnly: true
                  deletedBy:
                    type: string
                    description: The UID of the User who deleted this configuration.
                    readOnly: true
                title: >-
                  Nav type definition

                  A typical 3 sections nav can be constructed as below, ignoring
                  metadata:

                  +-------+-----------+----------+

                  | List  | Manage    | More     |

                  +-------+-----------+----------+--------+

                  | Jobs  | Accounts  | External | Google |

                  +-------+-----------+----------+--------+

                  | Wines |

                  +-------+

                  In JSON representation:

                  {
                    "nav" : {
                      "name": "Main",
                      "nodes" : [
                        { "ref": "List", "label": "List", "destination": "NOOP",
                          "nodes": [
                            {"ref": "jobs-list", "label": "Jobs", "destination": "PLATFORM"},
                            {"ref": "wines-list", "label": "Wines", "destination": "PLATFORM"}
                          ]
                        },
                        {
                          "ref": "/manage-page-path", "label": "Manage", "destination": "PAGE",
                          "nodes": [
                            {"ref": "accounts-list", "label": "Accounts", "destination": "PLATFORM"}
                          ]
                        },
                        {
                          "ref": "More", "label": "More", "destination": "NOOP",
                          "nodes": [
                            { "ref": "Externals", "label": "Externals", "destination": "NOOP",
                              "nodes": [
                                {"ref": "https://google.co.uk", "label": "Google", "destination": "LINK",
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  }
                required:
                  - name
            description: Request message for UIApi.NewNav.
      tags:
        - UI
  /ui/v1/nav-unrestricted:
    get:
      summary: >-
        Lists the set of Navs matching the request.

        If feature permissions are in use, the resources will not be restricted
        by the user's roles.
      operationId: UIService_GetNavsUnrestricted
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              navs:
                type: array
                items:
                  type: object
                  properties:
                    uid:
                      type: string
                      description: Output only. The unique ID of the nav.
                      readOnly: true
                    name:
                      type: string
                      description: Required. The human readable name of the nav.
                      required:
                        - name
                    userId:
                      type: string
                      description: The ID of the user this nav is used for.
                    tenantId:
                      type: string
                      description: The ID of the tenant this nav is used for.
                    domainId:
                      type: string
                      description: Deprecated.
                    nodes:
                      type: array
                      items:
                        type: object
                        properties:
                          destination:
                            description: The destination this NavNode links to.
                            type: string
                            enum:
                              - DESTINATION_UNSPECIFIED
                              - NOOP
                              - PLATFORM
                              - LINK
                              - PAGE
                              - WEBX
                            default: DESTINATION_UNSPECIFIED
                          ref:
                            type: string
                            description: >-
                              The link for this NavNode. The format depends on
                              the value in `destination`.
                          label:
                            type: string
                            description: >-
                              The label to display in the frontend for this
                              NavNode.
                          nodes:
                            type: array
                            items: {}
                            description: A list of child NavNodes.
                          grantToRoleIds:
                            type: array
                            items:
                              type: string
                            description: >-
                              A list of the Role IDs that are able to view this
                              NavNode.
                        description: A individual node within a Nav.
                      description: A list of child NavNodes.
                    isSystemGenerated:
                      type: boolean
                      description: >-
                        The flag defines the creation type, which is permission
                        controlled.
                    createdAt:
                      type: string
                      description: Creation timestamp in RFC3339 text format.
                      readOnly: true
                    createdBy:
                      type: string
                      description: The UID of the User who created this configuration.
                      readOnly: true
                    updatedAt:
                      type: string
                      description: Updated timestamp in RFC3339 text format.
                      readOnly: true
                    updatedBy:
                      type: string
                      description: The UID of the User who last updated this configuration.
                      readOnly: true
                    deletedAt:
                      type: string
                      description: Deletion timestamp in RFC3339 text format.
                      readOnly: true
                    deletedBy:
                      type: string
                      description: The UID of the User who deleted this configuration.
                      readOnly: true
                  title: >-
                    Nav type definition

                    A typical 3 sections nav can be constructed as below,
                    ignoring metadata:

                    +-------+-----------+----------+

                    | List  | Manage    | More     |

                    +-------+-----------+----------+--------+

                    | Jobs  | Accounts  | External | Google |

                    +-------+-----------+----------+--------+

                    | Wines |

                    +-------+

                    In JSON representation:

                    {
                      "nav" : {
                        "name": "Main",
                        "nodes" : [
                          { "ref": "List", "label": "List", "destination": "NOOP",
                            "nodes": [
                              {"ref": "jobs-list", "label": "Jobs", "destination": "PLATFORM"},
                              {"ref": "wines-list", "label": "Wines", "destination": "PLATFORM"}
                            ]
                          },
                          {
                            "ref": "/manage-page-path", "label": "Manage", "destination": "PAGE",
                            "nodes": [
                              {"ref": "accounts-list", "label": "Accounts", "destination": "PLATFORM"}
                            ]
                          },
                          {
                            "ref": "More", "label": "More", "destination": "NOOP",
                            "nodes": [
                              { "ref": "Externals", "label": "Externals", "destination": "NOOP",
                                "nodes": [
                                  {"ref": "https://google.co.uk", "label": "Google", "destination": "LINK",
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    }
                  required:
                    - name
                description: >-
                  The Navs that matched the request. This may be less than
                  total_count if limit was set.
              totalCount:
                type: integer
                format: int32
                description: The total number of Navs that matched the request.
            title: Response message for UIApi.GetNavs
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: userId.strategy
          description: |-
            Required. The strategy to use when matching the value.

             - MATCH_STRATEGY_UNSPECIFIED: Not specified. This value should be never used.
             - MATCH_EXACT: Match the value exactly.
             - MATCH_EXACT_AND_NULL: Match the value exactly, or where the value is null or empty.
             - MATCH_NULL_ONLY: Match null or empty only.
             - MATCH_ANY: Match any value.
          in: query
          required: false
          type: string
          enum:
            - MATCH_STRATEGY_UNSPECIFIED
            - MATCH_EXACT
            - MATCH_EXACT_AND_NULL
            - MATCH_NULL_ONLY
            - MATCH_ANY
          default: MATCH_STRATEGY_UNSPECIFIED
        - name: userId.value
          description: The value to be matched.
          in: query
          required: false
          type: string
        - name: tenantId.strategy
          description: |-
            Required. The strategy to use when matching the value.

             - MATCH_STRATEGY_UNSPECIFIED: Not specified. This value should be never used.
             - MATCH_EXACT: Match the value exactly.
             - MATCH_EXACT_AND_NULL: Match the value exactly, or where the value is null or empty.
             - MATCH_NULL_ONLY: Match null or empty only.
             - MATCH_ANY: Match any value.
          in: query
          required: false
          type: string
          enum:
            - MATCH_STRATEGY_UNSPECIFIED
            - MATCH_EXACT
            - MATCH_EXACT_AND_NULL
            - MATCH_NULL_ONLY
            - MATCH_ANY
          default: MATCH_STRATEGY_UNSPECIFIED
        - name: tenantId.value
          description: The value to be matched.
          in: query
          required: false
          type: string
        - name: domainId.strategy
          description: |-
            Required. The strategy to use when matching the value.

             - MATCH_STRATEGY_UNSPECIFIED: Not specified. This value should be never used.
             - MATCH_EXACT: Match the value exactly.
             - MATCH_EXACT_AND_NULL: Match the value exactly, or where the value is null or empty.
             - MATCH_NULL_ONLY: Match null or empty only.
             - MATCH_ANY: Match any value.
          in: query
          required: false
          type: string
          enum:
            - MATCH_STRATEGY_UNSPECIFIED
            - MATCH_EXACT
            - MATCH_EXACT_AND_NULL
            - MATCH_NULL_ONLY
            - MATCH_ANY
          default: MATCH_STRATEGY_UNSPECIFIED
        - name: domainId.value
          description: The value to be matched.
          in: query
          required: false
          type: string
        - name: name
          description: Filter results which matching name.
          in: query
          required: false
          type: string
        - name: limit
          description: The maximum number of items to return. Zero returns everything.
          in: query
          required: false
          type: integer
          format: int32
        - name: page
          description: The page number to fetch. Used with limit.
          in: query
          required: false
          type: integer
          format: int32
      tags:
        - UI
  '/ui/v1/nav-unrestricted/{uid}':
    get:
      summary: >-
        Gets a Nav by UID.

        If feature permissions are in use, the resources will not be restricted
        by the user's roles.
      operationId: UIService_GetNavUnrestricted
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              uid:
                type: string
                description: Output only. The unique ID of the nav.
                readOnly: true
              name:
                type: string
                description: Required. The human readable name of the nav.
                required:
                  - name
              userId:
                type: string
                description: The ID of the user this nav is used for.
              tenantId:
                type: string
                description: The ID of the tenant this nav is used for.
              domainId:
                type: string
                description: Deprecated.
              nodes:
                type: array
                items:
                  type: object
                  properties:
                    destination:
                      description: The destination this NavNode links to.
                      type: string
                      enum:
                        - DESTINATION_UNSPECIFIED
                        - NOOP
                        - PLATFORM
                        - LINK
                        - PAGE
                        - WEBX
                      default: DESTINATION_UNSPECIFIED
                    ref:
                      type: string
                      description: >-
                        The link for this NavNode. The format depends on the
                        value in `destination`.
                    label:
                      type: string
                      description: The label to display in the frontend for this NavNode.
                    nodes:
                      type: array
                      items: {}
                      description: A list of child NavNodes.
                    grantToRoleIds:
                      type: array
                      items:
                        type: string
                      description: >-
                        A list of the Role IDs that are able to view this
                        NavNode.
                  description: A individual node within a Nav.
                description: A list of child NavNodes.
              isSystemGenerated:
                type: boolean
                description: >-
                  The flag defines the creation type, which is permission
                  controlled.
              createdAt:
                type: string
                description: Creation timestamp in RFC3339 text format.
                readOnly: true
              createdBy:
                type: string
                description: The UID of the User who created this configuration.
                readOnly: true
              updatedAt:
                type: string
                description: Updated timestamp in RFC3339 text format.
                readOnly: true
              updatedBy:
                type: string
                description: The UID of the User who last updated this configuration.
                readOnly: true
              deletedAt:
                type: string
                description: Deletion timestamp in RFC3339 text format.
                readOnly: true
              deletedBy:
                type: string
                description: The UID of the User who deleted this configuration.
                readOnly: true
            title: >-
              Nav type definition

              A typical 3 sections nav can be constructed as below, ignoring
              metadata:

              +-------+-----------+----------+

              | List  | Manage    | More     |

              +-------+-----------+----------+--------+

              | Jobs  | Accounts  | External | Google |

              +-------+-----------+----------+--------+

              | Wines |

              +-------+

              In JSON representation:

              {
                "nav" : {
                  "name": "Main",
                  "nodes" : [
                    { "ref": "List", "label": "List", "destination": "NOOP",
                      "nodes": [
                        {"ref": "jobs-list", "label": "Jobs", "destination": "PLATFORM"},
                        {"ref": "wines-list", "label": "Wines", "destination": "PLATFORM"}
                      ]
                    },
                    {
                      "ref": "/manage-page-path", "label": "Manage", "destination": "PAGE",
                      "nodes": [
                        {"ref": "accounts-list", "label": "Accounts", "destination": "PLATFORM"}
                      ]
                    },
                    {
                      "ref": "More", "label": "More", "destination": "NOOP",
                      "nodes": [
                        { "ref": "Externals", "label": "Externals", "destination": "NOOP",
                          "nodes": [
                            {"ref": "https://google.co.uk", "label": "Google", "destination": "LINK",
                          ]
                        }
                      ]
                    }
                  ]
                }
              }
            required:
              - name
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: uid
          description: The UID of the Nav.
          in: path
          required: true
          type: string
      tags:
        - UI
  '/ui/v1/nav/{nav.uid}':
    put:
      summary: Updates a Nav and returns the updated Nav.
      operationId: UIService_PutNav
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              uid:
                type: string
                description: Output only. The unique ID of the nav.
                readOnly: true
              name:
                type: string
                description: Required. The human readable name of the nav.
                required:
                  - name
              userId:
                type: string
                description: The ID of the user this nav is used for.
              tenantId:
                type: string
                description: The ID of the tenant this nav is used for.
              domainId:
                type: string
                description: Deprecated.
              nodes:
                type: array
                items:
                  type: object
                  properties:
                    destination:
                      description: The destination this NavNode links to.
                      type: string
                      enum:
                        - DESTINATION_UNSPECIFIED
                        - NOOP
                        - PLATFORM
                        - LINK
                        - PAGE
                        - WEBX
                      default: DESTINATION_UNSPECIFIED
                    ref:
                      type: string
                      description: >-
                        The link for this NavNode. The format depends on the
                        value in `destination`.
                    label:
                      type: string
                      description: The label to display in the frontend for this NavNode.
                    nodes:
                      type: array
                      items: {}
                      description: A list of child NavNodes.
                    grantToRoleIds:
                      type: array
                      items:
                        type: string
                      description: >-
                        A list of the Role IDs that are able to view this
                        NavNode.
                  description: A individual node within a Nav.
                description: A list of child NavNodes.
              isSystemGenerated:
                type: boolean
                description: >-
                  The flag defines the creation type, which is permission
                  controlled.
              createdAt:
                type: string
                description: Creation timestamp in RFC3339 text format.
                readOnly: true
              createdBy:
                type: string
                description: The UID of the User who created this configuration.
                readOnly: true
              updatedAt:
                type: string
                description: Updated timestamp in RFC3339 text format.
                readOnly: true
              updatedBy:
                type: string
                description: The UID of the User who last updated this configuration.
                readOnly: true
              deletedAt:
                type: string
                description: Deletion timestamp in RFC3339 text format.
                readOnly: true
              deletedBy:
                type: string
                description: The UID of the User who deleted this configuration.
                readOnly: true
            title: >-
              Nav type definition

              A typical 3 sections nav can be constructed as below, ignoring
              metadata:

              +-------+-----------+----------+

              | List  | Manage    | More     |

              +-------+-----------+----------+--------+

              | Jobs  | Accounts  | External | Google |

              +-------+-----------+----------+--------+

              | Wines |

              +-------+

              In JSON representation:

              {
                "nav" : {
                  "name": "Main",
                  "nodes" : [
                    { "ref": "List", "label": "List", "destination": "NOOP",
                      "nodes": [
                        {"ref": "jobs-list", "label": "Jobs", "destination": "PLATFORM"},
                        {"ref": "wines-list", "label": "Wines", "destination": "PLATFORM"}
                      ]
                    },
                    {
                      "ref": "/manage-page-path", "label": "Manage", "destination": "PAGE",
                      "nodes": [
                        {"ref": "accounts-list", "label": "Accounts", "destination": "PLATFORM"}
                      ]
                    },
                    {
                      "ref": "More", "label": "More", "destination": "NOOP",
                      "nodes": [
                        { "ref": "Externals", "label": "Externals", "destination": "NOOP",
                          "nodes": [
                            {"ref": "https://google.co.uk", "label": "Google", "destination": "LINK",
                          ]
                        }
                      ]
                    }
                  ]
                }
              }
            required:
              - name
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: nav.uid
          description: Output only. The unique ID of the nav.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              nav:
                type: object
                properties:
                  name:
                    type: string
                    description: Required. The human readable name of the nav.
                    required:
                      - name
                  userId:
                    type: string
                    description: The ID of the user this nav is used for.
                  tenantId:
                    type: string
                    description: The ID of the tenant this nav is used for.
                  domainId:
                    type: string
                    description: Deprecated.
                  nodes:
                    type: array
                    items:
                      type: object
                      properties:
                        destination:
                          description: The destination this NavNode links to.
                          type: string
                          enum:
                            - DESTINATION_UNSPECIFIED
                            - NOOP
                            - PLATFORM
                            - LINK
                            - PAGE
                            - WEBX
                          default: DESTINATION_UNSPECIFIED
                        ref:
                          type: string
                          description: >-
                            The link for this NavNode. The format depends on the
                            value in `destination`.
                        label:
                          type: string
                          description: >-
                            The label to display in the frontend for this
                            NavNode.
                        nodes:
                          type: array
                          items: {}
                          description: A list of child NavNodes.
                        grantToRoleIds:
                          type: array
                          items:
                            type: string
                          description: >-
                            A list of the Role IDs that are able to view this
                            NavNode.
                      description: A individual node within a Nav.
                    description: A list of child NavNodes.
                  isSystemGenerated:
                    type: boolean
                    description: >-
                      The flag defines the creation type, which is permission
                      controlled.
                  createdAt:
                    type: string
                    description: Creation timestamp in RFC3339 text format.
                    readOnly: true
                  createdBy:
                    type: string
                    description: The UID of the User who created this configuration.
                    readOnly: true
                  updatedAt:
                    type: string
                    description: Updated timestamp in RFC3339 text format.
                    readOnly: true
                  updatedBy:
                    type: string
                    description: The UID of the User who last updated this configuration.
                    readOnly: true
                  deletedAt:
                    type: string
                    description: Deletion timestamp in RFC3339 text format.
                    readOnly: true
                  deletedBy:
                    type: string
                    description: The UID of the User who deleted this configuration.
                    readOnly: true
                description: Required. The Nav to update.
                title: Required. The Nav to update.
                required:
                  - name
            description: Request message for UIApi.PutNav.
            required:
              - name
      tags:
        - UI
  '/ui/v1/nav/{uid}':
    get:
      summary: >-
        Gets a Nav by UID.

        If feature permissions are in use, the resources may be restricted by
        the user's roles.
      operationId: UIService_GetNav
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              uid:
                type: string
                description: Output only. The unique ID of the nav.
                readOnly: true
              name:
                type: string
                description: Required. The human readable name of the nav.
                required:
                  - name
              userId:
                type: string
                description: The ID of the user this nav is used for.
              tenantId:
                type: string
                description: The ID of the tenant this nav is used for.
              domainId:
                type: string
                description: Deprecated.
              nodes:
                type: array
                items:
                  type: object
                  properties:
                    destination:
                      description: The destination this NavNode links to.
                      type: string
                      enum:
                        - DESTINATION_UNSPECIFIED
                        - NOOP
                        - PLATFORM
                        - LINK
                        - PAGE
                        - WEBX
                      default: DESTINATION_UNSPECIFIED
                    ref:
                      type: string
                      description: >-
                        The link for this NavNode. The format depends on the
                        value in `destination`.
                    label:
                      type: string
                      description: The label to display in the frontend for this NavNode.
                    nodes:
                      type: array
                      items: {}
                      description: A list of child NavNodes.
                    grantToRoleIds:
                      type: array
                      items:
                        type: string
                      description: >-
                        A list of the Role IDs that are able to view this
                        NavNode.
                  description: A individual node within a Nav.
                description: A list of child NavNodes.
              isSystemGenerated:
                type: boolean
                description: >-
                  The flag defines the creation type, which is permission
                  controlled.
              createdAt:
                type: string
                description: Creation timestamp in RFC3339 text format.
                readOnly: true
              createdBy:
                type: string
                description: The UID of the User who created this configuration.
                readOnly: true
              updatedAt:
                type: string
                description: Updated timestamp in RFC3339 text format.
                readOnly: true
              updatedBy:
                type: string
                description: The UID of the User who last updated this configuration.
                readOnly: true
              deletedAt:
                type: string
                description: Deletion timestamp in RFC3339 text format.
                readOnly: true
              deletedBy:
                type: string
                description: The UID of the User who deleted this configuration.
                readOnly: true
            title: >-
              Nav type definition

              A typical 3 sections nav can be constructed as below, ignoring
              metadata:

              +-------+-----------+----------+

              | List  | Manage    | More     |

              +-------+-----------+----------+--------+

              | Jobs  | Accounts  | External | Google |

              +-------+-----------+----------+--------+

              | Wines |

              +-------+

              In JSON representation:

              {
                "nav" : {
                  "name": "Main",
                  "nodes" : [
                    { "ref": "List", "label": "List", "destination": "NOOP",
                      "nodes": [
                        {"ref": "jobs-list", "label": "Jobs", "destination": "PLATFORM"},
                        {"ref": "wines-list", "label": "Wines", "destination": "PLATFORM"}
                      ]
                    },
                    {
                      "ref": "/manage-page-path", "label": "Manage", "destination": "PAGE",
                      "nodes": [
                        {"ref": "accounts-list", "label": "Accounts", "destination": "PLATFORM"}
                      ]
                    },
                    {
                      "ref": "More", "label": "More", "destination": "NOOP",
                      "nodes": [
                        { "ref": "Externals", "label": "Externals", "destination": "NOOP",
                          "nodes": [
                            {"ref": "https://google.co.uk", "label": "Google", "destination": "LINK",
                          ]
                        }
                      ]
                    }
                  ]
                }
              }
            required:
              - name
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: uid
          description: The UID of the Nav.
          in: path
          required: true
          type: string
      tags:
        - UI
    delete:
      summary: Deletes a Nav by UID and returns the deleted Nav.
      operationId: UIService_DelNav
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              uid:
                type: string
                description: Output only. The unique ID of the nav.
                readOnly: true
              name:
                type: string
                description: Required. The human readable name of the nav.
                required:
                  - name
              userId:
                type: string
                description: The ID of the user this nav is used for.
              tenantId:
                type: string
                description: The ID of the tenant this nav is used for.
              domainId:
                type: string
                description: Deprecated.
              nodes:
                type: array
                items:
                  type: object
                  properties:
                    destination:
                      description: The destination this NavNode links to.
                      type: string
                      enum:
                        - DESTINATION_UNSPECIFIED
                        - NOOP
                        - PLATFORM
                        - LINK
                        - PAGE
                        - WEBX
                      default: DESTINATION_UNSPECIFIED
                    ref:
                      type: string
                      description: >-
                        The link for this NavNode. The format depends on the
                        value in `destination`.
                    label:
                      type: string
                      description: The label to display in the frontend for this NavNode.
                    nodes:
                      type: array
                      items: {}
                      description: A list of child NavNodes.
                    grantToRoleIds:
                      type: array
                      items:
                        type: string
                      description: >-
                        A list of the Role IDs that are able to view this
                        NavNode.
                  description: A individual node within a Nav.
                description: A list of child NavNodes.
              isSystemGenerated:
                type: boolean
                description: >-
                  The flag defines the creation type, which is permission
                  controlled.
              createdAt:
                type: string
                description: Creation timestamp in RFC3339 text format.
                readOnly: true
              createdBy:
                type: string
                description: The UID of the User who created this configuration.
                readOnly: true
              updatedAt:
                type: string
                description: Updated timestamp in RFC3339 text format.
                readOnly: true
              updatedBy:
                type: string
                description: The UID of the User who last updated this configuration.
                readOnly: true
              deletedAt:
                type: string
                description: Deletion timestamp in RFC3339 text format.
                readOnly: true
              deletedBy:
                type: string
                description: The UID of the User who deleted this configuration.
                readOnly: true
            title: >-
              Nav type definition

              A typical 3 sections nav can be constructed as below, ignoring
              metadata:

              +-------+-----------+----------+

              | List  | Manage    | More     |

              +-------+-----------+----------+--------+

              | Jobs  | Accounts  | External | Google |

              +-------+-----------+----------+--------+

              | Wines |

              +-------+

              In JSON representation:

              {
                "nav" : {
                  "name": "Main",
                  "nodes" : [
                    { "ref": "List", "label": "List", "destination": "NOOP",
                      "nodes": [
                        {"ref": "jobs-list", "label": "Jobs", "destination": "PLATFORM"},
                        {"ref": "wines-list", "label": "Wines", "destination": "PLATFORM"}
                      ]
                    },
                    {
                      "ref": "/manage-page-path", "label": "Manage", "destination": "PAGE",
                      "nodes": [
                        {"ref": "accounts-list", "label": "Accounts", "destination": "PLATFORM"}
                      ]
                    },
                    {
                      "ref": "More", "label": "More", "destination": "NOOP",
                      "nodes": [
                        { "ref": "Externals", "label": "Externals", "destination": "NOOP",
                          "nodes": [
                            {"ref": "https://google.co.uk", "label": "Google", "destination": "LINK",
                          ]
                        }
                      ]
                    }
                  ]
                }
              }
            required:
              - name
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: uid
          description: The UID of the Nav.
          in: path
          required: true
          type: string
      tags:
        - UI
  /ui/v1/resource:
    get:
      summary: Lists the set of Resources matching the request.
      operationId: UIService_GetResources
      responses:
        '200':
          description: A successful response.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: userId.strategy
          description: |-
            Required. The strategy to use when matching the value.

             - MATCH_STRATEGY_UNSPECIFIED: Not specified. This value should be never used.
             - MATCH_EXACT: Match the value exactly.
             - MATCH_EXACT_AND_NULL: Match the value exactly, or where the value is null or empty.
             - MATCH_NULL_ONLY: Match null or empty only.
             - MATCH_ANY: Match any value.
          in: query
          required: false
          type: string
          enum:
            - MATCH_STRATEGY_UNSPECIFIED
            - MATCH_EXACT
            - MATCH_EXACT_AND_NULL
            - MATCH_NULL_ONLY
            - MATCH_ANY
          default: MATCH_STRATEGY_UNSPECIFIED
        - name: userId.value
          description: The value to be matched.
          in: query
          required: false
          type: string
        - name: tenantId.strategy
          description: |-
            Required. The strategy to use when matching the value.

             - MATCH_STRATEGY_UNSPECIFIED: Not specified. This value should be never used.
             - MATCH_EXACT: Match the value exactly.
             - MATCH_EXACT_AND_NULL: Match the value exactly, or where the value is null or empty.
             - MATCH_NULL_ONLY: Match null or empty only.
             - MATCH_ANY: Match any value.
          in: query
          required: false
          type: string
          enum:
            - MATCH_STRATEGY_UNSPECIFIED
            - MATCH_EXACT
            - MATCH_EXACT_AND_NULL
            - MATCH_NULL_ONLY
            - MATCH_ANY
          default: MATCH_STRATEGY_UNSPECIFIED
        - name: tenantId.value
          description: The value to be matched.
          in: query
          required: false
          type: string
        - name: domainId.strategy
          description: |-
            Required. The strategy to use when matching the value.

             - MATCH_STRATEGY_UNSPECIFIED: Not specified. This value should be never used.
             - MATCH_EXACT: Match the value exactly.
             - MATCH_EXACT_AND_NULL: Match the value exactly, or where the value is null or empty.
             - MATCH_NULL_ONLY: Match null or empty only.
             - MATCH_ANY: Match any value.
          in: query
          required: false
          type: string
          enum:
            - MATCH_STRATEGY_UNSPECIFIED
            - MATCH_EXACT
            - MATCH_EXACT_AND_NULL
            - MATCH_NULL_ONLY
            - MATCH_ANY
          default: MATCH_STRATEGY_UNSPECIFIED
        - name: domainId.value
          description: The value to be matched.
          in: query
          required: false
          type: string
        - name: resource
          in: query
          required: false
          type: string
        - name: limit
          description: The maximum number of items to return. Zero returns everything.
          in: query
          required: false
          type: integer
          format: int32
        - name: datasource
          description: |2-
             - DATASOURCE_UNSPECIFIED: Not specified. This value should be never used.
             - ELASTICSEARCH: The data is stored in ElasticSearch.
             - GRAPHQL: The data is stored behind a GraphQL endpoint.
             - CUSTOM: The data is stored using a custom endpoint(s).
          in: query
          required: false
          type: string
          enum:
            - DATASOURCE_UNSPECIFIED
            - ELASTICSEARCH
            - GRAPHQL
            - CUSTOM
          default: DATASOURCE_UNSPECIFIED
        - name: datasourceParamsCustom.getObjects.request.request.url
          description: |-
            URL is the URL the request will be sent to.
            It is evaluated as a template.
          in: query
          required: false
          type: string
        - name: datasourceParamsCustom.getObjects.request.request.method
          description: Method is the request method that will be used.
          in: query
          required: false
          type: string
          enum:
            - REQUEST_METHOD_UNSPECIFIED
            - GET
            - POST
            - PUT
            - PATCH
            - DELETE
          default: REQUEST_METHOD_UNSPECIFIED
        - name: datasourceParamsCustom.getObjects.request.request.body
          description: >-
            Body is a template string that will be parsed and sent in the
            request body.

            If it is blank, no body will be sent.
          in: query
          required: false
          type: string
        - name: datasourceParamsCustom.getObjects.request.request.headers
          description: >-
            Headers is a list of strings that will be sent as headers in the
            request.

            The first colon (:) will be used as a separator between the key and
            value of the header.

            Each header string will be evaluated as a template allowing you to
            pass through auth tokens etc.
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: datasourceParamsCustom.getObjects.request.luceneQueryKey
          description: >-
            luceneQueryKey is the name of a query string key that will be used
            to send the lucene query.

            If it is blank, the lucene query will not be sent.
          in: query
          required: false
          type: string
        - name: datasourceParamsCustom.getObjects.request.cursorQueryKey
          in: query
          required: false
          type: string
        - name: datasourceParamsCustom.getObjects.request.order
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: datasourceParamsCustom.getObjects.jsonpathResponse.results
          description: >-
            A jsonpath selector. The result from the selector is expected to be
            an array of objects.
          in: query
          required: false
          type: string
        - name: datasourceParamsCustom.getObjects.jsonpathResponse.total
          description: >-
            A jsonpath selector. The result is expected to be an int indicating
            the total number of records

            found with the given selectors.
          in: query
          required: false
          type: string
        - name: datasourceParamsCustom.getObjects.jsonpathResponse.cursor
          description: >-
            A jsonpath selector. The result is expected to be a cursor that can
            be used with cursor based pagination.
          in: query
          required: false
          type: string
        - name: datasourceParamsCustom.getObjects.jsonpathResponse.cursorTemplate
          in: query
          required: false
          type: string
        - name: datasourceParamsCustom.deleteObject.request.request.url
          description: |-
            URL is the URL the request will be sent to.
            It is evaluated as a template.
          in: query
          required: false
          type: string
        - name: datasourceParamsCustom.deleteObject.request.request.method
          description: Method is the request method that will be used.
          in: query
          required: false
          type: string
          enum:
            - REQUEST_METHOD_UNSPECIFIED
            - GET
            - POST
            - PUT
            - PATCH
            - DELETE
          default: REQUEST_METHOD_UNSPECIFIED
        - name: datasourceParamsCustom.deleteObject.request.request.body
          description: >-
            Body is a template string that will be parsed and sent in the
            request body.

            If it is blank, no body will be sent.
          in: query
          required: false
          type: string
        - name: datasourceParamsCustom.deleteObject.request.request.headers
          description: >-
            Headers is a list of strings that will be sent as headers in the
            request.

            The first colon (:) will be used as a separator between the key and
            value of the header.

            Each header string will be evaluated as a template allowing you to
            pass through auth tokens etc.
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: datasourceParamsCustom.updateObject.request.request.url
          description: |-
            URL is the URL the request will be sent to.
            It is evaluated as a template.
          in: query
          required: false
          type: string
        - name: datasourceParamsCustom.updateObject.request.request.method
          description: Method is the request method that will be used.
          in: query
          required: false
          type: string
          enum:
            - REQUEST_METHOD_UNSPECIFIED
            - GET
            - POST
            - PUT
            - PATCH
            - DELETE
          default: REQUEST_METHOD_UNSPECIFIED
        - name: datasourceParamsCustom.updateObject.request.request.body
          description: >-
            Body is a template string that will be parsed and sent in the
            request body.

            If it is blank, no body will be sent.
          in: query
          required: false
          type: string
        - name: datasourceParamsCustom.updateObject.request.request.headers
          description: >-
            Headers is a list of strings that will be sent as headers in the
            request.

            The first colon (:) will be used as a separator between the key and
            value of the header.

            Each header string will be evaluated as a template allowing you to
            pass through auth tokens etc.
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: datasourceParamsCustom.createObject.request.request.url
          description: |-
            URL is the URL the request will be sent to.
            It is evaluated as a template.
          in: query
          required: false
          type: string
        - name: datasourceParamsCustom.createObject.request.request.method
          description: Method is the request method that will be used.
          in: query
          required: false
          type: string
          enum:
            - REQUEST_METHOD_UNSPECIFIED
            - GET
            - POST
            - PUT
            - PATCH
            - DELETE
          default: REQUEST_METHOD_UNSPECIFIED
        - name: datasourceParamsCustom.createObject.request.request.body
          description: >-
            Body is a template string that will be parsed and sent in the
            request body.

            If it is blank, no body will be sent.
          in: query
          required: false
          type: string
        - name: datasourceParamsCustom.createObject.request.request.headers
          description: >-
            Headers is a list of strings that will be sent as headers in the
            request.

            The first colon (:) will be used as a separator between the key and
            value of the header.

            Each header string will be evaluated as a template allowing you to
            pass through auth tokens etc.
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: datasourceParamsCustom.createObject.response.stringId
          description: >-
            A jsonpath selector. The result from the selector is expected to be
            a string identifying

            the newly created record.
          in: query
          required: false
          type: string
        - name: datasourceParamsCustom.createObject.response.intId
          description: >-
            A jsonpath selector. The result from the selector is expected to be
            an int identifying

            the newly created record.
          in: query
          required: false
          type: string
        - name: datasourceParamsCustom.getDataSchema.static.resourceId
          description: Resource ID is the ID of the resource that this schema belongs to.
          in: query
          required: false
          type: string
        - name: datasourceParamsCustom.getObject.request.request.url
          description: |-
            URL is the URL the request will be sent to.
            It is evaluated as a template.
          in: query
          required: false
          type: string
        - name: datasourceParamsCustom.getObject.request.request.method
          description: Method is the request method that will be used.
          in: query
          required: false
          type: string
          enum:
            - REQUEST_METHOD_UNSPECIFIED
            - GET
            - POST
            - PUT
            - PATCH
            - DELETE
          default: REQUEST_METHOD_UNSPECIFIED
        - name: datasourceParamsCustom.getObject.request.request.body
          description: >-
            Body is a template string that will be parsed and sent in the
            request body.

            If it is blank, no body will be sent.
          in: query
          required: false
          type: string
        - name: datasourceParamsCustom.getObject.request.request.headers
          description: >-
            Headers is a list of strings that will be sent as headers in the
            request.

            The first colon (:) will be used as a separator between the key and
            value of the header.

            Each header string will be evaluated as a template allowing you to
            pass through auth tokens etc.
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: datasourceParamsCustom.getObject.jsonpathResponse.result
          description: >-
            A jsonpath selector. The result from the selector is expected to be
            an object.
          in: query
          required: false
          type: string
        - name: datasourceParamsElasticsearch.index
          description: Required. The index to use when searching ElasticSearch.
          in: query
          required: true
          type: string
        - name: datasourceParamsGraphql.schema
          description: Required. The schema to use when querying.
          in: query
          required: true
          type: string
        - name: datasourceParamsGraphql.properties
          description: Required. The properties to query.
          in: query
          required: true
          type: string
        - name: datasourceParamsGraphql.depth
          description: The maximum depth to search to when detecting properties.
          in: query
          required: false
          type: integer
          format: int32
        - name: datasourceParamsGraphql.exclusions
          description: >-
            The accessors that should be excluded from the schema.

            Matches accessors in the format of SomeProperty,
            SomeParent.SomeChild and *.SomePropertyToBeMatchedInAnyParent.
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: name
          description: Filter results which match name.
          in: query
          required: false
          type: string
        - name: page
          description: The page number to fetch. Used with limit.
          in: query
          required: false
          type: integer
          format: int32
      tags:
        - UI
    post:
      summary: Creates a Resource and returns the new Resource.
      operationId: UIService_NewResource
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              uid:
                type: string
                description: Output only. The unique ID of the resource.
                readOnly: true
              name:
                type: string
                description: Required. The human readable name of the resource.
                required:
                  - name
              userId:
                type: string
                description: The ID of the user this resource is used for.
              tenantId:
                type: string
                description: The ID of the tenant this resource is used for.
              domainId:
                type: string
                description: Deprecated.
              resource:
                type: string
                title: 'Required. TODO: ???'
                required:
                  - resource
              datasource:
                description: >-
                  Required. Defines where data will be queried from for this
                  resource.
                type: string
                enum:
                  - DATASOURCE_UNSPECIFIED
                  - ELASTICSEARCH
                  - GRAPHQL
                  - CUSTOM
                default: DATASOURCE_UNSPECIFIED
              datasourceParamsCustom: {}
              datasourceParamsElasticsearch:
                description: The parameters for an ElasticSearch DataSource.
                type: object
                properties:
                  index:
                    type: string
                    description: Required. The index to use when searching ElasticSearch.
                    required:
                      - index
                required:
                  - index
              datasourceParamsGraphql:
                description: The parameters for a GraphQL DataSource.
                type: object
                properties:
                  schema:
                    type: string
                    description: Required. The schema to use when querying.
                    required:
                      - schema
                  properties:
                    type: string
                    description: Required. The properties to query.
                    required:
                      - properties
                  depth:
                    type: integer
                    format: int32
                    description: The maximum depth to search to when detecting properties.
                  exclusions:
                    type: array
                    items:
                      type: string
                    description: >-
                      The accessors that should be excluded from the schema.

                      Matches accessors in the format of SomeProperty,
                      SomeParent.SomeChild and
                      *.SomePropertyToBeMatchedInAnyParent.
                required:
                  - schema
                  - properties
              datasourceCapabilities:
                description: >-
                  datasourceCapabilities allow you configure, enable, disable
                  different capabilities that some functionality may rely on.
                type: object
                properties:
                  paging:
                    description: >-
                      Paging allows you to configure the paging capabilities of
                      your resource.
                    type: object
                    properties:
                      method:
                        description: >-
                          Method allows you to change the paging method for your
                          resource.
                        type: string
                        enum:
                          - PAGING_METHOD_UNSPECIFIED
                          - CURSOR
                          - PAGE
                        default: PAGING_METHOD_UNSPECIFIED
                  definer:
                    type: string
                    description: >-
                      The template to use to render the definer for this
                      resource.
              definer:
                type: string
                description: >-
                  Used as a template when rendering a generic display for a
                  record for this resource.
              isSystemGenerated:
                type: boolean
                description: >-
                  The flag defines the creation type, which is permission
                  controlled.
              createdAt:
                type: string
                title: created_at UTC timestamp in rfc3339
              createdBy:
                type: string
                title: created_by user uid
              updatedAt:
                type: string
                title: updated_at UTC timestamp in rfc3339
              updatedBy:
                type: string
                title: updated_by user uid
              deletedAt:
                type: string
                title: deleted_at UTC timestamp in rfc3339
              deletedBy:
                type: string
                title: deleted_by user uid
            required:
              - name
              - resource
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              resource:
                description: Required. The Resource to create.
                type: object
                properties:
                  uid:
                    type: string
                    description: Output only. The unique ID of the resource.
                    readOnly: true
                  name:
                    type: string
                    description: Required. The human readable name of the resource.
                    required:
                      - name
                  userId:
                    type: string
                    description: The ID of the user this resource is used for.
                  tenantId:
                    type: string
                    description: The ID of the tenant this resource is used for.
                  domainId:
                    type: string
                    description: Deprecated.
                  resource:
                    type: string
                    title: 'Required. TODO: ???'
                    required:
                      - resource
                  datasource:
                    description: >-
                      Required. Defines where data will be queried from for this
                      resource.
                    type: string
                    enum:
                      - DATASOURCE_UNSPECIFIED
                      - ELASTICSEARCH
                      - GRAPHQL
                      - CUSTOM
                    default: DATASOURCE_UNSPECIFIED
                  datasourceParamsCustom: {}
                  datasourceParamsElasticsearch:
                    description: The parameters for an ElasticSearch DataSource.
                    type: object
                    properties:
                      index:
                        type: string
                        description: >-
                          Required. The index to use when searching
                          ElasticSearch.
                        required:
                          - index
                    required:
                      - index
                  datasourceParamsGraphql:
                    description: The parameters for a GraphQL DataSource.
                    type: object
                    properties:
                      schema:
                        type: string
                        description: Required. The schema to use when querying.
                        required:
                          - schema
                      properties:
                        type: string
                        description: Required. The properties to query.
                        required:
                          - properties
                      depth:
                        type: integer
                        format: int32
                        description: >-
                          The maximum depth to search to when detecting
                          properties.
                      exclusions:
                        type: array
                        items:
                          type: string
                        description: >-
                          The accessors that should be excluded from the schema.

                          Matches accessors in the format of SomeProperty,
                          SomeParent.SomeChild and
                          *.SomePropertyToBeMatchedInAnyParent.
                    required:
                      - schema
                      - properties
                  datasourceCapabilities:
                    description: >-
                      datasourceCapabilities allow you configure, enable,
                      disable different capabilities that some functionality may
                      rely on.
                    type: object
                    properties:
                      paging:
                        description: >-
                          Paging allows you to configure the paging capabilities
                          of your resource.
                        type: object
                        properties:
                          method:
                            description: >-
                              Method allows you to change the paging method for
                              your resource.
                            type: string
                            enum:
                              - PAGING_METHOD_UNSPECIFIED
                              - CURSOR
                              - PAGE
                            default: PAGING_METHOD_UNSPECIFIED
                      definer:
                        type: string
                        description: >-
                          The template to use to render the definer for this
                          resource.
                  definer:
                    type: string
                    description: >-
                      Used as a template when rendering a generic display for a
                      record for this resource.
                  isSystemGenerated:
                    type: boolean
                    description: >-
                      The flag defines the creation type, which is permission
                      controlled.
                  createdAt:
                    type: string
                    title: created_at UTC timestamp in rfc3339
                  createdBy:
                    type: string
                    title: created_by user uid
                  updatedAt:
                    type: string
                    title: updated_at UTC timestamp in rfc3339
                  updatedBy:
                    type: string
                    title: updated_by user uid
                  deletedAt:
                    type: string
                    title: deleted_at UTC timestamp in rfc3339
                  deletedBy:
                    type: string
                    title: deleted_by user uid
                required:
                  - name
                  - resource
            description: Request message for UIApi.NewResource.
      tags:
        - UI
  '/ui/v1/resource/{resource.uid}':
    put:
      summary: Updates a Resource and returns the updated Resource.
      operationId: UIService_PutResource
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              uid:
                type: string
                description: Output only. The unique ID of the resource.
                readOnly: true
              name:
                type: string
                description: Required. The human readable name of the resource.
                required:
                  - name
              userId:
                type: string
                description: The ID of the user this resource is used for.
              tenantId:
                type: string
                description: The ID of the tenant this resource is used for.
              domainId:
                type: string
                description: Deprecated.
              resource:
                type: string
                title: 'Required. TODO: ???'
                required:
                  - resource
              datasource:
                description: >-
                  Required. Defines where data will be queried from for this
                  resource.
                type: string
                enum:
                  - DATASOURCE_UNSPECIFIED
                  - ELASTICSEARCH
                  - GRAPHQL
                  - CUSTOM
                default: DATASOURCE_UNSPECIFIED
              datasourceParamsCustom: {}
              datasourceParamsElasticsearch:
                description: The parameters for an ElasticSearch DataSource.
                type: object
                properties:
                  index:
                    type: string
                    description: Required. The index to use when searching ElasticSearch.
                    required:
                      - index
                required:
                  - index
              datasourceParamsGraphql:
                description: The parameters for a GraphQL DataSource.
                type: object
                properties:
                  schema:
                    type: string
                    description: Required. The schema to use when querying.
                    required:
                      - schema
                  properties:
                    type: string
                    description: Required. The properties to query.
                    required:
                      - properties
                  depth:
                    type: integer
                    format: int32
                    description: The maximum depth to search to when detecting properties.
                  exclusions:
                    type: array
                    items:
                      type: string
                    description: >-
                      The accessors that should be excluded from the schema.

                      Matches accessors in the format of SomeProperty,
                      SomeParent.SomeChild and
                      *.SomePropertyToBeMatchedInAnyParent.
                required:
                  - schema
                  - properties
              datasourceCapabilities:
                description: >-
                  datasourceCapabilities allow you configure, enable, disable
                  different capabilities that some functionality may rely on.
                type: object
                properties:
                  paging:
                    description: >-
                      Paging allows you to configure the paging capabilities of
                      your resource.
                    type: object
                    properties:
                      method:
                        description: >-
                          Method allows you to change the paging method for your
                          resource.
                        type: string
                        enum:
                          - PAGING_METHOD_UNSPECIFIED
                          - CURSOR
                          - PAGE
                        default: PAGING_METHOD_UNSPECIFIED
                  definer:
                    type: string
                    description: >-
                      The template to use to render the definer for this
                      resource.
              definer:
                type: string
                description: >-
                  Used as a template when rendering a generic display for a
                  record for this resource.
              isSystemGenerated:
                type: boolean
                description: >-
                  The flag defines the creation type, which is permission
                  controlled.
              createdAt:
                type: string
                title: created_at UTC timestamp in rfc3339
              createdBy:
                type: string
                title: created_by user uid
              updatedAt:
                type: string
                title: updated_at UTC timestamp in rfc3339
              updatedBy:
                type: string
                title: updated_by user uid
              deletedAt:
                type: string
                title: deleted_at UTC timestamp in rfc3339
              deletedBy:
                type: string
                title: deleted_by user uid
            required:
              - name
              - resource
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: resource.uid
          description: Output only. The unique ID of the resource.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              resource:
                type: object
                properties:
                  name:
                    type: string
                    description: Required. The human readable name of the resource.
                    required:
                      - name
                  userId:
                    type: string
                    description: The ID of the user this resource is used for.
                  tenantId:
                    type: string
                    description: The ID of the tenant this resource is used for.
                  domainId:
                    type: string
                    description: Deprecated.
                  resource:
                    type: string
                    title: 'Required. TODO: ???'
                    required:
                      - resource
                  datasource:
                    description: >-
                      Required. Defines where data will be queried from for this
                      resource.
                    type: string
                    enum:
                      - DATASOURCE_UNSPECIFIED
                      - ELASTICSEARCH
                      - GRAPHQL
                      - CUSTOM
                    default: DATASOURCE_UNSPECIFIED
                  datasourceParamsCustom:
                    description: The parameters for a Custom DataSource.
                    type: object
                    properties:
                      getObjects:
                        type: object
                        properties:
                          request:
                            type: object
                            properties:
                              request:
                                description: Request is the base request.
                                type: object
                                properties:
                                  url:
                                    type: string
                                    description: >-
                                      URL is the URL the request will be sent
                                      to.

                                      It is evaluated as a template.
                                  method:
                                    description: >-
                                      Method is the request method that will be
                                      used.
                                    type: string
                                    enum:
                                      - REQUEST_METHOD_UNSPECIFIED
                                      - GET
                                      - POST
                                      - PUT
                                      - PATCH
                                      - DELETE
                                    default: REQUEST_METHOD_UNSPECIFIED
                                    title: Method enum for HTTP verb
                                  body:
                                    type: string
                                    description: >-
                                      Body is a template string that will be
                                      parsed and sent in the request body.

                                      If it is blank, no body will be sent.
                                  headers:
                                    type: array
                                    items:
                                      type: string
                                    description: >-
                                      Headers is a list of strings that will be
                                      sent as headers in the request.

                                      The first colon (:) will be used as a
                                      separator between the key and value of the
                                      header.

                                      Each header string will be evaluated as a
                                      template allowing you to pass through auth
                                      tokens etc.
                              luceneQueryKey:
                                type: string
                                description: >-
                                  luceneQueryKey is the name of a query string
                                  key that will be used to send the lucene
                                  query.

                                  If it is blank, the lucene query will not be
                                  sent.
                              cursorQueryKey:
                                type: string
                              order:
                                type: array
                                items:
                                  type: string
                              filterMapping:
                                type: object
                                properties:
                                  mappings:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        field:
                                          type: string
                                        comparison:
                                          type: string
                                          enum:
                                            - COMPARISON_UNSPECIFIED
                                            - EQUAL
                                            - MORE_THAN
                                            - MORE_THAN_EQUAL
                                            - LESS_THAN
                                            - LESS_THAN_EQUAL
                                            - CONTAINS
                                            - STARTS_WITH
                                            - ENDS_WITH
                                            - LIKE
                                          default: COMPARISON_UNSPECIFIED
                                          description: ' - COMPARISON_UNSPECIFIED: Not specified. This value should be never used.'
                                        not:
                                          type: boolean
                                        queryParamTemplate:
                                          type: string
                                          description: >-
                                            A template that should result in a
                                            `key=value` output.

                                            Can result in multiple parameters being
                                            set: `a=1&b=2`.
                                      description: >-
                                        Contains a field + condition mapping
                                        that if matched provides a template to
                                        use.
                                    description: >-
                                      A set of mappings that can be used to add
                                      query parameters.
                            description: >-
                              GetObjectsCustomRequest is the definition of a
                              custom http request

                              that is used to return a list of records for a
                              resource.
                          jsonpathResponse:
                            type: object
                            properties:
                              results:
                                type: string
                                description: >-
                                  A jsonpath selector. The result from the
                                  selector is expected to be an array of
                                  objects.
                              total:
                                type: string
                                description: >-
                                  A jsonpath selector. The result is expected to
                                  be an int indicating the total number of
                                  records

                                  found with the given selectors.
                              cursor:
                                type: string
                                description: >-
                                  A jsonpath selector. The result is expected to
                                  be a cursor that can be used with cursor based
                                  pagination.
                              cursorTemplate:
                                type: string
                            description: >-
                              GetObjectsJsonpathResponse is used to format a
                              JSON result into the expected format.
                          recordMappings:
                            type: object
                            properties:
                              outgoing:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    schemaField:
                                      type: string
                                      description: >-
                                        schema_field is the name of the field as
                                        it appears in the schema.
                                    outputPath:
                                      type: string
                                      description: >-
                                        outputPath is a jsonpath pointing to a
                                        location the data should be added.
                                  description: >-
                                    OutgoingFieldMapping is applied to each
                                    record of a resource leaving the system.

                                    It allows us to convert data between a local
                                    "schema" version and the external structure.
                              incoming:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    schemaField:
                                      type: string
                                      description: >-
                                        schema_field is the name of the field as
                                        it appears in the schema.
                                    inputPath:
                                      type: string
                                      description: >-
                                        input_path is a jsonpath pointing to a
                                        location in the incoming data.
                                  description: >-
                                    IncomingFieldMapping is applied to each
                                    record of a resource entering the system.

                                    It allows us to convert data between a local
                                    "schema" version and the external structure.
                            description: >-
                              RecordMappings contains information on how a
                              record should be mapped when it's coming in/out

                              of the system.
                        description: >-
                          GetObjectsCustom provides the values required to
                          perform a custom get-objects request.
                      deleteObject:
                        type: object
                        properties:
                          request:
                            type: object
                            properties:
                              request:
                                description: Request is the base request.
                                type: object
                                properties:
                                  url:
                                    type: string
                                    description: >-
                                      URL is the URL the request will be sent
                                      to.

                                      It is evaluated as a template.
                                  method:
                                    description: >-
                                      Method is the request method that will be
                                      used.
                                    type: string
                                    enum:
                                      - REQUEST_METHOD_UNSPECIFIED
                                      - GET
                                      - POST
                                      - PUT
                                      - PATCH
                                      - DELETE
                                    default: REQUEST_METHOD_UNSPECIFIED
                                    title: Method enum for HTTP verb
                                  body:
                                    type: string
                                    description: >-
                                      Body is a template string that will be
                                      parsed and sent in the request body.

                                      If it is blank, no body will be sent.
                                  headers:
                                    type: array
                                    items:
                                      type: string
                                    description: >-
                                      Headers is a list of strings that will be
                                      sent as headers in the request.

                                      The first colon (:) will be used as a
                                      separator between the key and value of the
                                      header.

                                      Each header string will be evaluated as a
                                      template allowing you to pass through auth
                                      tokens etc.
                            description: >-
                              DeleteObjectCustomRequest is the definition of a
                              custom http request

                              that is used to delete a single record.
                        description: >-
                          DeleteObjectCustom provides the values required to
                          perform a custom delete-object request.
                      updateObject:
                        type: object
                        properties:
                          request:
                            type: object
                            properties:
                              request:
                                description: Request is the base request.
                                type: object
                                properties:
                                  url:
                                    type: string
                                    description: >-
                                      URL is the URL the request will be sent
                                      to.

                                      It is evaluated as a template.
                                  method:
                                    description: >-
                                      Method is the request method that will be
                                      used.
                                    type: string
                                    enum:
                                      - REQUEST_METHOD_UNSPECIFIED
                                      - GET
                                      - POST
                                      - PUT
                                      - PATCH
                                      - DELETE
                                    default: REQUEST_METHOD_UNSPECIFIED
                                    title: Method enum for HTTP verb
                                  body:
                                    type: string
                                    description: >-
                                      Body is a template string that will be
                                      parsed and sent in the request body.

                                      If it is blank, no body will be sent.
                                  headers:
                                    type: array
                                    items:
                                      type: string
                                    description: >-
                                      Headers is a list of strings that will be
                                      sent as headers in the request.

                                      The first colon (:) will be used as a
                                      separator between the key and value of the
                                      header.

                                      Each header string will be evaluated as a
                                      template allowing you to pass through auth
                                      tokens etc.
                            description: >-
                              UpdateObjectCustomRequest is the definition of a
                              custom http request

                              that is used to delete a update record.
                          recordMappings:
                            type: object
                            properties:
                              outgoing:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    schemaField:
                                      type: string
                                      description: >-
                                        schema_field is the name of the field as
                                        it appears in the schema.
                                    outputPath:
                                      type: string
                                      description: >-
                                        outputPath is a jsonpath pointing to a
                                        location the data should be added.
                                  description: >-
                                    OutgoingFieldMapping is applied to each
                                    record of a resource leaving the system.

                                    It allows us to convert data between a local
                                    "schema" version and the external structure.
                              incoming:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    schemaField:
                                      type: string
                                      description: >-
                                        schema_field is the name of the field as
                                        it appears in the schema.
                                    inputPath:
                                      type: string
                                      description: >-
                                        input_path is a jsonpath pointing to a
                                        location in the incoming data.
                                  description: >-
                                    IncomingFieldMapping is applied to each
                                    record of a resource entering the system.

                                    It allows us to convert data between a local
                                    "schema" version and the external structure.
                            description: >-
                              RecordMappings contains information on how a
                              record should be mapped when it's coming in/out

                              of the system.
                        description: >-
                          UpdateObjectCustom provides the values required to
                          perform a custom update-object request.
                      createObject:
                        type: object
                        properties:
                          request:
                            type: object
                            properties:
                              request:
                                description: Request is the base request.
                                type: object
                                properties:
                                  url:
                                    type: string
                                    description: >-
                                      URL is the URL the request will be sent
                                      to.

                                      It is evaluated as a template.
                                  method:
                                    description: >-
                                      Method is the request method that will be
                                      used.
                                    type: string
                                    enum:
                                      - REQUEST_METHOD_UNSPECIFIED
                                      - GET
                                      - POST
                                      - PUT
                                      - PATCH
                                      - DELETE
                                    default: REQUEST_METHOD_UNSPECIFIED
                                    title: Method enum for HTTP verb
                                  body:
                                    type: string
                                    description: >-
                                      Body is a template string that will be
                                      parsed and sent in the request body.

                                      If it is blank, no body will be sent.
                                  headers:
                                    type: array
                                    items:
                                      type: string
                                    description: >-
                                      Headers is a list of strings that will be
                                      sent as headers in the request.

                                      The first colon (:) will be used as a
                                      separator between the key and value of the
                                      header.

                                      Each header string will be evaluated as a
                                      template allowing you to pass through auth
                                      tokens etc.
                            description: >-
                              CreateObjectCustomRequest is the definition of a
                              custom http request

                              that is used to create a single record.
                          response:
                            type: object
                            properties:
                              stringId:
                                type: string
                                description: >-
                                  A jsonpath selector. The result from the
                                  selector is expected to be a string
                                  identifying

                                  the newly created record.
                              intId:
                                type: string
                                description: >-
                                  A jsonpath selector. The result from the
                                  selector is expected to be an int identifying

                                  the newly created record.
                            description: >-
                              CreateObjectCustomJsonpathResponse is used to
                              format a JSON result into the expected format.
                          recordMappings:
                            type: object
                            properties:
                              outgoing:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    schemaField:
                                      type: string
                                      description: >-
                                        schema_field is the name of the field as
                                        it appears in the schema.
                                    outputPath:
                                      type: string
                                      description: >-
                                        outputPath is a jsonpath pointing to a
                                        location the data should be added.
                                  description: >-
                                    OutgoingFieldMapping is applied to each
                                    record of a resource leaving the system.

                                    It allows us to convert data between a local
                                    "schema" version and the external structure.
                              incoming:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    schemaField:
                                      type: string
                                      description: >-
                                        schema_field is the name of the field as
                                        it appears in the schema.
                                    inputPath:
                                      type: string
                                      description: >-
                                        input_path is a jsonpath pointing to a
                                        location in the incoming data.
                                  description: >-
                                    IncomingFieldMapping is applied to each
                                    record of a resource entering the system.

                                    It allows us to convert data between a local
                                    "schema" version and the external structure.
                            description: >-
                              RecordMappings contains information on how a
                              record should be mapped when it's coming in/out

                              of the system.
                        description: >-
                          CreateObjectCustom provides the values required to
                          perform a custom create-object request.
                      getDataSchema: {}
                      getObject:
                        type: object
                        properties:
                          request:
                            type: object
                            properties:
                              request:
                                description: Request is the base request.
                                type: object
                                properties:
                                  url:
                                    type: string
                                    description: >-
                                      URL is the URL the request will be sent
                                      to.

                                      It is evaluated as a template.
                                  method:
                                    description: >-
                                      Method is the request method that will be
                                      used.
                                    type: string
                                    enum:
                                      - REQUEST_METHOD_UNSPECIFIED
                                      - GET
                                      - POST
                                      - PUT
                                      - PATCH
                                      - DELETE
                                    default: REQUEST_METHOD_UNSPECIFIED
                                    title: Method enum for HTTP verb
                                  body:
                                    type: string
                                    description: >-
                                      Body is a template string that will be
                                      parsed and sent in the request body.

                                      If it is blank, no body will be sent.
                                  headers:
                                    type: array
                                    items:
                                      type: string
                                    description: >-
                                      Headers is a list of strings that will be
                                      sent as headers in the request.

                                      The first colon (:) will be used as a
                                      separator between the key and value of the
                                      header.

                                      Each header string will be evaluated as a
                                      template allowing you to pass through auth
                                      tokens etc.
                            description: >-
                              GetObjectCustomRequest is the definition of a
                              custom http request

                              that is used to return a single resource record by
                              it's primary key.
                          jsonpathResponse:
                            type: object
                            properties:
                              result:
                                type: string
                                description: >-
                                  A jsonpath selector. The result from the
                                  selector is expected to be an object.
                            description: >-
                              GetObjectJsonpathResponse is used to format a JSON
                              result into the expected format.
                          recordMappings:
                            type: object
                            properties:
                              outgoing:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    schemaField:
                                      type: string
                                      description: >-
                                        schema_field is the name of the field as
                                        it appears in the schema.
                                    outputPath:
                                      type: string
                                      description: >-
                                        outputPath is a jsonpath pointing to a
                                        location the data should be added.
                                  description: >-
                                    OutgoingFieldMapping is applied to each
                                    record of a resource leaving the system.

                                    It allows us to convert data between a local
                                    "schema" version and the external structure.
                              incoming:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    schemaField:
                                      type: string
                                      description: >-
                                        schema_field is the name of the field as
                                        it appears in the schema.
                                    inputPath:
                                      type: string
                                      description: >-
                                        input_path is a jsonpath pointing to a
                                        location in the incoming data.
                                  description: >-
                                    IncomingFieldMapping is applied to each
                                    record of a resource entering the system.

                                    It allows us to convert data between a local
                                    "schema" version and the external structure.
                            description: >-
                              RecordMappings contains information on how a
                              record should be mapped when it's coming in/out

                              of the system.
                        description: >-
                          GetObjectCustom provides the values required to
                          perform a custom get-object request.
                    title: DatasourceParamsCustom type definition
                  datasourceParamsElasticsearch:
                    description: The parameters for an ElasticSearch DataSource.
                    type: object
                    properties:
                      index:
                        type: string
                        description: >-
                          Required. The index to use when searching
                          ElasticSearch.
                        required:
                          - index
                    required:
                      - index
                  datasourceParamsGraphql:
                    description: The parameters for a GraphQL DataSource.
                    type: object
                    properties:
                      schema:
                        type: string
                        description: Required. The schema to use when querying.
                        required:
                          - schema
                      properties:
                        type: string
                        description: Required. The properties to query.
                        required:
                          - properties
                      depth:
                        type: integer
                        format: int32
                        description: >-
                          The maximum depth to search to when detecting
                          properties.
                      exclusions:
                        type: array
                        items:
                          type: string
                        description: >-
                          The accessors that should be excluded from the schema.

                          Matches accessors in the format of SomeProperty,
                          SomeParent.SomeChild and
                          *.SomePropertyToBeMatchedInAnyParent.
                    required:
                      - schema
                      - properties
                  datasourceCapabilities:
                    description: >-
                      datasourceCapabilities allow you configure, enable,
                      disable different capabilities that some functionality may
                      rely on.
                    type: object
                    properties:
                      paging:
                        description: >-
                          Paging allows you to configure the paging capabilities
                          of your resource.
                        type: object
                        properties:
                          method:
                            description: >-
                              Method allows you to change the paging method for
                              your resource.
                            type: string
                            enum:
                              - PAGING_METHOD_UNSPECIFIED
                              - CURSOR
                              - PAGE
                            default: PAGING_METHOD_UNSPECIFIED
                      definer:
                        type: string
                        description: >-
                          The template to use to render the definer for this
                          resource.
                  definer:
                    type: string
                    description: >-
                      Used as a template when rendering a generic display for a
                      record for this resource.
                  isSystemGenerated:
                    type: boolean
                    description: >-
                      The flag defines the creation type, which is permission
                      controlled.
                  createdAt:
                    type: string
                    title: created_at UTC timestamp in rfc3339
                  createdBy:
                    type: string
                    title: created_by user uid
                  updatedAt:
                    type: string
                    title: updated_at UTC timestamp in rfc3339
                  updatedBy:
                    type: string
                    title: updated_by user uid
                  deletedAt:
                    type: string
                    title: deleted_at UTC timestamp in rfc3339
                  deletedBy:
                    type: string
                    title: deleted_by user uid
                description: Required. The Resource to update.
                title: Required. The Resource to update.
                required:
                  - name
                  - resource
            description: Request message for UIApi.PutResource.
            required:
              - name
              - resource
      tags:
        - UI
  '/ui/v1/resource/{uid}':
    get:
      summary: Gets a Resource by UID or name.
      operationId: UIService_GetResource
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              uid:
                type: string
                description: Output only. The unique ID of the resource.
                readOnly: true
              name:
                type: string
                description: Required. The human readable name of the resource.
                required:
                  - name
              userId:
                type: string
                description: The ID of the user this resource is used for.
              tenantId:
                type: string
                description: The ID of the tenant this resource is used for.
              domainId:
                type: string
                description: Deprecated.
              resource:
                type: string
                title: 'Required. TODO: ???'
                required:
                  - resource
              datasource:
                description: >-
                  Required. Defines where data will be queried from for this
                  resource.
                type: string
                enum:
                  - DATASOURCE_UNSPECIFIED
                  - ELASTICSEARCH
                  - GRAPHQL
                  - CUSTOM
                default: DATASOURCE_UNSPECIFIED
              datasourceParamsCustom: {}
              datasourceParamsElasticsearch:
                description: The parameters for an ElasticSearch DataSource.
                type: object
                properties:
                  index:
                    type: string
                    description: Required. The index to use when searching ElasticSearch.
                    required:
                      - index
                required:
                  - index
              datasourceParamsGraphql:
                description: The parameters for a GraphQL DataSource.
                type: object
                properties:
                  schema:
                    type: string
                    description: Required. The schema to use when querying.
                    required:
                      - schema
                  properties:
                    type: string
                    description: Required. The properties to query.
                    required:
                      - properties
                  depth:
                    type: integer
                    format: int32
                    description: The maximum depth to search to when detecting properties.
                  exclusions:
                    type: array
                    items:
                      type: string
                    description: >-
                      The accessors that should be excluded from the schema.

                      Matches accessors in the format of SomeProperty,
                      SomeParent.SomeChild and
                      *.SomePropertyToBeMatchedInAnyParent.
                required:
                  - schema
                  - properties
              datasourceCapabilities:
                description: >-
                  datasourceCapabilities allow you configure, enable, disable
                  different capabilities that some functionality may rely on.
                type: object
                properties:
                  paging:
                    description: >-
                      Paging allows you to configure the paging capabilities of
                      your resource.
                    type: object
                    properties:
                      method:
                        description: >-
                          Method allows you to change the paging method for your
                          resource.
                        type: string
                        enum:
                          - PAGING_METHOD_UNSPECIFIED
                          - CURSOR
                          - PAGE
                        default: PAGING_METHOD_UNSPECIFIED
                  definer:
                    type: string
                    description: >-
                      The template to use to render the definer for this
                      resource.
              definer:
                type: string
                description: >-
                  Used as a template when rendering a generic display for a
                  record for this resource.
              isSystemGenerated:
                type: boolean
                description: >-
                  The flag defines the creation type, which is permission
                  controlled.
              createdAt:
                type: string
                title: created_at UTC timestamp in rfc3339
              createdBy:
                type: string
                title: created_by user uid
              updatedAt:
                type: string
                title: updated_at UTC timestamp in rfc3339
              updatedBy:
                type: string
                title: updated_by user uid
              deletedAt:
                type: string
                title: deleted_at UTC timestamp in rfc3339
              deletedBy:
                type: string
                title: deleted_by user uid
            required:
              - name
              - resource
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: uid
          description: The UID of the Resource.
          in: path
          required: true
          type: string
        - name: name
          description: The name of the Resource.
          in: query
          required: false
          type: string
      tags:
        - UI
    delete:
      summary: Deletes a Resource by UID and returns the deleted Resource.
      operationId: UIService_DelResource
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              uid:
                type: string
                description: Output only. The unique ID of the resource.
                readOnly: true
              name:
                type: string
                description: Required. The human readable name of the resource.
                required:
                  - name
              userId:
                type: string
                description: The ID of the user this resource is used for.
              tenantId:
                type: string
                description: The ID of the tenant this resource is used for.
              domainId:
                type: string
                description: Deprecated.
              resource:
                type: string
                title: 'Required. TODO: ???'
                required:
                  - resource
              datasource:
                description: >-
                  Required. Defines where data will be queried from for this
                  resource.
                type: string
                enum:
                  - DATASOURCE_UNSPECIFIED
                  - ELASTICSEARCH
                  - GRAPHQL
                  - CUSTOM
                default: DATASOURCE_UNSPECIFIED
              datasourceParamsCustom: {}
              datasourceParamsElasticsearch:
                description: The parameters for an ElasticSearch DataSource.
                type: object
                properties:
                  index:
                    type: string
                    description: Required. The index to use when searching ElasticSearch.
                    required:
                      - index
                required:
                  - index
              datasourceParamsGraphql:
                description: The parameters for a GraphQL DataSource.
                type: object
                properties:
                  schema:
                    type: string
                    description: Required. The schema to use when querying.
                    required:
                      - schema
                  properties:
                    type: string
                    description: Required. The properties to query.
                    required:
                      - properties
                  depth:
                    type: integer
                    format: int32
                    description: The maximum depth to search to when detecting properties.
                  exclusions:
                    type: array
                    items:
                      type: string
                    description: >-
                      The accessors that should be excluded from the schema.

                      Matches accessors in the format of SomeProperty,
                      SomeParent.SomeChild and
                      *.SomePropertyToBeMatchedInAnyParent.
                required:
                  - schema
                  - properties
              datasourceCapabilities:
                description: >-
                  datasourceCapabilities allow you configure, enable, disable
                  different capabilities that some functionality may rely on.
                type: object
                properties:
                  paging:
                    description: >-
                      Paging allows you to configure the paging capabilities of
                      your resource.
                    type: object
                    properties:
                      method:
                        description: >-
                          Method allows you to change the paging method for your
                          resource.
                        type: string
                        enum:
                          - PAGING_METHOD_UNSPECIFIED
                          - CURSOR
                          - PAGE
                        default: PAGING_METHOD_UNSPECIFIED
                  definer:
                    type: string
                    description: >-
                      The template to use to render the definer for this
                      resource.
              definer:
                type: string
                description: >-
                  Used as a template when rendering a generic display for a
                  record for this resource.
              isSystemGenerated:
                type: boolean
                description: >-
                  The flag defines the creation type, which is permission
                  controlled.
              createdAt:
                type: string
                title: created_at UTC timestamp in rfc3339
              createdBy:
                type: string
                title: created_by user uid
              updatedAt:
                type: string
                title: updated_at UTC timestamp in rfc3339
              updatedBy:
                type: string
                title: updated_by user uid
              deletedAt:
                type: string
                title: deleted_at UTC timestamp in rfc3339
              deletedBy:
                type: string
                title: deleted_by user uid
            required:
              - name
              - resource
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: uid
          description: Required. The UID of the Resource.
          in: path
          required: true
          type: string
      tags:
        - UI
  /ui/v1/sync:
    post:
      operationId: UIService_InitiateSchemaSync
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              resourceId:
                type: string
                title: The effected resource id
              listId:
                type: string
                title: The effected list id
              filterId:
                type: string
                title: The effected filter id
              pageId:
                type: string
                title: The effected page id
              viewId:
                type: string
                title: The effected view id
            title: InitiateSchemaSyncResponse type definition
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              change:
                title: The schema change type
                type: string
                enum:
                  - SCHEMA_CHANGE_TYPE_UNSPECIFIED
                  - UPSERT
                  - DELETE
                default: SCHEMA_CHANGE_TYPE_UNSPECIFIED
              schema:
                type: string
                title: The GraphQL schema name
              tenantId:
                type: string
                title: >-
                  Optional. Indicates if system admin requests on a tenant
                  behalf
            title: InitiateSchemaSyncRequest type definition
      tags:
        - UI
  /ui/v1/template:
    get:
      summary: Lists the set of Templates matching the request.
      operationId: UIService_GetTemplates
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              templates:
                type: array
                items:
                  type: object
                  properties:
                    uid:
                      type: string
                      description: Output only. The unique ID of the template.
                      readOnly: true
                    name:
                      type: string
                      description: Required. The human readable name of the template.
                      required:
                        - name
                    userId:
                      type: string
                      description: The ID of the user this template is used for.
                    tenantId:
                      type: string
                      description: The ID of the tenant this template is used for.
                    domainId:
                      type: string
                      description: Deprecated.
                    content:
                      type: string
                      description: The template content.
                    kind:
                      title: The kind of template
                      type: string
                      enum:
                        - KIND_UNSPECIFIED
                        - PAGE_LAYOUT
                        - PAGE_EXTEND
                      default: KIND_UNSPECIFIED
                      description: ' - KIND_UNSPECIFIED: Not specified. This value should be never used.'
                    description:
                      type: string
                      description: An optional description of the template.
                    isSystemGenerated:
                      type: boolean
                      description: >-
                        The flag defines the creation type, which is permission
                        controlled.
                    createdAt:
                      type: string
                      description: Creation timestamp in RFC3339 text format.
                      readOnly: true
                    createdBy:
                      type: string
                      description: The UID of the User who created this configuration.
                      readOnly: true
                    updatedAt:
                      type: string
                      description: Updated timestamp in RFC3339 text format.
                      readOnly: true
                    updatedBy:
                      type: string
                      description: The UID of the User who last updated this configuration.
                      readOnly: true
                    deletedAt:
                      type: string
                      description: Deletion timestamp in RFC3339 text format.
                      readOnly: true
                    deletedBy:
                      type: string
                      description: The UID of the User who deleted this configuration.
                      readOnly: true
                  required:
                    - name
                description: >-
                  The Templates that matched the request.  This may be less than
                  total_count if limit was set.
              totalCount:
                type: integer
                format: int32
                description: The total number of Templates that matched the request.
            description: Response message for Crud.GetTemplates.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: userId.strategy
          description: |-
            Required. The strategy to use when matching the value.

             - MATCH_STRATEGY_UNSPECIFIED: Not specified. This value should be never used.
             - MATCH_EXACT: Match the value exactly.
             - MATCH_EXACT_AND_NULL: Match the value exactly, or where the value is null or empty.
             - MATCH_NULL_ONLY: Match null or empty only.
             - MATCH_ANY: Match any value.
          in: query
          required: false
          type: string
          enum:
            - MATCH_STRATEGY_UNSPECIFIED
            - MATCH_EXACT
            - MATCH_EXACT_AND_NULL
            - MATCH_NULL_ONLY
            - MATCH_ANY
          default: MATCH_STRATEGY_UNSPECIFIED
        - name: userId.value
          description: The value to be matched.
          in: query
          required: false
          type: string
        - name: tenantId.strategy
          description: |-
            Required. The strategy to use when matching the value.

             - MATCH_STRATEGY_UNSPECIFIED: Not specified. This value should be never used.
             - MATCH_EXACT: Match the value exactly.
             - MATCH_EXACT_AND_NULL: Match the value exactly, or where the value is null or empty.
             - MATCH_NULL_ONLY: Match null or empty only.
             - MATCH_ANY: Match any value.
          in: query
          required: false
          type: string
          enum:
            - MATCH_STRATEGY_UNSPECIFIED
            - MATCH_EXACT
            - MATCH_EXACT_AND_NULL
            - MATCH_NULL_ONLY
            - MATCH_ANY
          default: MATCH_STRATEGY_UNSPECIFIED
        - name: tenantId.value
          description: The value to be matched.
          in: query
          required: false
          type: string
        - name: domainId.strategy
          description: |-
            Required. The strategy to use when matching the value.

             - MATCH_STRATEGY_UNSPECIFIED: Not specified. This value should be never used.
             - MATCH_EXACT: Match the value exactly.
             - MATCH_EXACT_AND_NULL: Match the value exactly, or where the value is null or empty.
             - MATCH_NULL_ONLY: Match null or empty only.
             - MATCH_ANY: Match any value.
          in: query
          required: false
          type: string
          enum:
            - MATCH_STRATEGY_UNSPECIFIED
            - MATCH_EXACT
            - MATCH_EXACT_AND_NULL
            - MATCH_NULL_ONLY
            - MATCH_ANY
          default: MATCH_STRATEGY_UNSPECIFIED
        - name: domainId.value
          description: The value to be matched.
          in: query
          required: false
          type: string
        - name: name
          description: 'Deprecated: Use filter instead.'
          in: query
          required: false
          type: string
        - name: limit
          description: The maximum number of items to return. Zero returns everything.
          in: query
          required: false
          type: integer
          format: int32
        - name: page
          description: The page number to fetch. Used with limit.
          in: query
          required: false
          type: integer
          format: int32
        - name: filter
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: sorting
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
      tags:
        - UI
    post:
      summary: Creates a Template and returns the new Template.
      operationId: UIService_NewTemplate
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              uid:
                type: string
                description: Output only. The unique ID of the template.
                readOnly: true
              name:
                type: string
                description: Required. The human readable name of the template.
                required:
                  - name
              userId:
                type: string
                description: The ID of the user this template is used for.
              tenantId:
                type: string
                description: The ID of the tenant this template is used for.
              domainId:
                type: string
                description: Deprecated.
              content:
                type: string
                description: The template content.
              kind:
                title: The kind of template
                type: string
                enum:
                  - KIND_UNSPECIFIED
                  - PAGE_LAYOUT
                  - PAGE_EXTEND
                default: KIND_UNSPECIFIED
                description: ' - KIND_UNSPECIFIED: Not specified. This value should be never used.'
              description:
                type: string
                description: An optional description of the template.
              isSystemGenerated:
                type: boolean
                description: >-
                  The flag defines the creation type, which is permission
                  controlled.
              createdAt:
                type: string
                description: Creation timestamp in RFC3339 text format.
                readOnly: true
              createdBy:
                type: string
                description: The UID of the User who created this configuration.
                readOnly: true
              updatedAt:
                type: string
                description: Updated timestamp in RFC3339 text format.
                readOnly: true
              updatedBy:
                type: string
                description: The UID of the User who last updated this configuration.
                readOnly: true
              deletedAt:
                type: string
                description: Deletion timestamp in RFC3339 text format.
                readOnly: true
              deletedBy:
                type: string
                description: The UID of the User who deleted this configuration.
                readOnly: true
            required:
              - name
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              template:
                description: The Template to create.
                type: object
                properties:
                  uid:
                    type: string
                    description: Output only. The unique ID of the template.
                    readOnly: true
                  name:
                    type: string
                    description: Required. The human readable name of the template.
                    required:
                      - name
                  userId:
                    type: string
                    description: The ID of the user this template is used for.
                  tenantId:
                    type: string
                    description: The ID of the tenant this template is used for.
                  domainId:
                    type: string
                    description: Deprecated.
                  content:
                    type: string
                    description: The template content.
                  kind:
                    title: The kind of template
                    type: string
                    enum:
                      - KIND_UNSPECIFIED
                      - PAGE_LAYOUT
                      - PAGE_EXTEND
                    default: KIND_UNSPECIFIED
                    description: ' - KIND_UNSPECIFIED: Not specified. This value should be never used.'
                  description:
                    type: string
                    description: An optional description of the template.
                  isSystemGenerated:
                    type: boolean
                    description: >-
                      The flag defines the creation type, which is permission
                      controlled.
                  createdAt:
                    type: string
                    description: Creation timestamp in RFC3339 text format.
                    readOnly: true
                  createdBy:
                    type: string
                    description: The UID of the User who created this configuration.
                    readOnly: true
                  updatedAt:
                    type: string
                    description: Updated timestamp in RFC3339 text format.
                    readOnly: true
                  updatedBy:
                    type: string
                    description: The UID of the User who last updated this configuration.
                    readOnly: true
                  deletedAt:
                    type: string
                    description: Deletion timestamp in RFC3339 text format.
                    readOnly: true
                  deletedBy:
                    type: string
                    description: The UID of the User who deleted this configuration.
                    readOnly: true
                required:
                  - name
            description: Request message for UIApi.NewTemplate.
      tags:
        - UI
  '/ui/v1/template/{template.uid}':
    put:
      summary: Updates a Template and returns the updated Template.
      operationId: UIService_PutTemplate
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              uid:
                type: string
                description: Output only. The unique ID of the template.
                readOnly: true
              name:
                type: string
                description: Required. The human readable name of the template.
                required:
                  - name
              userId:
                type: string
                description: The ID of the user this template is used for.
              tenantId:
                type: string
                description: The ID of the tenant this template is used for.
              domainId:
                type: string
                description: Deprecated.
              content:
                type: string
                description: The template content.
              kind:
                title: The kind of template
                type: string
                enum:
                  - KIND_UNSPECIFIED
                  - PAGE_LAYOUT
                  - PAGE_EXTEND
                default: KIND_UNSPECIFIED
                description: ' - KIND_UNSPECIFIED: Not specified. This value should be never used.'
              description:
                type: string
                description: An optional description of the template.
              isSystemGenerated:
                type: boolean
                description: >-
                  The flag defines the creation type, which is permission
                  controlled.
              createdAt:
                type: string
                description: Creation timestamp in RFC3339 text format.
                readOnly: true
              createdBy:
                type: string
                description: The UID of the User who created this configuration.
                readOnly: true
              updatedAt:
                type: string
                description: Updated timestamp in RFC3339 text format.
                readOnly: true
              updatedBy:
                type: string
                description: The UID of the User who last updated this configuration.
                readOnly: true
              deletedAt:
                type: string
                description: Deletion timestamp in RFC3339 text format.
                readOnly: true
              deletedBy:
                type: string
                description: The UID of the User who deleted this configuration.
                readOnly: true
            required:
              - name
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: template.uid
          description: Output only. The unique ID of the template.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              template:
                type: object
                properties:
                  name:
                    type: string
                    description: Required. The human readable name of the template.
                    required:
                      - name
                  userId:
                    type: string
                    description: The ID of the user this template is used for.
                  tenantId:
                    type: string
                    description: The ID of the tenant this template is used for.
                  domainId:
                    type: string
                    description: Deprecated.
                  content:
                    type: string
                    description: The template content.
                  kind:
                    title: The kind of template
                    type: string
                    enum:
                      - KIND_UNSPECIFIED
                      - PAGE_LAYOUT
                      - PAGE_EXTEND
                    default: KIND_UNSPECIFIED
                    description: ' - KIND_UNSPECIFIED: Not specified. This value should be never used.'
                  description:
                    type: string
                    description: An optional description of the template.
                  isSystemGenerated:
                    type: boolean
                    description: >-
                      The flag defines the creation type, which is permission
                      controlled.
                  createdAt:
                    type: string
                    description: Creation timestamp in RFC3339 text format.
                    readOnly: true
                  createdBy:
                    type: string
                    description: The UID of the User who created this configuration.
                    readOnly: true
                  updatedAt:
                    type: string
                    description: Updated timestamp in RFC3339 text format.
                    readOnly: true
                  updatedBy:
                    type: string
                    description: The UID of the User who last updated this configuration.
                    readOnly: true
                  deletedAt:
                    type: string
                    description: Deletion timestamp in RFC3339 text format.
                    readOnly: true
                  deletedBy:
                    type: string
                    description: The UID of the User who deleted this configuration.
                    readOnly: true
                description: The Template to update.
                title: The Template to update.
                required:
                  - name
            description: Request message for UIApi.PutTemplate.
            required:
              - name
      tags:
        - UI
  '/ui/v1/template/{uid}':
    get:
      summary: Gets a Template by UID.
      operationId: UIService_GetTemplate
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              uid:
                type: string
                description: Output only. The unique ID of the template.
                readOnly: true
              name:
                type: string
                description: Required. The human readable name of the template.
                required:
                  - name
              userId:
                type: string
                description: The ID of the user this template is used for.
              tenantId:
                type: string
                description: The ID of the tenant this template is used for.
              domainId:
                type: string
                description: Deprecated.
              content:
                type: string
                description: The template content.
              kind:
                title: The kind of template
                type: string
                enum:
                  - KIND_UNSPECIFIED
                  - PAGE_LAYOUT
                  - PAGE_EXTEND
                default: KIND_UNSPECIFIED
                description: ' - KIND_UNSPECIFIED: Not specified. This value should be never used.'
              description:
                type: string
                description: An optional description of the template.
              isSystemGenerated:
                type: boolean
                description: >-
                  The flag defines the creation type, which is permission
                  controlled.
              createdAt:
                type: string
                description: Creation timestamp in RFC3339 text format.
                readOnly: true
              createdBy:
                type: string
                description: The UID of the User who created this configuration.
                readOnly: true
              updatedAt:
                type: string
                description: Updated timestamp in RFC3339 text format.
                readOnly: true
              updatedBy:
                type: string
                description: The UID of the User who last updated this configuration.
                readOnly: true
              deletedAt:
                type: string
                description: Deletion timestamp in RFC3339 text format.
                readOnly: true
              deletedBy:
                type: string
                description: The UID of the User who deleted this configuration.
                readOnly: true
            required:
              - name
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: uid
          description: The UID of the Template.
          in: path
          required: true
          type: string
      tags:
        - UI
    delete:
      summary: Deletes a Template by UID and returns the deleted Template.
      operationId: UIService_DelTemplate
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              uid:
                type: string
                description: Output only. The unique ID of the template.
                readOnly: true
              name:
                type: string
                description: Required. The human readable name of the template.
                required:
                  - name
              userId:
                type: string
                description: The ID of the user this template is used for.
              tenantId:
                type: string
                description: The ID of the tenant this template is used for.
              domainId:
                type: string
                description: Deprecated.
              content:
                type: string
                description: The template content.
              kind:
                title: The kind of template
                type: string
                enum:
                  - KIND_UNSPECIFIED
                  - PAGE_LAYOUT
                  - PAGE_EXTEND
                default: KIND_UNSPECIFIED
                description: ' - KIND_UNSPECIFIED: Not specified. This value should be never used.'
              description:
                type: string
                description: An optional description of the template.
              isSystemGenerated:
                type: boolean
                description: >-
                  The flag defines the creation type, which is permission
                  controlled.
              createdAt:
                type: string
                description: Creation timestamp in RFC3339 text format.
                readOnly: true
              createdBy:
                type: string
                description: The UID of the User who created this configuration.
                readOnly: true
              updatedAt:
                type: string
                description: Updated timestamp in RFC3339 text format.
                readOnly: true
              updatedBy:
                type: string
                description: The UID of the User who last updated this configuration.
                readOnly: true
              deletedAt:
                type: string
                description: Deletion timestamp in RFC3339 text format.
                readOnly: true
              deletedBy:
                type: string
                description: The UID of the User who deleted this configuration.
                readOnly: true
            required:
              - name
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: uid
          description: The UID of the Template.
          in: path
          required: true
          type: string
      tags:
        - UI
  /ui/v1/validation:
    get:
      summary: Lists the set of Validations matching the request.
      operationId: UIService_GetValidations
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              validations:
                type: array
                items:
                  type: object
                  properties:
                    uid:
                      type: string
                      description: Output only. The unique ID of the validation.
                      readOnly: true
                    name:
                      type: string
                      description: Required. The human readable name of the validation.
                      required:
                        - name
                    userId:
                      type: string
                      description: The ID of the user this validation is used for.
                    tenantId:
                      type: string
                      description: The ID of the tenant this validation is used for.
                    domainId:
                      type: string
                      description: Deprecated.
                    jsonSchema:
                      type: string
                      description: The JSON Schema used for validation.
                    composeOf:
                      type: array
                      items:
                        type: string
                    isSystemGenerated:
                      type: boolean
                      description: >-
                        The flag defines the creation type, which is permission
                        controlled.
                    createdAt:
                      type: string
                      description: Creation timestamp in RFC3339 text format.
                      readOnly: true
                    createdBy:
                      type: string
                      description: The UID of the User who created this configuration.
                      readOnly: true
                    updatedAt:
                      type: string
                      description: Updated timestamp in RFC3339 text format.
                      readOnly: true
                    updatedBy:
                      type: string
                      description: The UID of the User who last updated this configuration.
                      readOnly: true
                    deletedAt:
                      type: string
                      description: Deletion timestamp in RFC3339 text format.
                      readOnly: true
                    deletedBy:
                      type: string
                      description: The UID of the User who deleted this configuration.
                      readOnly: true
                  description: Validation is a JSON Schema backed data validation.
                  required:
                    - name
                description: >-
                  The Validations that matched the request.  This may be less
                  than total_count if limit was set.
              totalCount:
                type: integer
                format: int32
                description: The total number of Validations that matched the request.
            description: Response message for UIApi.GetValidations.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: userId.strategy
          description: |-
            Required. The strategy to use when matching the value.

             - MATCH_STRATEGY_UNSPECIFIED: Not specified. This value should be never used.
             - MATCH_EXACT: Match the value exactly.
             - MATCH_EXACT_AND_NULL: Match the value exactly, or where the value is null or empty.
             - MATCH_NULL_ONLY: Match null or empty only.
             - MATCH_ANY: Match any value.
          in: query
          required: false
          type: string
          enum:
            - MATCH_STRATEGY_UNSPECIFIED
            - MATCH_EXACT
            - MATCH_EXACT_AND_NULL
            - MATCH_NULL_ONLY
            - MATCH_ANY
          default: MATCH_STRATEGY_UNSPECIFIED
        - name: userId.value
          description: The value to be matched.
          in: query
          required: false
          type: string
        - name: tenantId.strategy
          description: |-
            Required. The strategy to use when matching the value.

             - MATCH_STRATEGY_UNSPECIFIED: Not specified. This value should be never used.
             - MATCH_EXACT: Match the value exactly.
             - MATCH_EXACT_AND_NULL: Match the value exactly, or where the value is null or empty.
             - MATCH_NULL_ONLY: Match null or empty only.
             - MATCH_ANY: Match any value.
          in: query
          required: false
          type: string
          enum:
            - MATCH_STRATEGY_UNSPECIFIED
            - MATCH_EXACT
            - MATCH_EXACT_AND_NULL
            - MATCH_NULL_ONLY
            - MATCH_ANY
          default: MATCH_STRATEGY_UNSPECIFIED
        - name: tenantId.value
          description: The value to be matched.
          in: query
          required: false
          type: string
        - name: domainId.strategy
          description: |-
            Required. The strategy to use when matching the value.

             - MATCH_STRATEGY_UNSPECIFIED: Not specified. This value should be never used.
             - MATCH_EXACT: Match the value exactly.
             - MATCH_EXACT_AND_NULL: Match the value exactly, or where the value is null or empty.
             - MATCH_NULL_ONLY: Match null or empty only.
             - MATCH_ANY: Match any value.
          in: query
          required: false
          type: string
          enum:
            - MATCH_STRATEGY_UNSPECIFIED
            - MATCH_EXACT
            - MATCH_EXACT_AND_NULL
            - MATCH_NULL_ONLY
            - MATCH_ANY
          default: MATCH_STRATEGY_UNSPECIFIED
        - name: domainId.value
          description: The value to be matched.
          in: query
          required: false
          type: string
        - name: name
          description: Match Validations by name.
          in: query
          required: false
          type: string
        - name: limit
          description: The maximum number of items to return. Zero returns everything.
          in: query
          required: false
          type: integer
          format: int32
        - name: page
          description: The page number to fetch. Used with limit.
          in: query
          required: false
          type: integer
          format: int32
        - name: uncomposed
          in: query
          required: false
          type: boolean
      tags:
        - UI
    post:
      summary: Creates a Validation and returns the new Validation.
      operationId: UIService_NewValidation
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              uid:
                type: string
                description: Output only. The unique ID of the validation.
                readOnly: true
              name:
                type: string
                description: Required. The human readable name of the validation.
                required:
                  - name
              userId:
                type: string
                description: The ID of the user this validation is used for.
              tenantId:
                type: string
                description: The ID of the tenant this validation is used for.
              domainId:
                type: string
                description: Deprecated.
              jsonSchema:
                type: string
                description: The JSON Schema used for validation.
              composeOf:
                type: array
                items:
                  type: string
              isSystemGenerated:
                type: boolean
                description: >-
                  The flag defines the creation type, which is permission
                  controlled.
              createdAt:
                type: string
                description: Creation timestamp in RFC3339 text format.
                readOnly: true
              createdBy:
                type: string
                description: The UID of the User who created this configuration.
                readOnly: true
              updatedAt:
                type: string
                description: Updated timestamp in RFC3339 text format.
                readOnly: true
              updatedBy:
                type: string
                description: The UID of the User who last updated this configuration.
                readOnly: true
              deletedAt:
                type: string
                description: Deletion timestamp in RFC3339 text format.
                readOnly: true
              deletedBy:
                type: string
                description: The UID of the User who deleted this configuration.
                readOnly: true
            description: Validation is a JSON Schema backed data validation.
            required:
              - name
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              validation:
                description: The Validation to create.
                type: object
                properties:
                  uid:
                    type: string
                    description: Output only. The unique ID of the validation.
                    readOnly: true
                  name:
                    type: string
                    description: Required. The human readable name of the validation.
                    required:
                      - name
                  userId:
                    type: string
                    description: The ID of the user this validation is used for.
                  tenantId:
                    type: string
                    description: The ID of the tenant this validation is used for.
                  domainId:
                    type: string
                    description: Deprecated.
                  jsonSchema:
                    type: string
                    description: The JSON Schema used for validation.
                  composeOf:
                    type: array
                    items:
                      type: string
                  isSystemGenerated:
                    type: boolean
                    description: >-
                      The flag defines the creation type, which is permission
                      controlled.
                  createdAt:
                    type: string
                    description: Creation timestamp in RFC3339 text format.
                    readOnly: true
                  createdBy:
                    type: string
                    description: The UID of the User who created this configuration.
                    readOnly: true
                  updatedAt:
                    type: string
                    description: Updated timestamp in RFC3339 text format.
                    readOnly: true
                  updatedBy:
                    type: string
                    description: The UID of the User who last updated this configuration.
                    readOnly: true
                  deletedAt:
                    type: string
                    description: Deletion timestamp in RFC3339 text format.
                    readOnly: true
                  deletedBy:
                    type: string
                    description: The UID of the User who deleted this configuration.
                    readOnly: true
                required:
                  - name
            description: Request message for Crud.NewValidation.
      tags:
        - UI
  '/ui/v1/validation/{name}/validate':
    post:
      operationId: UIService_ValidateData
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              validated:
                description: The validation result.
                type: string
                enum:
                  - VALIDATED_UNSPECIFIED
                  - VALIDATED_PASS
                  - VALIDATED_FAIL
                default: VALIDATED_UNSPECIFIED
              reasons:
                type: array
                items:
                  type: string
                description: A list of reasons why the validation failed.
              errors:
                type: array
                items:
                  type: object
                  properties:
                    code:
                      type: string
                      description: A unique code for the validation error.
                    message:
                      type: string
                      description: A message explaining what was invalid.
                    path:
                      type: string
                      description: The path to the field that was invalid.
                  description: Explains why a ValidateDataRequest has failed.
                description: A list of validation errors.
            description: Response message for UIApi.ValidateData.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: name
          description: The name of the validation to use.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              data:
                type: string
                description: >-
                  The data to be validated against the schema as a JSON
                  serialized string.
            description: Request message for UIApi.ValidateData.
      tags:
        - UI
  '/ui/v1/validation/{uid}':
    get:
      summary: Gets a Validation by UID.
      operationId: UIService_GetValidation
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              uid:
                type: string
                description: Output only. The unique ID of the validation.
                readOnly: true
              name:
                type: string
                description: Required. The human readable name of the validation.
                required:
                  - name
              userId:
                type: string
                description: The ID of the user this validation is used for.
              tenantId:
                type: string
                description: The ID of the tenant this validation is used for.
              domainId:
                type: string
                description: Deprecated.
              jsonSchema:
                type: string
                description: The JSON Schema used for validation.
              composeOf:
                type: array
                items:
                  type: string
              isSystemGenerated:
                type: boolean
                description: >-
                  The flag defines the creation type, which is permission
                  controlled.
              createdAt:
                type: string
                description: Creation timestamp in RFC3339 text format.
                readOnly: true
              createdBy:
                type: string
                description: The UID of the User who created this configuration.
                readOnly: true
              updatedAt:
                type: string
                description: Updated timestamp in RFC3339 text format.
                readOnly: true
              updatedBy:
                type: string
                description: The UID of the User who last updated this configuration.
                readOnly: true
              deletedAt:
                type: string
                description: Deletion timestamp in RFC3339 text format.
                readOnly: true
              deletedBy:
                type: string
                description: The UID of the User who deleted this configuration.
                readOnly: true
            description: Validation is a JSON Schema backed data validation.
            required:
              - name
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: uid
          description: The UID of the Validation.
          in: path
          required: true
          type: string
        - name: uncomposed
          in: query
          required: false
          type: boolean
      tags:
        - UI
    delete:
      summary: Deletes a Validation by UID and returns the deleted Validation.
      operationId: UIService_DelValidation
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              uid:
                type: string
                description: Output only. The unique ID of the validation.
                readOnly: true
              name:
                type: string
                description: Required. The human readable name of the validation.
                required:
                  - name
              userId:
                type: string
                description: The ID of the user this validation is used for.
              tenantId:
                type: string
                description: The ID of the tenant this validation is used for.
              domainId:
                type: string
                description: Deprecated.
              jsonSchema:
                type: string
                description: The JSON Schema used for validation.
              composeOf:
                type: array
                items:
                  type: string
              isSystemGenerated:
                type: boolean
                description: >-
                  The flag defines the creation type, which is permission
                  controlled.
              createdAt:
                type: string
                description: Creation timestamp in RFC3339 text format.
                readOnly: true
              createdBy:
                type: string
                description: The UID of the User who created this configuration.
                readOnly: true
              updatedAt:
                type: string
                description: Updated timestamp in RFC3339 text format.
                readOnly: true
              updatedBy:
                type: string
                description: The UID of the User who last updated this configuration.
                readOnly: true
              deletedAt:
                type: string
                description: Deletion timestamp in RFC3339 text format.
                readOnly: true
              deletedBy:
                type: string
                description: The UID of the User who deleted this configuration.
                readOnly: true
            description: Validation is a JSON Schema backed data validation.
            required:
              - name
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: uid
          description: The UID of the Validation.
          in: path
          required: true
          type: string
      tags:
        - UI
  '/ui/v1/validation/{validation.uid}':
    put:
      summary: Updates a Validation and returns the updated Validation.
      operationId: UIService_PutValidation
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              uid:
                type: string
                description: Output only. The unique ID of the validation.
                readOnly: true
              name:
                type: string
                description: Required. The human readable name of the validation.
                required:
                  - name
              userId:
                type: string
                description: The ID of the user this validation is used for.
              tenantId:
                type: string
                description: The ID of the tenant this validation is used for.
              domainId:
                type: string
                description: Deprecated.
              jsonSchema:
                type: string
                description: The JSON Schema used for validation.
              composeOf:
                type: array
                items:
                  type: string
              isSystemGenerated:
                type: boolean
                description: >-
                  The flag defines the creation type, which is permission
                  controlled.
              createdAt:
                type: string
                description: Creation timestamp in RFC3339 text format.
                readOnly: true
              createdBy:
                type: string
                description: The UID of the User who created this configuration.
                readOnly: true
              updatedAt:
                type: string
                description: Updated timestamp in RFC3339 text format.
                readOnly: true
              updatedBy:
                type: string
                description: The UID of the User who last updated this configuration.
                readOnly: true
              deletedAt:
                type: string
                description: Deletion timestamp in RFC3339 text format.
                readOnly: true
              deletedBy:
                type: string
                description: The UID of the User who deleted this configuration.
                readOnly: true
            description: Validation is a JSON Schema backed data validation.
            required:
              - name
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: validation.uid
          description: Output only. The unique ID of the validation.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              validation:
                type: object
                properties:
                  name:
                    type: string
                    description: Required. The human readable name of the validation.
                    required:
                      - name
                  userId:
                    type: string
                    description: The ID of the user this validation is used for.
                  tenantId:
                    type: string
                    description: The ID of the tenant this validation is used for.
                  domainId:
                    type: string
                    description: Deprecated.
                  jsonSchema:
                    type: string
                    description: The JSON Schema used for validation.
                  composeOf:
                    type: array
                    items:
                      type: string
                  isSystemGenerated:
                    type: boolean
                    description: >-
                      The flag defines the creation type, which is permission
                      controlled.
                  createdAt:
                    type: string
                    description: Creation timestamp in RFC3339 text format.
                    readOnly: true
                  createdBy:
                    type: string
                    description: The UID of the User who created this configuration.
                    readOnly: true
                  updatedAt:
                    type: string
                    description: Updated timestamp in RFC3339 text format.
                    readOnly: true
                  updatedBy:
                    type: string
                    description: The UID of the User who last updated this configuration.
                    readOnly: true
                  deletedAt:
                    type: string
                    description: Deletion timestamp in RFC3339 text format.
                    readOnly: true
                  deletedBy:
                    type: string
                    description: The UID of the User who deleted this configuration.
                    readOnly: true
                description: The Validation to update.
                title: The Validation to update.
                required:
                  - name
            description: Request message for Crud.PutValidation.
            required:
              - name
      tags:
        - UI
  /ui/v1/view-override:
    get:
      summary: Lists the set of ViewOverrides matching the request.
      operationId: UIService_GetViewOverrides
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              viewOverrides:
                type: array
                items:
                  type: object
                  properties:
                    uid:
                      type: string
                      description: Output only. The unique ID of the view override.
                      readOnly: true
                    userId:
                      type: string
                      description: The ID of the user this override is used for.
                    domainId:
                      type: string
                      description: Deprecated.
                    tenantId:
                      type: string
                      description: The ID of the tenant this override is used for.
                    viewId:
                      type: string
                      title: 'Required. TODO: ???'
                      required:
                        - viewId
                    data:
                      type: string
                    name:
                      type: string
                      description: Required. The human readable name of the filter.
                      required:
                        - name
                    isSystemGenerated:
                      type: boolean
                      description: >-
                        The flag defines the creation type, which is permission
                        controlled.
                    createdAt:
                      type: string
                      description: Creation timestamp in RFC3339 text format.
                      readOnly: true
                    createdBy:
                      type: string
                      description: The UID of the User who created this configuration.
                      readOnly: true
                    updatedAt:
                      type: string
                      description: Updated timestamp in RFC3339 text format.
                      readOnly: true
                    updatedBy:
                      type: string
                      description: The UID of the User who last updated this configuration.
                      readOnly: true
                    deletedAt:
                      type: string
                      description: Deletion timestamp in RFC3339 text format.
                      readOnly: true
                    deletedBy:
                      type: string
                      description: The UID of the User who deleted this configuration.
                      readOnly: true
                  required:
                    - viewId
                    - name
                description: >-
                  The view_overrides that matched the request. This may be less
                  than total_count if limit was set.
              totalCount:
                type: integer
                format: int32
                description: The total number of view_overrides that matched the request.
            description: Response message for UIApi.GetViewOverrides.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: userId.strategy
          description: |-
            Required. The strategy to use when matching the value.

             - MATCH_STRATEGY_UNSPECIFIED: Not specified. This value should be never used.
             - MATCH_EXACT: Match the value exactly.
             - MATCH_EXACT_AND_NULL: Match the value exactly, or where the value is null or empty.
             - MATCH_NULL_ONLY: Match null or empty only.
             - MATCH_ANY: Match any value.
          in: query
          required: false
          type: string
          enum:
            - MATCH_STRATEGY_UNSPECIFIED
            - MATCH_EXACT
            - MATCH_EXACT_AND_NULL
            - MATCH_NULL_ONLY
            - MATCH_ANY
          default: MATCH_STRATEGY_UNSPECIFIED
        - name: userId.value
          description: The value to be matched.
          in: query
          required: false
          type: string
        - name: tenantId.strategy
          description: |-
            Required. The strategy to use when matching the value.

             - MATCH_STRATEGY_UNSPECIFIED: Not specified. This value should be never used.
             - MATCH_EXACT: Match the value exactly.
             - MATCH_EXACT_AND_NULL: Match the value exactly, or where the value is null or empty.
             - MATCH_NULL_ONLY: Match null or empty only.
             - MATCH_ANY: Match any value.
          in: query
          required: false
          type: string
          enum:
            - MATCH_STRATEGY_UNSPECIFIED
            - MATCH_EXACT
            - MATCH_EXACT_AND_NULL
            - MATCH_NULL_ONLY
            - MATCH_ANY
          default: MATCH_STRATEGY_UNSPECIFIED
        - name: tenantId.value
          description: The value to be matched.
          in: query
          required: false
          type: string
        - name: domainId.strategy
          description: |-
            Required. The strategy to use when matching the value.

             - MATCH_STRATEGY_UNSPECIFIED: Not specified. This value should be never used.
             - MATCH_EXACT: Match the value exactly.
             - MATCH_EXACT_AND_NULL: Match the value exactly, or where the value is null or empty.
             - MATCH_NULL_ONLY: Match null or empty only.
             - MATCH_ANY: Match any value.
          in: query
          required: false
          type: string
          enum:
            - MATCH_STRATEGY_UNSPECIFIED
            - MATCH_EXACT
            - MATCH_EXACT_AND_NULL
            - MATCH_NULL_ONLY
            - MATCH_ANY
          default: MATCH_STRATEGY_UNSPECIFIED
        - name: domainId.value
          description: The value to be matched.
          in: query
          required: false
          type: string
        - name: viewId
          description: Filter results based on view_id.
          in: query
          required: false
          type: string
        - name: limit
          description: The maximum number of items to return. Zero returns everything.
          in: query
          required: false
          type: integer
          format: int32
        - name: name
          description: Filter results which match name.
          in: query
          required: false
          type: string
        - name: page
          description: The page number to fetch. Used with limit.
          in: query
          required: false
          type: integer
          format: int32
      tags:
        - UI
    post:
      summary: Creates a ViewOverride and returns the new ViewOverride.
      operationId: UIService_NewViewOverride
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              uid:
                type: string
                description: Output only. The unique ID of the view override.
                readOnly: true
              userId:
                type: string
                description: The ID of the user this override is used for.
              domainId:
                type: string
                description: Deprecated.
              tenantId:
                type: string
                description: The ID of the tenant this override is used for.
              viewId:
                type: string
                title: 'Required. TODO: ???'
                required:
                  - viewId
              data:
                type: string
              name:
                type: string
                description: Required. The human readable name of the filter.
                required:
                  - name
              isSystemGenerated:
                type: boolean
                description: >-
                  The flag defines the creation type, which is permission
                  controlled.
              createdAt:
                type: string
                description: Creation timestamp in RFC3339 text format.
                readOnly: true
              createdBy:
                type: string
                description: The UID of the User who created this configuration.
                readOnly: true
              updatedAt:
                type: string
                description: Updated timestamp in RFC3339 text format.
                readOnly: true
              updatedBy:
                type: string
                description: The UID of the User who last updated this configuration.
                readOnly: true
              deletedAt:
                type: string
                description: Deletion timestamp in RFC3339 text format.
                readOnly: true
              deletedBy:
                type: string
                description: The UID of the User who deleted this configuration.
                readOnly: true
            required:
              - viewId
              - name
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              viewOverride:
                description: Required. The ViewOverride to create.
                type: object
                properties:
                  uid:
                    type: string
                    description: Output only. The unique ID of the view override.
                    readOnly: true
                  userId:
                    type: string
                    description: The ID of the user this override is used for.
                  domainId:
                    type: string
                    description: Deprecated.
                  tenantId:
                    type: string
                    description: The ID of the tenant this override is used for.
                  viewId:
                    type: string
                    title: 'Required. TODO: ???'
                    required:
                      - viewId
                  data:
                    type: string
                  name:
                    type: string
                    description: Required. The human readable name of the filter.
                    required:
                      - name
                  isSystemGenerated:
                    type: boolean
                    description: >-
                      The flag defines the creation type, which is permission
                      controlled.
                  createdAt:
                    type: string
                    description: Creation timestamp in RFC3339 text format.
                    readOnly: true
                  createdBy:
                    type: string
                    description: The UID of the User who created this configuration.
                    readOnly: true
                  updatedAt:
                    type: string
                    description: Updated timestamp in RFC3339 text format.
                    readOnly: true
                  updatedBy:
                    type: string
                    description: The UID of the User who last updated this configuration.
                    readOnly: true
                  deletedAt:
                    type: string
                    description: Deletion timestamp in RFC3339 text format.
                    readOnly: true
                  deletedBy:
                    type: string
                    description: The UID of the User who deleted this configuration.
                    readOnly: true
                required:
                  - viewId
                  - name
            description: Request message for UIApi.NewViewOverride.
      tags:
        - UI
  '/ui/v1/view-override/{uid}':
    get:
      summary: Gets a ViewOverride by UID.
      operationId: UIService_GetViewOverride
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              uid:
                type: string
                description: Output only. The unique ID of the view override.
                readOnly: true
              userId:
                type: string
                description: The ID of the user this override is used for.
              domainId:
                type: string
                description: Deprecated.
              tenantId:
                type: string
                description: The ID of the tenant this override is used for.
              viewId:
                type: string
                title: 'Required. TODO: ???'
                required:
                  - viewId
              data:
                type: string
              name:
                type: string
                description: Required. The human readable name of the filter.
                required:
                  - name
              isSystemGenerated:
                type: boolean
                description: >-
                  The flag defines the creation type, which is permission
                  controlled.
              createdAt:
                type: string
                description: Creation timestamp in RFC3339 text format.
                readOnly: true
              createdBy:
                type: string
                description: The UID of the User who created this configuration.
                readOnly: true
              updatedAt:
                type: string
                description: Updated timestamp in RFC3339 text format.
                readOnly: true
              updatedBy:
                type: string
                description: The UID of the User who last updated this configuration.
                readOnly: true
              deletedAt:
                type: string
                description: Deletion timestamp in RFC3339 text format.
                readOnly: true
              deletedBy:
                type: string
                description: The UID of the User who deleted this configuration.
                readOnly: true
            required:
              - viewId
              - name
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: uid
          description: The UID of the ViewOverride.
          in: path
          required: true
          type: string
      tags:
        - UI
    delete:
      summary: Deletes a ViewOverride by UID and returns the deleted ViewOverride.
      operationId: UIService_DelViewOverride
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              uid:
                type: string
                description: Output only. The unique ID of the view override.
                readOnly: true
              userId:
                type: string
                description: The ID of the user this override is used for.
              domainId:
                type: string
                description: Deprecated.
              tenantId:
                type: string
                description: The ID of the tenant this override is used for.
              viewId:
                type: string
                title: 'Required. TODO: ???'
                required:
                  - viewId
              data:
                type: string
              name:
                type: string
                description: Required. The human readable name of the filter.
                required:
                  - name
              isSystemGenerated:
                type: boolean
                description: >-
                  The flag defines the creation type, which is permission
                  controlled.
              createdAt:
                type: string
                description: Creation timestamp in RFC3339 text format.
                readOnly: true
              createdBy:
                type: string
                description: The UID of the User who created this configuration.
                readOnly: true
              updatedAt:
                type: string
                description: Updated timestamp in RFC3339 text format.
                readOnly: true
              updatedBy:
                type: string
                description: The UID of the User who last updated this configuration.
                readOnly: true
              deletedAt:
                type: string
                description: Deletion timestamp in RFC3339 text format.
                readOnly: true
              deletedBy:
                type: string
                description: The UID of the User who deleted this configuration.
                readOnly: true
            required:
              - viewId
              - name
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: uid
          description: The UID of the ViewOverride.
          in: path
          required: true
          type: string
      tags:
        - UI
  '/ui/v1/view-override/{viewOverride.uid}':
    put:
      summary: Updates a ViewOverride and returns the updated ViewOverride.
      operationId: UIService_PutViewOverride
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              uid:
                type: string
                description: Output only. The unique ID of the view override.
                readOnly: true
              userId:
                type: string
                description: The ID of the user this override is used for.
              domainId:
                type: string
                description: Deprecated.
              tenantId:
                type: string
                description: The ID of the tenant this override is used for.
              viewId:
                type: string
                title: 'Required. TODO: ???'
                required:
                  - viewId
              data:
                type: string
              name:
                type: string
                description: Required. The human readable name of the filter.
                required:
                  - name
              isSystemGenerated:
                type: boolean
                description: >-
                  The flag defines the creation type, which is permission
                  controlled.
              createdAt:
                type: string
                description: Creation timestamp in RFC3339 text format.
                readOnly: true
              createdBy:
                type: string
                description: The UID of the User who created this configuration.
                readOnly: true
              updatedAt:
                type: string
                description: Updated timestamp in RFC3339 text format.
                readOnly: true
              updatedBy:
                type: string
                description: The UID of the User who last updated this configuration.
                readOnly: true
              deletedAt:
                type: string
                description: Deletion timestamp in RFC3339 text format.
                readOnly: true
              deletedBy:
                type: string
                description: The UID of the User who deleted this configuration.
                readOnly: true
            required:
              - viewId
              - name
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: viewOverride.uid
          description: Output only. The unique ID of the view override.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              viewOverride:
                type: object
                properties:
                  userId:
                    type: string
                    description: The ID of the user this override is used for.
                  domainId:
                    type: string
                    description: Deprecated.
                  tenantId:
                    type: string
                    description: The ID of the tenant this override is used for.
                  viewId:
                    type: string
                    title: 'Required. TODO: ???'
                    required:
                      - viewId
                  data:
                    type: string
                  name:
                    type: string
                    description: Required. The human readable name of the filter.
                    required:
                      - name
                  isSystemGenerated:
                    type: boolean
                    description: >-
                      The flag defines the creation type, which is permission
                      controlled.
                  createdAt:
                    type: string
                    description: Creation timestamp in RFC3339 text format.
                    readOnly: true
                  createdBy:
                    type: string
                    description: The UID of the User who created this configuration.
                    readOnly: true
                  updatedAt:
                    type: string
                    description: Updated timestamp in RFC3339 text format.
                    readOnly: true
                  updatedBy:
                    type: string
                    description: The UID of the User who last updated this configuration.
                    readOnly: true
                  deletedAt:
                    type: string
                    description: Deletion timestamp in RFC3339 text format.
                    readOnly: true
                  deletedBy:
                    type: string
                    description: The UID of the User who deleted this configuration.
                    readOnly: true
                description: Required. The ViewOverride to update.
                title: Required. The ViewOverride to update.
                required:
                  - viewId
                  - name
            description: Request message for UIApi.PutViewOverride.
            required:
              - viewId
              - name
      tags:
        - UI
